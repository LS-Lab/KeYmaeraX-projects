ArchiveEntry "Wall-E & Eve"

ProgramVariables
  Real w;    /* WALL-E position */
  Real v;    /* WALL-E velocity */
  Real u;    /* WALL-E acceleration */
  Real ev;    /* EVE position */
  Real f;    /* EVE velocity */
  Real g;    /* EVE acceleration */
  Real t;    /* time */
End.

Problem
  (w-ev)^2<=1 & v=f -> <{{{ {u:=1;++u:=-1;}^@
                           {g:=1;++g:=-1;}
                           t:=0; {w'=v,v'=u, ev'=f,f'=g, t'=1 & t<=1}^@
                       }^@}* @invariant((w-ev)^2<=1&v=f)}^@> (w-ev)^2<=1
End.

Tactic "Wall-E & Eve: Clever Proof"
  implyR(1) ; dualDirectd(1) ; loop("(w-ev)^2<=1&v=f", 1) ; <(
  prop ; done,
  dualDirectb(1) ; composed(1) ; dualDirectd(1) ; choiceb(1) ; andR(1) ; <(
    assignb(1) ; composed(1) ; choiced(1) ; orR(1) ; hideR(2) ; assignd(1) ; composed(1) ; assignd(1) ; dualDirectd(1) ; dC("v=f", 1) ; <(
      dI(1),
      dI(1)
      ),
    assignb(1) ; composed(1) ; choiced(1) ; orR(1) ; hideR(1) ; assignd(1) ; composed(1) ; assignd(1) ; dualDirectd(1) ; dC("v=f", 1) ; <(
      dI(1),
      dI(1)
      )
    ),
  prop ; done
  )
End.
       
Tactic "Wall-E & Eve: Standard Proof"
  implyR(1) ; dualDirectd(1) ; loop("(w-ev)^2<=1&v=f", 1) ; <(
  prop ; done,
  dualDirectb(1) ; composed(1) ; dualDirectd(1) ; choiceb(1) ; andR(1) ; <(
    assignb(1) ; composed(1) ; choiced(1) ; orR(1) ; hideR(2) ; assignd(1) ; composed(1) ; assignd(1) ; dualDirectd(1) ; solve(1) ; QE,
    assignb(1) ; composed(1) ; choiced(1) ; orR(1) ; hideR(1) ; assignd(1) ; composed(1) ; assignd(1) ; dualDirectd(1) ; solve(1) ; QE
    ),
  prop ; done
  )
End.

End.
       
