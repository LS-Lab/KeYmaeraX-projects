/* Exported from KeYmaera X v4.9.6 */

Theorem "Simple event-triggered nonholonomic integrator: stability"
/*
 * Generated from hybrid automaton
 * A("x' = -x+a*y, y' = -y-a*x, z'= x*(-y-a*x) - y*(-x+a*y) & z>=0")
 * B("x' = -x-a*y, y' = -y+a*x, z'= x*(-y+a*x) - y*(-x-a*y) & z<=0")
 * C("x' = -x, y' = -y, z'= x*(-y) - y*(-x) & z=0")
 *
 * A & B & C --> A & B & C
 */

Definitions
  Real a;
End.

ProgramVariables
  Real z;
  Real x;
  Real y;
End.

Problem
  a > 0 ->
  \forall eps
    (
      eps > 0 ->
      \exists del
        (
          del > 0 &
          \forall z
            \forall y
              \forall x
                (
                  z^2 + y^2 + x^2 < del^2 ->
                  [
                    {
                      {
                        x'=-x + a * y,
                        y'=-y - a * x,
                        z'=x * (-y - a * x) - y * (-x + a * y) &
                        z >= 0
                      }
                      ++
                      {
                        x'=-x - a * y,
                        y'=-y + a * x,
                        z'=x * (-y + a * x) - y * (-x - a * y) &
                        z <= 0
                      }
                      ++
                      {x'=-x, y'=-y, z'=x * (-y) - y * (-x) & z = 0}
                    }*
                  ]
                    z^2 + y^2 + x^2 < eps^2
                )
        )
    )
End.

Tactic "Simple event-triggered nonholonomic integrator: stability: Proof"
implyR('R=="a()>0->\forall eps (eps>0->\exists del (del>0&\forall z \forall y \forall x (z^2+y^2+x^2 < del^2->[{{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}*]z^2+y^2+x^2 < eps^2)))");
stabilityCLF("x^2+y^2+z^2", 'R=="\forall eps (eps>0->\exists del (del>0&\forall z \forall y \forall x (z^2+y^2+x^2 < del^2->[{{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}*]z^2+y^2+x^2 < eps^2)))")
End.

End.

/* Exported from KeYmaera X v4.9.6 */

Theorem "Simple event-triggered nonholonomic integrator: attractivity"
/*
 * Generated from hybrid automaton
 * A("x' = -x+a*y, y' = -y-a*x, z'= x*(-y-a*x) - y*(-x+a*y) & z>=0")
 * B("x' = -x-a*y, y' = -y+a*x, z'= x*(-y+a*x) - y*(-x-a*y) & z<=0")
 * C("x' = -x, y' = -y, z'= x*(-y) - y*(-x) & z=0")
 *
 * A & B & C --> A & B & C
 */

Definitions
  Real a;
End.

ProgramVariables
  Real z;
  Real x;
  Real y;
End.

Problem
  a > 0 ->
  \forall eps
    (
      eps > 0 ->
      \forall del
        (
          del > 0 ->
          \exists T_
            (
              T_ >= 0 &
              \forall z
                \forall y
                  \forall x
                    (
                      z^2 + y^2 + x^2 < del^2 & a/2* (x^2+y^2) >= abs(z) ->
                      [
                        t_:=0;
                        {
                          {
                            t_'=1,
                            x'=-x + a * y,
                            y'=-y - a * x,
                            z'=x * (-y - a * x) - y * (-x + a * y) &
                            z >= 0
                          }
                          ++
                          {
                            t_'=1,
                            x'=-x - a * y,
                            y'=-y + a * x,
                            z'=x * (-y + a * x) - y * (-x - a * y) &
                            z <= 0
                          }
                          ++
                          {t_'=1, x'=-x, y'=-y, z'=x * (-y) - y * (-x) & z = 0}
                        }*
                      ]
                        (t_ >= T_ -> z^2 + y^2 + x^2 < eps^2)
                    )
            )
        )
    )
End.

Tactic "Simple event-triggered nonholonomic integrator: attractivity: Proof"
unfold;
existsRmon("T_>=0&del^2-eps^2*T_<=eps^2", 'R=="\exists T_ (T_>=0&\forall z \forall y \forall x (z^2+y^2+x^2 < del^2&a()/2*(x^2+y^2)>=abs(z)->[t_:=0;{{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}*](t_>=T_->z^2+y^2+x^2 < eps^2)))"); <(
  "Use":
    QE,
  "Show":
    unfold;
    loop("a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_)", 'R=="[{{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}*](t_>=T_->z^2+y^2+x^2 < eps^2)"); <(
      "Init":
        QE,
      "Post":
        QE,
      "Step":
        unfold; <(
          "[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))":
            dC("a()/2*(x^2+y^2)>=z", 'R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))"); <(
              "Use":
                dC("x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_", 'R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))"); <(
                  "Use":
                    ODE('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&(z>=0&a()/2*(x^2+y^2)>=z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_)}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))"),
                  "Show":
                    useAt("DCC", "1", 'R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_)");
                    andR('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&(z>=0&a()/2*(x^2+y^2)>=z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < del^2-eps^2*t_&[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2))"); <(
                      "[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&(z>=0&a()/2*(x^2+y^2)>=z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < del^2-eps^2*t_":
                        dIClose('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&(z>=0&a()/2*(x^2+y^2)>=z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < del^2-eps^2*t_"),
                      "[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2))":
                        dW('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2))");
                        implyR('R=="!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2)");
                        ODE('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2)")
                    )
                ),
              "Show":
                ODE('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}]a()/2*(x^2+y^2)>=z")
            ),
          "[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))":
            dC("a()/2*(x^2+y^2)>=-z", 'R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))"); <(
              "Use":
                dC("x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_", 'R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))"); <(
                  "Use":
                    ODE('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&(z<=0&a()/2*(x^2+y^2)>=-z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_)}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))"),
                  "Show":
                    useAt("DCC", "1", 'R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_)");
                    andR('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&(z<=0&a()/2*(x^2+y^2)>=-z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < del^2-eps^2*t_&[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2))"); <(
                      "[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&(z<=0&a()/2*(x^2+y^2)>=-z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < del^2-eps^2*t_":
                        dIClose('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&(z<=0&a()/2*(x^2+y^2)>=-z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < del^2-eps^2*t_"),
                      "[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2))":
                        dW('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2))");
                        implyR('R=="!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2)");
                        ODE('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2)")
                    )
                ),
              "Show":
                ODE('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}]a()/2*(x^2+y^2)>=-z")
            ),
          "[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))":
            dC("x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_", 'R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))"); <(
              "Use":
                ODE('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_)}](a()/2*(x^2+y^2)>=abs(z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_))"),
              "Show":
                useAt("DCC", "1", 'R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < del^2-eps^2*t_)");
                andR('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < del^2-eps^2*t_&[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2))"); <(
                  "[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < del^2-eps^2*t_":
                    dIClose('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < del^2-eps^2*t_"),
                  "[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2))":
                    dW('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2))");
                    implyR('R=="!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2)");
                    ODE('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2)")
                )
            )
        )
    )
)
End.

End.
