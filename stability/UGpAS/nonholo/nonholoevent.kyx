/* Exported from KeYmaera X v4.9.6 */

Theorem "Event-triggered nonholonomic integrator: stability"
/*
 * Generated from hybrid automaton (modified)
 * A("x' = -x+a*y, y' = -y-a*x, z'= x*(-y-a*x) - y*(-x+a*y) & z>=0")
 * B("x' = -x-a*y, y' = -y+a*x, z'= x*(-y+a*x) - y*(-x-a*y) & z<=0")
 * C("x' = -x, y' = -y, z'= x*(-y) - y*(-x) & z=0")
 *
 * A & B & C --> A & B & C
 */

Definitions
  Real a;
End.

ProgramVariables
  Real z;
  Real x;
  Real y;
  Real c;
  Real u;
  Real v;
End.

Problem
  a > 0 & c > 0 ->
  \forall eps
    (
      eps > 0 ->
      \exists del
        (
          del > 0 &
          \forall z
            \forall y
              \forall x
                (
                  z^2 + y^2 + x^2 < del^2 ->
                  [
                    {
                      if(a/2*(x^2+y^2)>=abs(z)) {
                        {
                          x'=-x + a * y,
                          y'=-y - a * x,
                          z'=x * (-y - a * x) - y * (-x + a * y) &
                          z >= 0
                        }
                        ++
                        {
                          x'=-x - a * y,
                          y'=-y + a * x,
                          z'=x * (-y + a * x) - y * (-x - a * y) &
                          z <= 0
                        }
                        ++
                        {x'=-x, y'=-y, z'=x * (-y) - y * (-x) & z = 0}
                      }
                      else { /* Inapplicable region, note z != 0 */
                        if((x-y)*z<=0){ u:=c;v:=c; }
                        else{ u:=-c;v:=-c; }
                        {
                          {x' = u, y' = v, z'= x*v - y*u & a/2*(x^2+y^2) <= abs(z)} ++
                          {x' = u, y' = v, z'= x*v - y*u & a/2*(x^2+y^2) >= abs(z)}
                        }
                      }
                    }*
                  ]
                    z^2 + y^2 + x^2 < eps^2
                )
        )
    )
End.

Tactic "Event-triggered nonholonomic integrator: stability: Proof"
unfold;
existsRmon("del>0&2/a()*del+del^2 < eps^2", 'R=="\exists del (del>0&\forall z \forall y \forall x (z^2+y^2+x^2 < del^2->[{?a()/2*(x^2+y^2)>=abs(z);{{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}++?!a()/2*(x^2+y^2)>=abs(z);{?(x-y)*z<=0;u:=c;v:=c;++?!(x-y)*z<=0;u:=-c;v:=-c;}{{x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)<=abs(z)}++{x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)>=abs(z)}}}*]z^2+y^2+x^2 < eps^2))"); <(
  "Use":
    QE,
  "Show":
    unfold;
    loop("(a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2)", 'R=="[{?a()/2*(x^2+y^2)>=abs(z);{{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}++?!a()/2*(x^2+y^2)>=abs(z);{?(x-y)*z<=0;u:=c;v:=c;++?!(x-y)*z<=0;u:=-c;v:=-c;}{{x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)<=abs(z)}++{x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)>=abs(z)}}}*]z^2+y^2+x^2 < eps^2"); <(
      "Init":
        QE,
      "Post":
        QE,
      "Step":
        unfold; <(
          "[{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))":
            implyL('L=="a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2") ; <(
        "a()/2*(x^2+y^2)>=abs(z)": propClose,
        "z^2+y^2+x^2 < eps^2": hideL('L=="a()/2*(x^2+y^2) < abs(z)->z^2 < del^2") ; dC("a()/2*(x^2+y^2)>=z", 'R=="[{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))") ; <(
            "Use": dC("z^2+y^2+x^2 < eps^2", 'R=="[{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))") ; <(
                "Use": ODE('R=="[{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&(z>=0&a()/2*(x^2+y^2)>=z)&z^2+y^2+x^2 < eps^2}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))"),
                "Show": ODE('R=="[{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}]z^2+y^2+x^2 < eps^2")
              ),
            "Show": ODE('R=="[{x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}]a()/2*(x^2+y^2)>=z")
          )
      ),
          "[{x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)<=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))":
            hideL('L=="a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2") ; implyL('L=="a()/2*(x^2+y^2) < abs(z)->z^2 < del^2") ; <(
        "a()/2*(x^2+y^2) < abs(z)": QE using "!a()/2*(x^2+y^2)>=abs(z) :: a()/2*(x^2+y^2) < abs(z) :: nil",
        "z^2 < del^2": dC("z^2 < del^2", 'R=="[{x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)<=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))") ; <(
            "Use": ODE('R=="[{x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)<=abs(z)&z^2 < del^2}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))"),
            "Show": solve('R=="[{x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)<=abs(z)}]z^2 < del^2") ; hideL('L=="2/a()*del+del^2 < eps^2") ; hideL('L=="del>0") ; QE
          )
      ),
          "[{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))":
            dC("a()/2*(x^2+y^2)>=-z", 'R=="[{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))") ; <(
        "Use": dC("z^2+y^2+x^2 < eps^2", 'R=="[{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))") ; <(
            "Use": ODE('R=="[{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&(z<=0&a()/2*(x^2+y^2)>=-z)&z^2+y^2+x^2 < eps^2}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))"),
            "Show": ODE('R=="[{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}]z^2+y^2+x^2 < eps^2")
          ),
        "Show": ODE('R=="[{x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}]a()/2*(x^2+y^2)>=-z")
      ),
          "[{x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)<=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))":
            hideL('L=="a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2") ; implyL('L=="a()/2*(x^2+y^2) < abs(z)->z^2 < del^2") ; <(
        "a()/2*(x^2+y^2) < abs(z)": QE using "!a()/2*(x^2+y^2)>=abs(z) :: a()/2*(x^2+y^2) < abs(z) :: nil",
        "z^2 < del^2": dC("z^2 < del^2", 'R=="[{x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)<=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))") ; <(
            "Use": ODE('R=="[{x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)<=abs(z)&z^2 < del^2}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))"),
            "Show": hideL('L=="2/a()*del+del^2 < eps^2") ; hideL('L=="del>0") ; solve('R=="[{x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)<=abs(z)}]z^2 < del^2") ; QE
          )
      ),
          "[{x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))":
            dC("z^2+y^2+x^2 < eps^2", 'R=="[{x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))") ; <(
        "Use": ODE('R=="[{x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0&z^2+y^2+x^2 < eps^2}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))"),
        "Show": ODE('R=="[{x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}]z^2+y^2+x^2 < eps^2")
      ),
          "[{x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)>=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))":
            diffUnpackEvolDomain('R=="[{x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)>=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))") ; propClose,
          "[{x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)>=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))":
            diffUnpackEvolDomain('R=="[{x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)>=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2)&(a()/2*(x^2+y^2)>=abs(z)->z^2+y^2+x^2 < eps^2))") ; propClose
        )
    )
)
End.

End.

/* Exported from KeYmaera X v4.9.6 */

Theorem "Event-triggered nonholonomic integrator: attractivity"
/*
 * Generated from hybrid automaton (modified)
 * A("x' = -x+a*y, y' = -y-a*x, z'= x*(-y-a*x) - y*(-x+a*y) & z>=0")
 * B("x' = -x-a*y, y' = -y+a*x, z'= x*(-y+a*x) - y*(-x-a*y) & z<=0")
 * C("x' = -x, y' = -y, z'= x*(-y) - y*(-x) & z=0")
 *
 * A & B & C --> A & B & C
 */

Definitions
  Real a;
End.

ProgramVariables
  Real z;
  Real x;
  Real y;
  Real c;
  Real u;
  Real v;
End.

Problem
  a > 0 & c > 0 ->
  \forall eps
    (
      eps > 0 ->
      \forall del
        (
          del > 0 ->
          \exists T_
            (
              T_ >= 0 &
              \forall z
                \forall y
                  \forall x
                    (
                      z^2 + y^2 + x^2 < del^2 ->
                      [
                        t_:=0;
                        {
                          /* In applicable region */
                          if(a/2*(x^2+y^2)>=abs(z)) {
                            {
                              t_'=1,
                              x'=-x + a * y,
                              y'=-y - a * x,
                              z'=x * (-y - a * x) - y * (-x + a * y) &
                              z >= 0
                            }
                            ++
                            {
                              t_'=1,
                              x'=-x - a * y,
                              y'=-y + a * x,
                              z'=x * (-y + a * x) - y * (-x - a * y) &
                              z <= 0
                            }
                            ++
                            {t_'=1, x'=-x, y'=-y, z'=x * (-y) - y * (-x) & z = 0}
                          }
                          else { /* Inapplicable region, note z != 0 */
                            if((x-y)*z<=0){ u:=c;v:=c; }
                            else{ u:=-c;v:=-c; }
                            {
                              {t_'=1, x' = u, y' = v, z'= x*v - y*u & a/2*(x^2+y^2) <= abs(z)} ++
                              {t_'=1, x' = u, y' = v, z'= x*v - y*u & a/2*(x^2+y^2) >= abs(z)}
                            }
                          }
                        }*
                      ]
                        (t_ >= T_ -> z^2 + y^2 + x^2 < eps^2)
                    )
            )
        )
    )
End.

Tactic "Event-triggered nonholonomic integrator: attractivity: Proof"
unfold ; cut("\exists T_0 (T_0>=0&\forall y \forall x (x^2+y^2 < del^2->\forall t_ (t_>=T_0->a()/2*((x+c*t_)^2+(y+c*t_)^2)>=del&a()/2*((x-c*t_)^2+(y-c*t_)^2)>=del)))") ; <(
  "Use": unfold ; existsRmon("T_>=T_0&2/a()*del+del^2-eps^2*(T_-T_0)<=eps^2", 'R=="\exists T_ (T_>=0&\forall z \forall y \forall x (z^2+y^2+x^2 < del^2->[t_:=0;{?a()/2*(x^2+y^2)>=abs(z);{{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}++?!a()/2*(x^2+y^2)>=abs(z);{?(x-y)*z<=0;u:=c;v:=c;++?!(x-y)*z<=0;u:=-c;v:=-c;}{{t_'=1,x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)<=abs(z)}++{t_'=1,x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)>=abs(z)}}}*](t_>=T_->z^2+y^2+x^2 < eps^2)))") ; <(
      "Use": hideL('L=="\forall y \forall x (x^2+y^2 < del^2->\forall t_ (t_>=T_0->a()/2*((x+c*t_)^2+(y+c*t_)^2)>=del&a()/2*((x-c*t_)^2+(y-c*t_)^2)>=del))") ; QE,
      "Show": unfold ; <(
          "T_>=0": QE using "T_0>=0 :: T_>=T_0 :: T_>=0 :: nil",
          "\forall z \forall y \forall x (z^2+y^2+x^2 < del^2->[t_:=0;{?a()/2*(x^2+y^2)>=abs(z);{{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}++?!a()/2*(x^2+y^2)>=abs(z);{?(x-y)*z<=0;u:=c;v:=c;++?!(x-y)*z<=0;u:=-c;v:=-c;}{{t_'=1,x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)<=abs(z)}++{t_'=1,x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)>=abs(z)}}}*](t_>=T_->z^2+y^2+x^2 < eps^2))": allL('L=="\forall y \forall x (x^2+y^2 < del^2->\forall t__0 (t__0>=T_0->a()/2*((x+c*t__0)^2+(y+c*t__0)^2)>=del&a()/2*((x-c*t__0)^2+(y-c*t__0)^2)>=del))") ; allL('L=="\forall x (x^2+y^2 < del^2->\forall t__0 (t__0>=T_0->a()/2*((x+c*t__0)^2+(y+c*t__0)^2)>=del&a()/2*((x-c*t__0)^2+(y-c*t__0)^2)>=del))") ; implyL('L=="x^2+y^2 < del^2->\forall t__0 (t__0>=T_0->a()/2*((x+c*t__0)^2+(y+c*t__0)^2)>=del&a()/2*((x-c*t__0)^2+(y-c*t__0)^2)>=del)") ; <(
              "x^2+y^2 < del^2": QE using "z^2+y^2+x^2 < del^2 :: x^2+y^2 < del^2 :: nil",
              "\forall t__0 (t__0>=T_0->a()/2*((x+c*t__0)^2+(y+c*t__0)^2)>=del&a()/2*((x-c*t__0)^2+(y-c*t__0)^2)>=del)": loop("(a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=old(x)+c*t_&y=old(y)+c*t_)&((x-y)*z>0->x=old(x)-c*t_&y=old(y)-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0))", 'R=="[{?a()/2*(x^2+y^2)>=abs(z);{{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}++?!a()/2*(x^2+y^2)>=abs(z);{?(x-y)*z<=0;u:=c;v:=c;++?!(x-y)*z<=0;u:=-c;v:=-c;}{{t_'=1,x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)<=abs(z)}++{t_'=1,x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)>=abs(z)}}}*](t_>=T_->z^2+y^2+x^2 < eps^2)") ; <(
                  "Init": hideL('L=="\forall t__0 (t__0>=T_0->a()/2*((x_0+c*t__0)^2+(y_0+c*t__0)^2)>=del&a()/2*((x_0-c*t__0)^2+(y_0-c*t__0)^2)>=del)") ; QE,
                  "Post": implyR('R=="t_>=T_->z^2+y^2+x^2 < eps^2") ; allL("t_", 'L=="\forall t__0 (t__0>=T_0->a()/2*((x_0+c*t__0)^2+(y_0+c*t__0)^2)>=del&a()/2*((x_0-c*t__0)^2+(y_0-c*t__0)^2)>=del)") ; implyL('L=="t_>=T_0->a()/2*((x_0+c*t_)^2+(y_0+c*t_)^2)>=del&a()/2*((x_0-c*t_)^2+(y_0-c*t_)^2)>=del") ; <(
                      "t_>=T_0": QE using "T_>=T_0 :: t_>=T_ :: t_>=T_0 :: nil",
                      "a()/2*((x_0+c*t_)^2+(y_0+c*t_)^2)>=del&a()/2*((x_0-c*t_)^2+(y_0-c*t_)^2)>=del": cut("a()/2*(x^2+y^2) < abs(z)|a()/2*(x^2+y^2)>=abs(z)") ; <(
                          "Use": unfold ; orL('L=="a()/2*(x^2+y^2) < abs(z)|a()/2*(x^2+y^2)>=abs(z)") ; <(
                              "a()/2*(x^2+y^2) < abs(z)": hideFactsAbout("eps") ; QE,
                              "a()/2*(x^2+y^2)>=abs(z)": hideL('L=="a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)") ; implyL('L=="a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)") ; <(
                                  "a()/2*(x^2+y^2)>=abs(z)": propClose,
                                  "x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)": QE
                                )
                            ),
                          "Show": QE using "a()/2*(x^2+y^2) < abs(z)|a()/2*(x^2+y^2)>=abs(z)"
                        )
                    ),
                  "Step": hideFactsAbout("T_") ; unfold ; <(
                      "[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))": unfold ; hideL('L=="a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)") ; hideL('L=="\forall t__0 (t__0>=T_0->a()/2*((x_0+c*t__0)^2+(y_0+c*t__0)^2)>=del&a()/2*((x_0-c*t__0)^2+(y_0-c*t__0)^2)>=del)") ; implyL('L=="a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)") ; <(
                          "a()/2*(x^2+y^2)>=abs(z)": propClose,
                          "x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)": dC("a()/2*(x^2+y^2)>=z", 'R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; <(
                              "Use": dC("x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)", 'R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; <(
                                  "Use": ODE('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&(z>=0&a()/2*(x^2+y^2)>=z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0))}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))"),
                                  "Show": useAt("DCC", "1", 'R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0))") ; andR('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&(z>=0&a()/2*(x^2+y^2)>=z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)&[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2))") ; <(
                                      "[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&(z>=0&a()/2*(x^2+y^2)>=z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)": dIClose('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&(z>=0&a()/2*(x^2+y^2)>=z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)"),
                                      "[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2))": dW('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2))") ; implyR('R=="!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2)") ; ODE('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0&a()/2*(x^2+y^2)>=z}](!x^2+y^2+z^2>=eps^2)")
                                    )
                                ),
                              "Show": ODE('R=="[{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}]a()/2*(x^2+y^2)>=z")
                            )
                        ),
                      "[{t_'=1,x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)<=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))": hideL('L=="a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)") ; implyL('L=="a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)") ; <(
                          "a()/2*(x^2+y^2) < abs(z)": notGreaterEqual('L=="!a()/2*(x^2+y^2)>=abs(z)") ; propClose,
                          "z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)": unfold ; hideL('L=="(x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_") ; implyL('L=="(x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_") ; <(
                              "(x-y)*z<=0": propClose,
                              "x=x_0+c*t_&y=y_0+c*t_": dC("(x-y)*z<=0&x=x_0+c*t_&y=y_0+c*t_&z^2 < del^2", 'R=="[{t_'=1,x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)<=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; <(
                                  "Use": dW('R=="[{t_'=1,x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)<=abs(z)&(x-y)*z<=0&x=x_0+c*t_&y=y_0+c*t_&z^2 < del^2}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; unfold ; allL("t_", 'L=="\forall t__0 (t__0>=T_0->a()/2*((x_0+c*t__0)^2+(y_0+c*t__0)^2)>=del&a()/2*((x_0-c*t__0)^2+(y_0-c*t__0)^2)>=del)") ; andR('R=="(a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0))") ; <(
                                      "a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)": QE,
                                      "a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)": unfold ; implyL('L=="t_>=T_0->a()/2*((x_0+c*t_)^2+(y_0+c*t_)^2)>=del&a()/2*((x_0-c*t_)^2+(y_0-c*t_)^2)>=del") ; <(
                                          "t_>=T_0": hideL('L=="eps>0") ; hideL('L=="x^2+y^2+z^2>=eps^2") ; QE,
                                          "a()/2*((x_0+c*t_)^2+(y_0+c*t_)^2)>=del&a()/2*((x_0-c*t_)^2+(y_0-c*t_)^2)>=del": hideL('L=="eps>0") ; hideL('L=="x^2+y^2+z^2>=eps^2") ; hideR('R=="x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)") ; QE
                                        )
                                    ),
                                  "Show": hideL('L=="\forall t__0 (t__0>=T_0->a()/2*((x_0+c*t__0)^2+(y_0+c*t__0)^2)>=del&a()/2*((x_0-c*t__0)^2+(y_0-c*t__0)^2)>=del)") ; hideL('L=="T_0>=0") ; hideL('L=="!a()/2*(x^2+y^2)>=abs(z)") ; solve('R=="[{t_'=1,x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)<=abs(z)}]((x-y)*z<=0&x=x_0+c*t_&y=y_0+c*t_&z^2 < del^2)") ; QE
                                )
                            )
                        ),
                      "[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))": hideL('L=="a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)") ; hideL('L=="\forall t__0 (t__0>=T_0->a()/2*((x_0+c*t__0)^2+(y_0+c*t__0)^2)>=del&a()/2*((x_0-c*t__0)^2+(y_0-c*t__0)^2)>=del)") ; implyL('L=="a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)") ; <(
                          "a()/2*(x^2+y^2)>=abs(z)": propClose,
                          "x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)": dC("a()/2*(x^2+y^2)>=-z", 'R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; <(
                              "Use": dC("x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)", 'R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; <(
                                  "Use": ODE('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&(z<=0&a()/2*(x^2+y^2)>=-z)&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0))}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))"),
                                  "Show": useAt("DCC", "1", 'R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0))") ; andR('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&(z<=0&a()/2*(x^2+y^2)>=-z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)&[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2))") ; <(
                                      "[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&(z<=0&a()/2*(x^2+y^2)>=-z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)": dIClose('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&(z<=0&a()/2*(x^2+y^2)>=-z)&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)"),
                                      "[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2))": dW('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2))") ; implyR('R=="!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2)") ; ODE('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0&a()/2*(x^2+y^2)>=-z}](!x^2+y^2+z^2>=eps^2)")
                                    )
                                ),
                              "Show": ODE('R=="[{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}]a()/2*(x^2+y^2)>=-z")
                            )
                        ),
                      "[{t_'=1,x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)<=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))": hideL('L=="a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)") ; implyL('L=="a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)") ; <(
                          "a()/2*(x^2+y^2) < abs(z)": notGreaterEqual('L=="!a()/2*(x^2+y^2)>=abs(z)") ; propClose,
                          "z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)": dC("(x-y)*z>0&x=x_0-c*t_&y=y_0-c*t_&z^2 < del^2", 'R=="[{t_'=1,x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)<=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; <(
                              "Use": dW('R=="[{t_'=1,x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)<=abs(z)&(x-y)*z>0&x=x_0-c*t_&y=y_0-c*t_&z^2 < del^2}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; unfold ; allL("t_", 'L=="\forall t__0 (t__0>=T_0->a()/2*((x_0+c*t__0)^2+(y_0+c*t__0)^2)>=del&a()/2*((x_0-c*t__0)^2+(y_0-c*t__0)^2)>=del)") ; andR('R=="(a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0))") ; <(
                                  "a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)": QE,
                                  "a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)": unfold ; implyL('L=="t_>=T_0->a()/2*((x_0+c*t_)^2+(y_0+c*t_)^2)>=del&a()/2*((x_0-c*t_)^2+(y_0-c*t_)^2)>=del") ; <(
                                      "t_>=T_0": hideL('L=="x^2+y^2+z^2>=eps^2") ; QE,
                                      "a()/2*((x_0+c*t_)^2+(y_0+c*t_)^2)>=del&a()/2*((x_0-c*t_)^2+(y_0-c*t_)^2)>=del": QE
                                    )
                                ),
                              "Show": hideL('L=="\forall t__0 (t__0>=T_0->a()/2*((x_0+c*t__0)^2+(y_0+c*t__0)^2)>=del&a()/2*((x_0-c*t__0)^2+(y_0-c*t__0)^2)>=del)") ; solve('R=="[{t_'=1,x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)<=abs(z)}]((x-y)*z>0&x=x_0-c*t_&y=y_0-c*t_&z^2 < del^2)") ; hideL('L=="eps>0") ; QE
                            )
                        ),
                      "[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))": hideL('L=="\forall t__0 (t__0>=T_0->a()/2*((x_0+c*t__0)^2+(y_0+c*t__0)^2)>=del&a()/2*((x_0-c*t__0)^2+(y_0-c*t__0)^2)>=del)") ; hideL('L=="a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_)") ; implyL('L=="a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)") ; <(
                          "a()/2*(x^2+y^2)>=abs(z)": propClose,
                          "x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)": dC("x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)", 'R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; <(
                              "Use": ODE('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0&(x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0))}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))"),
                              "Show": useAt("DCC", "1", 'R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0))") ; andR('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)&[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2))") ; <(
                                  "[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)": dIClose('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0&x^2+y^2+z^2>=eps^2}]x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)"),
                                  "[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2))": dW('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2))") ; implyR('R=="!x^2+y^2+z^2>=eps^2->[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2)") ; ODE('R=="[{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}](!x^2+y^2+z^2>=eps^2)")
                                )
                            )
                        ),
                      "[{t_'=1,x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)>=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))": diffUnpackEvolDomain('R=="[{t_'=1,x'=c,y'=c,z'=x*c-y*c&a()/2*(x^2+y^2)>=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; propClose,
                      "[{t_'=1,x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)>=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))": diffUnpackEvolDomain('R=="[{t_'=1,x'=-c,y'=-c,z'=x*(-c)-y*(-c)&a()/2*(x^2+y^2)>=abs(z)}]((a()/2*(x^2+y^2) < abs(z)->z^2 < del^2&((x-y)*z<=0->x=x_0+c*t_&y=y_0+c*t_)&((x-y)*z>0->x=x_0-c*t_&y=y_0-c*t_))&(a()/2*(x^2+y^2)>=abs(z)->x^2+y^2+z^2>=eps^2->x^2+y^2+z^2 < 2/a()*del+del^2-eps^2*(t_-T_0)))") ; propClose
                    )
                )
            )
        )
    ),
  "Show": hideR('R=="\exists T_ (T_>=0&\forall z \forall y \forall x (z^2+y^2+x^2 < del^2->[t_:=0;{?a()/2*(x^2+y^2)>=abs(z);{{t_'=1,x'=-x+a()*y,y'=-y-a()*x,z'=x*(-y-a()*x)-y*(-x+a()*y)&z>=0}++{t_'=1,x'=-x-a()*y,y'=-y+a()*x,z'=x*(-y+a()*x)-y*(-x-a()*y)&z<=0}++{t_'=1,x'=-x,y'=-y,z'=x*(-y)-y*(-x)&z=0}}++?!a()/2*(x^2+y^2)>=abs(z);{?(x-y)*z<=0;u:=c;v:=c;++?!(x-y)*z<=0;u:=-c;v:=-c;}{{t_'=1,x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)<=abs(z)}++{t_'=1,x'=u,y'=v,z'=x*v-y*u&a()/2*(x^2+y^2)>=abs(z)}}}*](t_>=T_->z^2+y^2+x^2 < eps^2)))") ; existsRmon("T_0>=0&\forall y \forall x (x^2+y^2 < del^2->\forall t_ (t_>=T_0->a()/2*(x+c*t_)^2>=del&a()/2*(x-c*t_)^2>=del))", 'R=="\exists T_0 (T_0>=0&\forall y \forall x (x^2+y^2 < del^2->\forall t_ (t_>=T_0->a()/2*((x+c*t_)^2+(y+c*t_)^2)>=del&a()/2*((x-c*t_)^2+(y-c*t_)^2)>=del)))") ; <(
      "Use": QE,
      "Show": unfold ; andR('R=="T_0>=0&\forall y \forall x (x^2+y^2 < del^2->\forall t_ (t_>=T_0->a()/2*((x+c*t_)^2+(y+c*t_)^2)>=del&a()/2*((x-c*t_)^2+(y-c*t_)^2)>=del))") ; <(
          "T_0>=0": propClose,
          "\forall y \forall x (x^2+y^2 < del^2->\forall t_ (t_>=T_0->a()/2*((x+c*t_)^2+(y+c*t_)^2)>=del&a()/2*((x-c*t_)^2+(y-c*t_)^2)>=del))": unfold ; allL('L=="\forall y \forall x (x^2+y^2 < del^2->\forall t_ (t_>=T_0->a()/2*(x+c*t_)^2>=del&a()/2*(x-c*t_)^2>=del))") ; allL('L=="\forall x (x^2+y^2 < del^2->\forall t_ (t_>=T_0->a()/2*(x+c*t_)^2>=del&a()/2*(x-c*t_)^2>=del))") ; implyL('L=="x^2+y^2 < del^2->\forall t_ (t_>=T_0->a()/2*(x+c*t_)^2>=del&a()/2*(x-c*t_)^2>=del)") ; <(
              "x^2+y^2 < del^2": propClose,
              "\forall t_ (t_>=T_0->a()/2*(x+c*t_)^2>=del&a()/2*(x-c*t_)^2>=del)": allL('L=="\forall t_ (t_>=T_0->a()/2*(x+c*t_)^2>=del&a()/2*(x-c*t_)^2>=del)") ; QE
            )
        )
    )
)
End.

End.
