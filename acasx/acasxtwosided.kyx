SharedDefinitions.
  Real hp;   /* puck height */
  Real rp;   /* puck radius */
  Real alo;  /* minimal vertical acceleration. Typically g/4 */
  Real aup;  /* maximum vertical acceleration */

  /* velocity bound 1 = lower, -1 = upper */
  Real wUp = -1;
  Real wLo = 1;

  Real maxI(Real v1, Real v2, Real w) = max(0, w * (v1 - v2));

  Bool A(Real tn, Real hn, Real v, Real w, Real vlo) <-> (
      (0<=tn & tn< maxI(vlo,v,w)/alo & hn=w*alo/2*tn^2+v*tn)
    | (        tn>=maxI(vlo,v,w)/alo & hn=vlo*tn-w*maxI(vlo,v,w)^2/(2*alo))
  );

  Bool Limpl(Real r, Real h, Real v, Real w, Real vlo, Real rv) <-> \forall tn \forall rn \forall hn (
    rn=rv*tn & A(tn,hn,v,w,vlo) -> abs(r-rn)>rp | w*(h-hn) < -hp
  );

  Bool Aup(Real tn, Real hn, Real v, Real w, Real vup) <-> (
      (0<=tn & tn< maxI(vup,v,w)/aup & hn=w*aup/2*tn^2+v*tn)
    | (        tn>=maxI(vup,v,w)/aup & hn=w*max(w*vup,w*v)*tn - (w*maxI(vup,v,w)^2)/(2*aup))
  );
  
  Bool Uimpl(Real r, Real h, Real v, Real w, Real vup, Real rv) <-> \forall tn \forall rn \forall hn (
      rn=rv*tn & Aup(tn,hn,v,w,vup) -> abs(r-rn)>rp | w*(h-hn)>hp
  );

  Bool Cimpl(Real r, Real h, Real v, Real w, Real vlo, Real vup, Real rv) <-> Limpl(r,h,v,w,vlo,rv) | Uimpl(r,h,v,w,vup,rv);

  Bool init(Real w, Real rv) <-> rp>=0 & hp>0 & rv>=0 & alo>0 & aup>=alo & (w=wUp | w=wLo);

  Bool loopInv(Real r, Real h, Real v, Real w, Real vlo, Real vup, Real rv) <-> init(w,rv) & Cimpl(r,h,v,w,vlo,vup,rv);

  Bool advisoryLo(Real v, Real w, Real vlo, Real a) <-> w*v>=w*vlo | w*a>=alo;

  Bool advisoryUp(Real v, Real w, Real vup, Real a) <-> ( (w*v<=w*vup & w*a<=aup) | w*a<=0 );

  HP motion ::= { r' = -rv, h' = -v, v' = a & advisoryLo(v,w,vlo,a) & advisoryUp(v,w,vup,a) };
End.

Lemma "ACAS X/Two-sided safe implicit low"

ProgramVariables
  Real w;
  Real v;
  Real vlo;
  Real a;
  Real h;
  Real rv;
  Real r;
  Real t;
End.

Problem
    advisoryLo(v, w, vlo, a)
  & Limpl(r, h, v, w, vlo, rv)
  & init(w, rv)
  & advisoryLo(a*t+v, w, vlo, a)
  & t>=0
  -> 
  Limpl((-rv)*t+r, -(a*(t^2/2)+v*t)+h, a*t+v, w, vlo, rv)
End.

Tactic "ACAS X/Proof Two-sided safe implicit low".
implyR('R=="advisoryLo(v,w,vlo,a)&Limpl(r,h,v,w,vlo,rv)&init(w,rv)&advisoryLo(a*t+v,w,vlo,a)&t>=0->Limpl((-rv)*t+r,-(a*(t^2/2)+v*t)+h,a*t+v,w,vlo,rv)");
andL('L)*;
expand "Limpl";
allR('R=="\forall tn \forall rn \forall hn (rn=rv*tn&A(tn,hn,a*t+v,w,vlo)->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn) < -hp())");
allR('R=="\forall rn \forall hn (rn=rv*tn&A(tn,hn,a*t+v,w,vlo)->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn) < -hp())");
allR('R=="\forall hn (rn=rv*tn&A(tn,hn,a*t+v,w,vlo)->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn) < -hp())");
implyR('R=="rn=rv*tn&A(tn,hn,a*t+v,w,vlo)->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn) < -hp()");
andL('L=="rn=rv*tn&A(tn,hn,a*t+v,w,vlo)");
orR('R=="abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn) < -hp()");
allL("t+tn", 'L=="\forall tn \forall rn \forall hn (rn=rv*tn&A(tn,hn,v,w,vlo)->abs(r-rn)>rp()|w*(h-hn) < -hp())");
allL("rv*(t+tn)", 'L=="\forall rn \forall hn (rn=rv*(t+tn)&A(t+tn,hn,v,w,vlo)->abs(r-rn)>rp()|w*(h-hn) < -hp())");
cut("0<=t+tn&t+tn < maxI(vlo,v,w)/alo()|t+tn>=maxI(vlo,v,w)/alo()"); <(
  "Use":
    orL('L=="0<=t+tn&t+tn < maxI(vlo,v,w)/alo()|t+tn>=maxI(vlo,v,w)/alo()"); <(
      "0<=t+tn&t+tn < maxI(vlo,v,w)/alo()":
        allL("w*alo()/2*(t+tn)^2+v*(t+tn)", 'L=="\forall hn (rv*(t+tn)=rv*(t+tn)&A(t+tn,hn,v,w,vlo)->abs(r-rv*(t+tn))>rp()|w*(h-hn) < -hp())");
        implyL('L=="rv*(t+tn)=rv*(t+tn)&A(t+tn,w*alo()/2*(t+tn)^2+v*(t+tn),v,w,vlo)->abs(r-rv*(t+tn))>rp()|w*(h-(w*alo()/2*(t+tn)^2+v*(t+tn))) < -hp()"); <(
          "rv*(t+tn)=rv*(t+tn)&A(t+tn,w*alo()/2*(t+tn)^2+v*(t+tn),v,w,vlo)":
            simplify('R=="rv*(t+tn)=rv*(t+tn)&A(t+tn,w*alo()/2*(t+tn)^2+v*(t+tn),v,w,vlo)");
            QE using "init(w,rv) :: t>=0 :: rn=rv*tn :: A(tn,hn,a*t+v,w,vlo) :: 0<=t+tn&t+tn < maxI(vlo,v,w)/alo() :: A(t+tn,w*alo()/2*(t+tn)^2+v*(t+tn),v,w,vlo) :: nil",
          "abs(r-rv*(t+tn))>rp()|w*(h-(w*alo()/2*(t+tn)^2+v*(t+tn))) < -hp()":
            orL('L=="abs(r-rv*(t+tn))>rp()|w*(h-(w*alo()/2*(t+tn)^2+v*(t+tn))) < -hp()"); <(
              "abs(r-rv*(t+tn))>rp()":
                QE using "abs(r-rv*(t+tn))>rp() :: init(w,rv) :: t>=0 :: rn=rv*tn :: abs((-rv)*t+r-rn)>rp() :: nil",
              "w*(h-(w*alo()/2*(t+tn)^2+v*(t+tn))) < -hp()":
                expand "A";
                orL('L=="0<=tn&tn < maxI(vlo,a*t+v,w)/alo()&hn=w*alo()/2*tn^2+(a*t+v)*tn|tn>=maxI(vlo,a*t+v,w)/alo()&hn=vlo*tn-w*maxI(vlo,a*t+v,w)^2/(2*alo())"); <(
                  "0<=tn&tn < maxI(vlo,a*t+v,w)/alo()&hn=w*alo()/2*tn^2+(a*t+v)*tn":
                    QE using "w*(h-(w*alo()/2*(t+tn)^2+v*(t+tn))) < -hp() :: init(w,rv) :: advisoryLo(a*t+v,w,vlo,a) :: t>=0 :: 0<=tn&tn < maxI(vlo,a*t+v,w)/alo()&hn=w*alo()/2*tn^2+(a*t+v)*tn :: 0<=t+tn&t+tn < maxI(vlo,v,w)/alo() :: w*(-(a*(t^2/2)+v*t)+h-hn) < -hp() :: nil",
                  "tn>=maxI(vlo,a*t+v,w)/alo()&hn=vlo*tn-w*maxI(vlo,a*t+v,w)^2/(2*alo())":
                    expand "init";
                    andL('L)*;
                    orL('L=="w=wUp()|w=wLo()"); <(
                      "w=wUp()":
                        QE using "w*(h-(w*alo()/2*(t+tn)^2+v*(t+tn))) < -hp() :: t>=0 :: rp()>=0 :: tn>=maxI(vlo,a*t+v,w)/alo() :: hn=vlo*tn-w*maxI(vlo,a*t+v,w)^2/(2*alo()) :: 0<=t+tn :: t+tn < maxI(vlo,v,w)/alo() :: hp()>0 :: rv>=0 :: alo()>0 :: aup()>=alo() :: w=wUp() :: w*(-(a*(t^2/2)+v*t)+h-hn) < -hp() :: nil",
                      "w=wLo()":
                        QE using "w*(h-(w*alo()/2*(t+tn)^2+v*(t+tn))) < -hp() :: t>=0 :: rp()>=0 :: tn>=maxI(vlo,a*t+v,w)/alo() :: hn=vlo*tn-w*maxI(vlo,a*t+v,w)^2/(2*alo()) :: 0<=t+tn :: t+tn < maxI(vlo,v,w)/alo() :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: w*(-(a*(t^2/2)+v*t)+h-hn) < -hp() :: nil"
                    )
                )
            )
        ),
      "t+tn>=maxI(vlo,v,w)/alo()":
        allL("vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo())", 'L=="\forall hn (rv*(t+tn)=rv*(t+tn)&A(t+tn,hn,v,w,vlo)->abs(r-rv*(t+tn))>rp()|w*(h-hn) < -hp())");
        implyL('L=="rv*(t+tn)=rv*(t+tn)&A(t+tn,vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()),v,w,vlo)->abs(r-rv*(t+tn))>rp()|w*(h-(vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()))) < -hp()"); <(
          "rv*(t+tn)=rv*(t+tn)&A(t+tn,vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()),v,w,vlo)":
            QE using "init(w,rv) :: t>=0 :: rn=rv*tn :: A(tn,hn,a*t+v,w,vlo) :: t+tn>=maxI(vlo,v,w)/alo() :: rv*(t+tn)=rv*(t+tn)&A(t+tn,vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()),v,w,vlo) :: nil",
          "abs(r-rv*(t+tn))>rp()|w*(h-(vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()))) < -hp()":
            orL('L=="abs(r-rv*(t+tn))>rp()|w*(h-(vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()))) < -hp()"); <(
              "abs(r-rv*(t+tn))>rp()":
                QE using "abs(r-rv*(t+tn))>rp() :: init(w,rv) :: t>=0 :: rn=rv*tn :: abs((-rv)*t+r-rn)>rp() :: nil",
              "w*(h-(vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()))) < -hp()":
                expand "A";
                orL('L=="0<=tn&tn < maxI(vlo,a*t+v,w)/alo()&hn=w*alo()/2*tn^2+(a*t+v)*tn|tn>=maxI(vlo,a*t+v,w)/alo()&hn=vlo*tn-w*maxI(vlo,a*t+v,w)^2/(2*alo())"); <(
                  "0<=tn&tn < maxI(vlo,a*t+v,w)/alo()&hn=w*alo()/2*tn^2+(a*t+v)*tn":
                    expand "init";
                    andL('L)*;
                    orL('L=="w=wUp()|w=wLo()"); <(
                      "w=wUp()":
                        QE using "w*(h-(vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()))) < -hp() :: advisoryLo(a*t+v,w,vlo,a) :: t>=0 :: t+tn>=maxI(vlo,v,w)/alo() :: rp()>=0 :: 0<=tn :: hp()>0 :: tn < maxI(vlo,a*t+v,w)/alo() :: hn=w*alo()/2*tn^2+(a*t+v)*tn :: rv>=0 :: alo()>0 :: w=wUp() :: w*(-(a*(t^2/2)+v*t)+h-hn) < -hp() :: nil",
                      "w=wLo()":
                        QE using "w*(h-(vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()))) < -hp() :: advisoryLo(a*t+v,w,vlo,a) :: t>=0 :: t+tn>=maxI(vlo,v,w)/alo() :: rp()>=0 :: 0<=tn :: hp()>0 :: tn < maxI(vlo,a*t+v,w)/alo() :: hn=w*alo()/2*tn^2+(a*t+v)*tn :: rv>=0 :: alo()>0 :: w=wLo() :: w*(-(a*(t^2/2)+v*t)+h-hn) < -hp() :: nil"
                    ),
                  "tn>=maxI(vlo,a*t+v,w)/alo()&hn=vlo*tn-w*maxI(vlo,a*t+v,w)^2/(2*alo())":
                    expand "init";
                    andL('L)*;
                    orL('L=="w=wUp()|w=wLo()"); <(
                      "w=wUp()":
                        QE using "advisoryLo(v,w,vlo,a) :: w*(h-(vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()))) < -hp() :: advisoryLo(a*t+v,w,vlo,a) :: t>=0 :: t+tn>=maxI(vlo,v,w)/alo() :: rp()>=0 :: tn>=maxI(vlo,a*t+v,w)/alo() :: hn=vlo*tn-w*maxI(vlo,a*t+v,w)^2/(2*alo()) :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: w*(-(a*(t^2/2)+v*t)+h-hn) < -hp() :: nil",
                      "w=wLo()":
                        QE using "advisoryLo(v,w,vlo,a) :: w*(h-(vlo*(t+tn)-w*maxI(vlo,v,w)^2/(2*alo()))) < -hp() :: advisoryLo(a*t+v,w,vlo,a) :: t>=0 :: t+tn>=maxI(vlo,v,w)/alo() :: rp()>=0 :: tn>=maxI(vlo,a*t+v,w)/alo() :: hn=vlo*tn-w*maxI(vlo,a*t+v,w)^2/(2*alo()) :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: w*(-(a*(t^2/2)+v*t)+h-hn) < -hp() :: nil"
                    )
                )
            )
        )
    ),
  "Show":
    QE using "init(w,rv) :: t>=0 :: rn=rv*tn :: A(tn,hn,a*t+v,w,vlo) :: 0<=t+tn&t+tn < maxI(vlo,v,w)/alo()|t+tn>=maxI(vlo,v,w)/alo() :: nil"
)
End.

End.

Lemma "ACAS X/Two-sided safe implicit up".

ProgramVariables.
  Real w;
  Real vup;
  Real v;
  Real a;
  Real h;
  Real rv;
  Real r;
  Real t;
End.

Problem.
/*
    advisoryUp(w,vM,vlo,ao)
  & (w=wUp()|w=wLo())
  & CM(w,vM,vlo,r,h)
  & init(aM())
  & advisoryUp(w,vM,ao*t_+vlo,ao)
  & t_>=0
  -> CM(w, vM, ao*t_+vlo, (-rv)*t_+r, -(ao/2*t_^2+vlo*t_)+h)
*/
    advisoryUp(v, w, vup, a)
  & Uimpl(r, h, v, w, vup, rv)
  & init(w, rv)
  & advisoryUp(a*t+v, w, vup, a)
  & t>=0
  ->
  Uimpl((-rv)*t+r, -(a*(t^2/2)+v*t)+h, a*t+v, w, vup, rv)
End.

Tactic "ACAS X/Proof Two-sided safe implicit up"
implyR('R=="advisoryUp(v,w,vup,a)&Uimpl(r,h,v,w,vup,rv)&init(w,rv)&advisoryUp(a*t+v,w,vup,a)&t>=0->Uimpl((-rv)*t+r,-(a*(t^2/2)+v*t)+h,a*t+v,w,vup,rv)");
andL('L)*;
expand "Uimpl";
allR('R=="\forall tn \forall rn \forall hn (rn=rv*tn&Aup(tn,hn,a*t+v,w,vup)->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn)>hp())");
allR('R=="\forall rn \forall hn (rn=rv*tn&Aup(tn,hn,a*t+v,w,vup)->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn)>hp())");
allR('R=="\forall hn (rn=rv*tn&Aup(tn,hn,a*t+v,w,vup)->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn)>hp())");
implyR('R=="rn=rv*tn&Aup(tn,hn,a*t+v,w,vup)->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn)>hp()");
orR('R=="abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn)>hp()");
cut("0<=t+tn&t+tn < maxI(vup,v,w)/aup()|t+tn>=maxI(vup,v,w)/aup()"); <(
  "Use":
    allL("t+tn", 'L=="\forall tn \forall rn \forall hn (rn=rv*tn&Aup(tn,hn,v,w,vup)->abs(r-rn)>rp()|w*(h-hn)>hp())");
    allL("rv*(t+tn)", 'L=="\forall rn \forall hn (rn=rv*(t+tn)&Aup(t+tn,hn,v,w,vup)->abs(r-rn)>rp()|w*(h-hn)>hp())");
    orL('L=="0<=t+tn&t+tn < maxI(vup,v,w)/aup()|t+tn>=maxI(vup,v,w)/aup()"); <(
      "0<=t+tn&t+tn < maxI(vup,v,w)/aup()":
        allL("w*aup()/2*(t+tn)^2+v*(t+tn)", 'L=="\forall hn (rv*(t+tn)=rv*(t+tn)&Aup(t+tn,hn,v,w,vup)->abs(r-rv*(t+tn))>rp()|w*(h-hn)>hp())");
        implyL('L=="rv*(t+tn)=rv*(t+tn)&Aup(t+tn,w*aup()/2*(t+tn)^2+v*(t+tn),v,w,vup)->abs(r-rv*(t+tn))>rp()|w*(h-(w*aup()/2*(t+tn)^2+v*(t+tn)))>hp()"); <(
          "rv*(t+tn)=rv*(t+tn)&Aup(t+tn,w*aup()/2*(t+tn)^2+v*(t+tn),v,w,vup)":
            simplify('R=="rv*(t+tn)=rv*(t+tn)&Aup(t+tn,w*aup()/2*(t+tn)^2+v*(t+tn),v,w,vup)");
            QE using "init(w,rv) :: t>=0 :: rn=rv*tn&Aup(tn,hn,a*t+v,w,vup) :: 0<=t+tn&t+tn < maxI(vup,v,w)/aup() :: Aup(t+tn,w*aup()/2*(t+tn)^2+v*(t+tn),v,w,vup) :: nil",
          "abs(r-rv*(t+tn))>rp()|w*(h-(w*aup()/2*(t+tn)^2+v*(t+tn)))>hp()":
            orL('L=="abs(r-rv*(t+tn))>rp()|w*(h-(w*aup()/2*(t+tn)^2+v*(t+tn)))>hp()"); <(
              "abs(r-rv*(t+tn))>rp()":
                QE using "abs(r-rv*(t+tn))>rp() :: init(w,rv) :: t>=0 :: rn=rv*tn&Aup(tn,hn,a*t+v,w,vup) :: abs((-rv)*t+r-rn)>rp() :: nil",
              "w*(h-(w*aup()/2*(t+tn)^2+v*(t+tn)))>hp()":
                expand "init";
                andL('L)*;
                orL('L=="w=wUp()|w=wLo()"); <(
                  "w=wUp()":
                    QE using "w*(h-(w*aup()/2*(t+tn)^2+v*(t+tn)))>hp() :: advisoryUp(a*t+v,w,vup,a) :: t>=0 :: rp()>=0 :: Aup(tn,hn,a*t+v,w,vup) :: 0<=t+tn :: t+tn < maxI(vup,v,w)/aup() :: hp()>0 :: rv>=0 :: alo()>0 :: aup()>=alo() :: w=wUp() :: w*(-(a*(t^2/2)+v*t)+h-hn)>hp() :: nil",
                  "w=wLo()":
                    QE using "advisoryUp(v,w,vup,a) :: w*(h-(w*aup()/2*(t+tn)^2+v*(t+tn)))>hp() :: t>=0 :: rp()>=0 :: Aup(tn,hn,a*t+v,w,vup) :: 0<=t+tn :: t+tn < maxI(vup,v,w)/aup() :: hp()>0 :: rv>=0 :: alo()>0 :: aup()>=alo() :: w=wLo() :: w*(-(a*(t^2/2)+v*t)+h-hn)>hp() :: nil"
                )
            )
        ),
      "t+tn>=maxI(vup,v,w)/aup()":
        allL("(v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup())", 'L=="\forall hn (rv*(t+tn)=rv*(t+tn)&Aup(t+tn,hn,v,w,vup)->abs(r-rv*(t+tn))>rp()|w*(h-hn)>hp())");
        implyL('L=="rv*(t+tn)=rv*(t+tn)&Aup(t+tn,(v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup()),v,w,vup)->abs(r-rv*(t+tn))>rp()|w*(h-((v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup())))>hp()"); <(
          "rv*(t+tn)=rv*(t+tn)&Aup(t+tn,(v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup()),v,w,vup)":
            simplify('R=="rv*(t+tn)=rv*(t+tn)&Aup(t+tn,(v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup()),v,w,vup)");
            QE using "init(w,rv) :: t>=0 :: rn=rv*tn&Aup(tn,hn,a*t+v,w,vup) :: t+tn>=maxI(vup,v,w)/aup() :: Aup(t+tn,(v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup()),v,w,vup) :: nil",
          "abs(r-rv*(t+tn))>rp()|w*(h-((v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup())))>hp()":
            orL('L=="abs(r-rv*(t+tn))>rp()|w*(h-((v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup())))>hp()"); <(
              "abs(r-rv*(t+tn))>rp()":
                QE using "abs(r-rv*(t+tn))>rp() :: init(w,rv) :: t>=0 :: rn=rv*tn&Aup(tn,hn,a*t+v,w,vup) :: t+tn>=maxI(vup,v,w)/aup() :: abs((-rv)*t+r-rn)>rp() :: nil",
              "w*(h-((v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup())))>hp()":
                expand "Aup";
                andL('L)*;
                orL('L=="0<=tn&tn < maxI(vup,a*t+v,w)/aup()&hn=w*aup()/2*tn^2+(a*t+v)*tn|tn>=maxI(vup,a*t+v,w)/aup()&hn=w*max(w*vup,w*(a*t+v))*tn-w*maxI(vup,a*t+v,w)^2/(2*aup())"); <(
                  "0<=tn&tn < maxI(vup,a*t+v,w)/aup()&hn=w*aup()/2*tn^2+(a*t+v)*tn":
                    QE using "w*(h-((v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup())))>hp() :: init(w,rv) :: t>=0 :: t+tn>=maxI(vup,v,w)/aup() :: rn=rv*tn :: 0<=tn&tn < maxI(vup,a*t+v,w)/aup()&hn=w*aup()/2*tn^2+(a*t+v)*tn :: w*(-(a*(t^2/2)+v*t)+h-hn)>hp() :: nil",
                  "tn>=maxI(vup,a*t+v,w)/aup()&hn=w*max(w*vup,w*(a*t+v))*tn-w*maxI(vup,a*t+v,w)^2/(2*aup())":
                    expand "init";
                    andL('L)*;
                    orL('L=="w=wUp()|w=wLo()"); <(
                      "w=wUp()":
                        edit("aup()>0", 'L=="aup()>=alo()") using "alo()>0";
                        QE using "w*(h-((v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup())))>hp() :: advisoryUp(a*t+v,w,vup,a) :: t>=0 :: t+tn>=maxI(vup,v,w)/aup() :: rn=rv*tn :: rp()>=0 :: tn>=maxI(vup,a*t+v,w)/aup() :: hn=w*max(w*vup,w*(a*t+v))*tn-w*maxI(vup,a*t+v,w)^2/(2*aup()) :: hp()>0 :: rv>=0 :: aup()>0 :: w=wUp() :: w*(-(a*(t^2/2)+v*t)+h-hn)>hp() :: nil",
                      "w=wLo()":
                        edit("aup()>0", 'L=="aup()>=alo()") using "alo()>0";
                        QE using "advisoryUp(v,w,vup,a) :: w*(h-((v+w*maxI(vup,v,w))*(t+tn)-w*maxI(vup,v,w)^2/(2*aup())))>hp() :: advisoryUp(a*t+v,w,vup,a) :: t>=0 :: t+tn>=maxI(vup,v,w)/aup() :: rp()>=0 :: tn>=maxI(vup,a*t+v,w)/aup() :: hn=w*max(w*vup,w*(a*t+v))*tn-w*maxI(vup,a*t+v,w)^2/(2*aup()) :: hp()>0 :: rv>=0 :: aup()>0 :: w=wLo() :: w*(-(a*(t^2/2)+v*t)+h-hn)>hp() :: nil"
                    )
                )
            )
        )
    ),
  "Show":
    QE using "init(w,rv) :: t>=0 :: rn=rv*tn&Aup(tn,hn,a*t+v,w,vup) :: 0<=t+tn&t+tn < maxI(vup,v,w)/aup()|t+tn>=maxI(vup,v,w)/aup() :: nil"
)
End.

End.

Lemma "ACAS X/Two-sided use case low"

ProgramVariables
  Real w;
  Real v;
  Real vup;
  Real vlo;
  Real a;
  Real h;
  Real rv;
  Real r;
End.

Problem
  loopInv(r,h,v,w,vlo,vup,rv) -> abs(r)>rp | abs(h)>hp
End.

Tactic "ACAS X/Proof Two-sided use case low".
implyR('R=="loopInv(r,h,v,w,vlo,vup,rv)->abs(r)>rp()|abs(h)>hp()");
orR('R=="abs(r)>rp()|abs(h)>hp()");
expand "loopInv";
andL('L=="init(w,rv)&Cimpl(r,h,v,w,vlo,vup,rv)");
expand "Cimpl";
orL('L=="Limpl(r,h,v,w,vlo,rv)|Uimpl(r,h,v,w,vup,rv)"); <(
  "Limpl(r,h,v,w,vlo,rv)":
    expand "Limpl";
    allL("0", 'L=="\forall tn \forall rn \forall hn (rn=rv*tn&A(tn,hn,v,w,vlo)->abs(r-rn)>rp()|w*(h-hn) < -hp())");
    allL("0", 'L=="\forall rn \forall hn (rn=rv*0&A(0,hn,v,w,vlo)->abs(r-rn)>rp()|w*(h-hn) < -hp())");
    allL("0", 'L=="\forall hn (0=rv*0&A(0,hn,v,w,vlo)->abs(r-0)>rp()|w*(h-hn) < -hp())");
    implyL('L=="0=rv*0&A(0,0,v,w,vlo)->abs(r-0)>rp()|w*(h-0) < -hp()"); <(
      "0=rv*0&A(0,0,v,w,vlo)":
        QE using "init(w,rv) :: 0=rv*0&A(0,0,v,w,vlo) :: nil",
      "abs(r-0)>rp()|w*(h-0) < -hp()":
        orL('L=="abs(r-0)>rp()|w*(h-0) < -hp()"); <(
          "abs(r-0)>rp()":
            simplify('L=="abs(r-0)>rp()");
            id,
          "w*(h-0) < -hp()":
            QE using "init(w,rv) :: w*(h-0) < -hp() :: abs(h)>hp() :: nil"
        )
    ),
  "Uimpl(r,h,v,w,vup,rv)":
    expand "Uimpl";
    allL("0", 'L=="\forall tn \forall rn \forall hn (rn=rv*tn&Aup(tn,hn,v,w,vup)->abs(r-rn)>rp()|w*(h-hn)>hp())");
    allL("0", 'L=="\forall rn \forall hn (rn=rv*0&Aup(0,hn,v,w,vup)->abs(r-rn)>rp()|w*(h-hn)>hp())");
    allL("0", 'L=="\forall hn (0=rv*0&Aup(0,hn,v,w,vup)->abs(r-0)>rp()|w*(h-hn)>hp())");
    implyL('L=="0=rv*0&Aup(0,0,v,w,vup)->abs(r-0)>rp()|w*(h-0)>hp()"); <(
      "0=rv*0&Aup(0,0,v,w,vup)":
        QE using "init(w,rv) :: 0=rv*0&Aup(0,0,v,w,vup) :: nil",
      "abs(r-0)>rp()|w*(h-0)>hp()":
        orL('L=="abs(r-0)>rp()|w*(h-0)>hp()"); <(
          "abs(r-0)>rp()":
            simplify('L=="abs(r-0)>rp()");
            id,
          "w*(h-0)>hp()":
            QE using "init(w,rv) :: w*(h-0)>hp() :: abs(h)>hp() :: nil"
        )
    )
)
End.

End.

Theorem "ACAS X/Theorem 3: Correctness of two-sided safe regions"

ProgramVariables
  Real w;
  Real v;
  Real vlo;
  Real vup;
  Real a;
  Real h;
  Real rv;
  Real r;
End.


Problem
  init(w,rv) & Cimpl(r,h,v,w,vlo,vup,rv)
  ->
  [
   {  { ?true;
        ++
        {w:=wUp(); ++ w:=wLo();}
        vlo := *;
        vup := *;
        ?Cimpl(r,h,v,w,vlo,vup,rv);
      }
      a :=*;
      motion;
   }*@invariant(loopInv(r,h,v,w,vlo,vup,rv))
  ]( abs(r) > rp() | abs(h) > hp() )
End.

Tactic "ACAS X/Proof Theorem 3: Correctness of two-sided safe regions".
implyR('R=="init(w,rv)&Cimpl(r,h,v,w,vlo,vup,rv)->[{{?true;++{w:=wUp();++w:=wLo();}vlo:=*;vup:=*;?Cimpl(r,h,v,w,vlo,vup,rv);}a:=*;motion{|^@|};}*](abs(r)>rp()|abs(h)>hp())");
loop("loopInv(r,h,v,w,vlo,vup,rv)", 'R=="[{{?true;++{w:=wUp();++w:=wLo();}vlo:=*;vup:=*;?Cimpl(r,h,v,w,vlo,vup,rv);}a:=*;motion{|^@|};}*](abs(r)>rp()|abs(h)>hp())"); <(
  "Init":
    propClose,
  "Post":
    useLemma("ACAS X/Two-sided use case low", "prop"),
  "Step":
    composeb('R=="[{?true;++{w:=(-1);++w:=1;}vlo:=*;vup:=*;?\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp());}a:=*;{r'=-rv,h'=-v,v'=a&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]((rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp())))");
    MR("loopInv(r,h,v,w,vlo,vup,rv)", 'R=="[?true;++{w:=(-1);++w:=1;}vlo:=*;vup:=*;?\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp());][a:=*;{r'=-rv,h'=-v,v'=a&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]((rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp())))"); <(
      "Use Q->P":
        andL('L)*;
        chaseAt('R=="[?true;++{w:=(-1);++w:=1;}vlo:=*;vup:=*;?\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp());]loopInv(r,h,v,w,vlo,vup,rv)");
        expandAllDefs;
        simplify('R=="(true->(rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp())))&\forall vlo \forall vup (\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,(-1)*(vlo-v))/alo()&hn=(-1)*alo()/2*tn^2+v*tn|tn>=max(0,(-1)*(vlo-v))/alo()&hn=vlo*tn-(-1)*max(0,(-1)*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|(-1)*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,(-1)*(vup-v))/aup()&hn=(-1)*aup()/2*tn^2+v*tn|tn>=max(0,(-1)*(vup-v))/aup()&hn=(-1)*max((-1)*vup,(-1)*v)*tn-(-1)*max(0,(-1)*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|(-1)*(h-hn)>hp())->(rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&((-1)=(-1)|(-1)=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,(-1)*(vlo-v))/alo()&hn=(-1)*alo()/2*tn^2+v*tn|tn>=max(0,(-1)*(vlo-v))/alo()&hn=vlo*tn-(-1)*max(0,(-1)*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|(-1)*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,(-1)*(vup-v))/aup()&hn=(-1)*aup()/2*tn^2+v*tn|tn>=max(0,(-1)*(vup-v))/aup()&hn=(-1)*max((-1)*vup,(-1)*v)*tn-(-1)*max(0,(-1)*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|(-1)*(h-hn)>hp())))&\forall vlo \forall vup (\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,1*(vlo-v))/alo()&hn=1*alo()/2*tn^2+v*tn|tn>=max(0,1*(vlo-v))/alo()&hn=vlo*tn-1*max(0,1*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|1*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,1*(vup-v))/aup()&hn=1*aup()/2*tn^2+v*tn|tn>=max(0,1*(vup-v))/aup()&hn=1*max(1*vup,1*v)*tn-1*max(0,1*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|1*(h-hn)>hp())->(rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(1=(-1)|1=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,1*(vlo-v))/alo()&hn=1*alo()/2*tn^2+v*tn|tn>=max(0,1*(vlo-v))/alo()&hn=vlo*tn-1*max(0,1*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|1*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,1*(vup-v))/aup()&hn=1*aup()/2*tn^2+v*tn|tn>=max(0,1*(vup-v))/aup()&hn=1*max(1*vup,1*v)*tn-1*max(0,1*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|1*(h-hn)>hp())))");
        closeT,
      "Show [a]Q":
        andL('L)*;
        composeb('R=="[a:=*;{r'=-rv,h'=-v,v'=a&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]((rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp())))");
        MR("loopInv(r,h,v,w,vlo,vup,rv)", 'R=="[a:=*;][{r'=-rv,h'=-v,v'=a&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]((rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp())))"); <(
          "Use Q->P":
            GV('R=="[a:=*;]loopInv(r,h,v,w,vlo,vup,rv)");
            id,
          "Show [a]Q":
            andL('L)*;
            diffUnpackEvolDomain('R=="[{r'=-rv,h'=-v,v'=a&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]((rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp())))");
            solve('R=="[{r'=-rv,h'=-v,v'=a&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]((rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp())))");
            allR('R=="\forall t_ (t_>=0->\forall s_ (0<=s_&s_<=t_->(w*(a*s_+v)>=w*vlo|w*a>=alo())&(w*(a*s_+v)<=w*vup&w*a<=aup()|w*a<=0))->(rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*tn-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*tn-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())))");
            implyR('R=="t_>=0->\forall s_ (0<=s_&s_<=t_->(w*(a*s_+v)>=w*vlo|w*a>=alo())&(w*(a*s_+v)<=w*vup&w*a<=aup()|w*a<=0))->(rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*tn-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*tn-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp()))");
            implyR('R=="\forall s_ (0<=s_&s_<=t_->(w*(a*s_+v)>=w*vlo|w*a>=alo())&(w*(a*s_+v)<=w*vup&w*a<=aup()|w*a<=0))->(rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*tn-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*tn-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp()))");
            allL("t_", 'L=="\forall s_ (0<=s_&s_<=t_->(w*(a*s_+v)>=w*vlo|w*a>=alo())&(w*(a*s_+v)<=w*vup&w*a<=aup()|w*a<=0))");
            simplify('L=="0<=t_&t_<=t_->(w*(a*t_+v)>=w*vlo|w*a>=alo())&(w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0)") using "t_>=0";
            hideL('L=="loopInv(r,h,v,w,vlo,vup,rv)");
            expandAllDefs;
            andL('L)*;
            simplify('R=="(rp()>=0&hp()>0&rv>=0&alo()>0&aup()>=alo()&(w=(-1)|w=1))&(\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*tn-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*tn-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp()))") using "rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: aup()>=alo() :: w=(-1)|w=1 :: nil";
            orR('R=="\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*tn-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*tn^2+(a*t_+v)*tn|tn>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*tn-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rn)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())");
            uniformRename("t_", "t");
            orL('L=="\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())|\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp())"); <(
              "\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*tn^2+v*tn|tn>=max(0,w*(vlo-v))/alo()&hn=vlo*tn-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rn)>rp()|w*(h-hn) < -hp())":
                hideR('R=="\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-(a*t+v)))/aup()&hn=w*aup()/2*tn^2+(a*t+v)*tn|tn>=max(0,w*(vup-(a*t+v)))/aup()&hn=w*max(w*vup,w*(a*t+v))*tn-w*max(0,w*(vup-(a*t+v)))^2/(2*aup()))->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn)>hp())");
                useLemma("ACAS X/Two-sided safe implicit low", "prop"),
              "\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vup-v))/aup()&hn=w*aup()/2*tn^2+v*tn|tn>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*tn-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rn)>rp()|w*(h-hn)>hp())":
                hideR('R=="\forall tn \forall rn \forall hn (rn=rv*tn&(0<=tn&tn < max(0,w*(vlo-(a*t+v)))/alo()&hn=w*alo()/2*tn^2+(a*t+v)*tn|tn>=max(0,w*(vlo-(a*t+v)))/alo()&hn=vlo*tn-w*max(0,w*(vlo-(a*t+v)))^2/(2*alo()))->abs((-rv)*t+r-rn)>rp()|w*(-(a*(t^2/2)+v*t)+h-hn) < -hp())");
                useLemma("ACAS X/Two-sided safe implicit up", "prop")
            )
        )
    )
)
End.

End.