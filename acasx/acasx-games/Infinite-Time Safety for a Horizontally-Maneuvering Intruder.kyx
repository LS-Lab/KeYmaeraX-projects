SharedDefinitions
  Real hp;   /* puck height */
  Real rp;   /* puck radius */
  Real alo;  /* minimal vertical acceleration. Typically g/4 */
  Real amax; /* maximal aircraft capability: vertical acceleration. */
  Real vmax; /* maximum intruder horizontal capability */

  /* velocity bound 1 = lower, -1 = upper */
  Real wUp = -1;
  Real wLo = 1;

  Real maxI(Real v, Real w, Real vlo) = max(0, w * (vlo - v));

  Real Tlo(Real v, Real w, Real vlo) = maxI(v,w,vlo)/alo;

  Bool C(Real r, Real h, Real v, Real w, Real vlo) <-> 
    \forall t \forall rv1 \forall rn \forall hn (
      0 <= rv1 & rv1 <= vmax & rn = rv1 * t & (
        (0 <= t & t < Tlo(v,w,vlo) & hn = (w * alo)/2 * t^2 + v * t)
      | (t >= Tlo(v,w,vlo) & hn = vlo * t - w * maxI(v,w,vlo)^2/(2*alo)))
      -> (abs(r - rn) > rp() | w*(hn-h) > hp)
    );

  Bool init(Real w) <-> hp>0 & rp>=0 & alo>0 & vmax>0 & amax >= alo & (w=wUp | w=wLo);

  Bool loopInv(Real r, Real h, Real v, Real w, Real vlo) <-> init(w) & C(r,h,v,w,vlo);

  HP motion ::= { {r' = -rv, h' = -v, v' = ao } };
End.

Theorem "ACAS X Hybrid Games/Theorem 5.2: Horizontally-maneuvering intruder: correctness of implicit safe regions".

ProgramVariables
  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */

  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - hn */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real w;    /* velocity direction */
  Real ao;   /* ownship climb rate */
End.

Problem

    init(w)
  & C(r,h,v,w,vlo)
  ->
  [{
     { ?true;
       ++
       { vlo := *;
         { w:=wUp; ++ w:=wLo; }
         ?C(r,h,v,w,vlo);
       }
     }
     { ao := *; ?-amax<=ao&ao<=amax; }^@
     { rv := * ; ?0<=rv & rv <= vmax; motion; }*@invariant(loopInv(r,h,v,w,vlo))
   }*@invariant(loopInv(r,h,v,w,vlo))
  ] ( abs(r) > rp | abs(h) > hp )

End.

Tactic "ACAS X Hybrid Games/Proof Theorem 5.2: Horizontally-maneuvering intruder: correctness of implicit safe regions"
implyR('R=="init(w)&C(r,h,v,w,vlo)->[{{?true;++vlo:=*;{w:=wUp();++w:=wLo();}?C(r,h,v,w,vlo);}{ao:=*;?-amax()<=ao&ao<=amax();}^@{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*}*](abs(r)>rp()|abs(h)>hp())");
loopRule("loopInv(r,h,v,w,vlo)", 'R=="[{{?true;++vlo:=*;{w:=wUp();++w:=wLo();}?C(r,h,v,w,vlo);}{ao:=*;?-amax()<=ao&ao<=amax();}^@{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*}*](abs(r)>rp()|abs(h)>hp())"); <(
  "Init":
    expand "loopInv";
    id,
  "Step":
    composeb('R=="[{?true;++vlo:=*;{w:=wUp();++w:=wLo();}?C(r,h,v,w,vlo);}{ao:=*;?-amax()<=ao&ao<=amax();}^@{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo)");
    MR("loopInv(r,h,v,w,vlo)", 'R=="[?true;++vlo:=*;{w:=wUp();++w:=wLo();}?C(r,h,v,w,vlo);][{ao:=*;?-amax()<=ao&ao<=amax();}^@{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo)"); <(
      "Use Q->P":
        unfold; <(
          "[w:=wUp();][?C(r,h,v,w,vlo);]loopInv(r,h,v,w,vlo)":
            expand "loopInv";
            simplify('R=="init(wUp())&C(r,h,v,wUp(),vlo)") using "C(r,h,v,wUp(),vlo) :: init(wUp())&C(r,h,v,wUp(),vlo) :: nil";
            andL('L=="init(w)&C(r,h,v,w,vlo_0)");
            QE using "init(w) :: init(wUp()) :: nil",
          "[w:=wLo();][?C(r,h,v,w,vlo);]loopInv(r,h,v,w,vlo)":
            expand "loopInv";
            simplify('R=="init(wLo())&C(r,h,v,wLo(),vlo)") using "C(r,h,v,wLo(),vlo)";
            andL('L=="init(w)&C(r,h,v,w,vlo_0)");
            QE using "init(w) :: init(wLo()) :: nil"
        ),
      "Show [a]Q":
        chaseAt('R=="[{ao:=*;?-amax()<=ao&ao<=amax();}^@{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo)");
        cut("w*v < w*vlo|w*vlo<=w*v"); <(
          "Use":
            orL('L=="w*v < w*vlo|w*vlo<=w*v"); <(
              "w*v < w*vlo":
                existsR("w*alo()", 'R=="\exists ao ((-amax()<=ao&ao<=amax())&[{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo))");
                andR('R=="(-amax()<=ao&ao<=amax())&[{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo)"); <(
                  "-amax()<=ao&ao<=amax()":
                    expand "loopInv";
                    expand "init";
                    andL('L)*;
                    QE using "ao=w*alo() :: alo()>0 :: amax()>=alo() :: w=wUp()|w=wLo() :: -amax()<=ao&ao<=amax() :: nil",
                  "[{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo)":
                    loopRule("loopInv(r,h,v,w,vlo)&ao=w*alo()", 'R=="[{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo)"); <(
                      "Init":
                        propClose,
                      "Step":
                        unfold;
                        expand "motion";
                        boxAnd('R=="[{r'=-rv,h'=-v,v'=ao}](loopInv(r,h,v,w,vlo)&ao=w*alo())");
                        GV('R=="[{r'=-rv,h'=-v,v'=ao}]loopInv(r,h,v,w,vlo)&#[{r'=-rv,h'=-v,v'=ao}]ao=w*alo()#");
                        simplify('R=="[{r'=-rv,h'=-v,v'=ao}]loopInv(r,h,v,w,vlo)&ao=w*alo()") using "ao=w*alo()";
                        expand "loopInv";
                        boxAnd('R=="[{r'=-rv,h'=-v,v'=ao}](init(w)&C(r,h,v,w,vlo))");
                        GV('R=="#[{r'=-rv,h'=-v,v'=ao}]init(w)#&[{r'=-rv,h'=-v,v'=ao}]C(r,h,v,w,vlo)");
                        andL('L=="init(w)&C(r,h,v,w,vlo)");
                        simplify('R=="init(w)&[{r'=-rv,h'=-v,v'=ao}]C(r,h,v,w,vlo)") using "init(w)";
                        solve('R=="[{r'=-rv,h'=-v,v'=ao}]C(r,h,v,w,vlo)");
                        unfold;
                        expand "C";
                        unfold;
                        allL("t+t_", 'L=="\forall t \forall rv1 \forall rn \forall hn (0<=rv1&rv1<=vmax()&rn=rv1*t&(0<=t&t < Tlo(v,w,vlo)&hn=w*alo()/2*t^2+v*t|t>=Tlo(v,w,vlo)&hn=vlo*t-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                        cut("t+t_=0|t+t_>0"); <(
                          "Use":
                            orL('L=="t+t_=0|t+t_>0"); <(
                              "t+t_=0":
                                allL("rv", 'L=="\forall rv1 \forall rn \forall hn (0<=rv1&rv1<=vmax()&rn=rv1*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                                allL("rv*(t+t_)", 'L=="\forall rn \forall hn (0<=rv&rv<=vmax()&rn=rv*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                                simplify('L=="\forall hn (0<=rv&rv<=vmax()&rv*(t+t_)=rv*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())") using "0<=rv :: rv<=vmax() :: nil";
                                cut("0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
                                  "Use":
                                    orL('L=="0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
                                      "0<=t+t_&t+t_ < Tlo(v,w,vlo)":
                                        andL('L=="0<=t+t_&t+t_ < Tlo(v,w,vlo)");
                                        simplify('L=="\forall hn (0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())") using "0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: nil";
                                        allL("w*alo()/2*(t+t_)^2+v*(t+t_)", 'L=="\forall hn (hn=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())");
                                        simplify('L=="w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-rv*(t+t_))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()") using "nil";
                                        orL('L=="abs(r-rv*(t+t_))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()"); <(
                                          "abs(r-rv*(t+t_))>rp()":
                                            QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: abs(r-rv*(t+t_))>rp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: abs((-rv)*t_+r-rn)>rp() :: nil",
                                          "w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()":
                                            QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil"
                                        ),
                                      "t+t_>=Tlo(v,w,vlo)":
                                        simplify('L=="\forall hn (0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())") using "t+t_>=Tlo(v,w,vlo)";
                                        allL("vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())", 'L=="\forall hn (hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())");
                                        simplify('L=="vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()") using "nil";
                                        orL('L=="abs(r-rv*(t+t_))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()"); <(
                                          "abs(r-rv*(t+t_))>rp()":
                                            QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: abs(r-rv*(t+t_))>rp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: t+t_>=Tlo(v,w,vlo) :: abs((-rv)*t_+r-rn)>rp() :: nil",
                                          "w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()":
                                            QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: t+t_>=Tlo(v,w,vlo) :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil"
                                        )
                                    ),
                                  "Show":
                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: 0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo) :: nil"
                                ),
                              "t+t_>0":
                                allL("(rv*t_+rv1*t)/(t+t_)", 'L=="\forall rv1 \forall rn \forall hn (0<=rv1&rv1<=vmax()&rn=rv1*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                                allL("rv*t_+rv1*t", 'L=="\forall rn \forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rn=(rv*t_+rv1*t)/(t+t_)*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                                cut("0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
                                  "Use":
                                    orL('L=="0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
                                      "0<=t+t_&t+t_ < Tlo(v,w,vlo)":
                                        andL('L=="0<=t+t_&t+t_ < Tlo(v,w,vlo)");
                                        simplify('L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=(rv*t_+rv1*t)/(t+t_)*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())") using "0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: nil";
                                        allL("w*alo()/2*(t+t_)^2+v*(t+t_)", 'L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=(rv*t_+rv1*t)/(t+t_)*(t+t_)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())");
                                        implyL('L=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=(rv*t_+rv1*t)/(t+t_)*(t+t_)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-(rv*t_+rv1*t))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()"); <(
                                          "0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=(rv*t_+rv1*t)/(t+t_)*(t+t_)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)":
                                            edit("0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=rv*t_+rv1*t&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)", 'R=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=(rv*t_+rv1*t)/(t+t_)*(t+t_)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)") using "t+t_>0";
                                            simplify('R=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=rv*t_+rv1*t&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)") using "nil";
                                            andR('R=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()"); <(
                                              "0<=(rv*t_+rv1*t)/(t+t_)":
                                                QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: 0<=(rv*t_+rv1*t)/(t+t_) :: nil",
                                              "(rv*t_+rv1*t)/(t+t_)<=vmax()":
                                                orL('L=="0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())"); <(
                                                  "0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t":
                                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: (rv*t_+rv1*t)/(t+t_)<=vmax() :: nil",
                                                  "t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())":
                                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: (rv*t_+rv1*t)/(t+t_)<=vmax() :: nil"
                                                )
                                            ),
                                          "abs(r-(rv*t_+rv1*t))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()":
                                            orL('L=="abs(r-(rv*t_+rv1*t))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()"); <(
                                              "abs(r-(rv*t_+rv1*t))>rp()":
                                                QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: abs(r-(rv*t_+rv1*t))>rp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: abs((-rv)*t_+r-rn)>rp() :: nil",
                                              "w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()":
                                                orL('L=="0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())"); <(
                                                  "0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t":
                                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil",
                                                  "t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())":
                                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil"
                                                )
                                            )
                                        ),
                                      "t+t_>=Tlo(v,w,vlo)":
                                        simplify('L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=(rv*t_+rv1*t)/(t+t_)*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())") using "t+t_>=Tlo(v,w,vlo)";
                                        allL("vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())", 'L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=(rv*t_+rv1*t)/(t+t_)*(t+t_)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())");
                                        edit("0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=rv*t_+rv1*t&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()", 'L=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=(rv*t_+rv1*t)/(t+t_)*(t+t_)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()") using "t+t_>0";
                                        simplify('L=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=rv*t_+rv1*t&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()") using "nil";
                                        implyL('L=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()->abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()"); <(
                                          "0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()":
                                            andR('R=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()"); <(
                                              "0<=(rv*t_+rv1*t)/(t+t_)":
                                                orL('L=="0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())"); <(
                                                  "0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t":
                                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: 0<=(rv*t_+rv1*t)/(t+t_) :: nil",
                                                  "t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())":
                                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: 0<=(rv*t_+rv1*t)/(t+t_) :: nil"
                                                ),
                                              "(rv*t_+rv1*t)/(t+t_)<=vmax()":
                                                orL('L=="0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())"); <(
                                                  "0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t":
                                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: (rv*t_+rv1*t)/(t+t_)<=vmax() :: nil",
                                                  "t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())":
                                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: (rv*t_+rv1*t)/(t+t_)<=vmax() :: nil"
                                                )
                                            ),
                                          "abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()":
                                            orL('L=="abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()"); <(
                                              "abs(r-(rv*t_+rv1*t))>rp()":
                                                QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: abs(r-(rv*t_+rv1*t))>rp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: abs((-rv)*t_+r-rn)>rp() :: nil",
                                              "w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()":
                                                orL('L=="0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())"); <(
                                                  "0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t":
                                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil",
                                                  "t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo())":
                                                    expand "init";
                                                    andL('L)*;
                                                    orL('L=="w=wUp()|w=wLo()"); <(
                                                      "w=wUp()":
                                                        QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: hp()>0 :: t>=Tlo(ao*t_+v,w,vlo) :: hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: rp()>=0 :: alo()>0 :: vmax()>0 :: amax()>=alo() :: w=wUp() :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil",
                                                      "w=wLo()":
                                                        QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: hp()>0 :: t>=Tlo(ao*t_+v,w,vlo) :: hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: rp()>=0 :: alo()>0 :: vmax()>0 :: amax()>=alo() :: w=wLo() :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil"
                                                    )
                                                )
                                            )
                                        )
                                    ),
                                  "Show":
                                    QE using "ao=w*alo() :: 0<=rv :: rv<=vmax() :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: 0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo) :: nil"
                                )
                            ),
                          "Show":
                            QE using "init(w) :: t_>=0 :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0|t+t_>0 :: nil"
                        ),
                      "Post":
                        propClose
                    )
                ),
              "w*vlo<=w*v":
                existsR("0", 'R=="\exists ao ((-amax()<=ao&ao<=amax())&[{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo))");
                andR('R=="(-amax()<=ao&ao<=amax())&[{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo)"); <(
                  "-amax()<=ao&ao<=amax()":
                    expand "loopInv";
                    expand "init";
                    andL('L)*;
                    QE using "ao=0 :: alo()>0 :: amax()>=alo() :: w=wUp()|w=wLo() :: -amax()<=ao&ao<=amax() :: nil",
                  "[{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo)":
                    loopRule("loopInv(r,h,v,w,vlo)&w*vlo<=w*v&ao=0", 'R=="[{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo)"); <(
                      "Init":
                        propClose,
                      "Step":
                        unfold;
                        expand "motion";
                        boxAnd('R=="[{r'=-rv,h'=-v,v'=ao}](loopInv(r,h,v,w,vlo)&w*vlo<=w*v&ao=0)");
                        boxAnd('R=="[{r'=-rv,h'=-v,v'=ao}]loopInv(r,h,v,w,vlo)&#[{r'=-rv,h'=-v,v'=ao}](w*vlo<=w*v&ao=0)#");
                        GV('R=="[{r'=-rv,h'=-v,v'=ao}]loopInv(r,h,v,w,vlo)&[{r'=-rv,h'=-v,v'=ao}]w*vlo<=w*v&#[{r'=-rv,h'=-v,v'=ao}]ao=0#");
                        simplify('R=="[{r'=-rv,h'=-v,v'=ao}]loopInv(r,h,v,w,vlo)&[{r'=-rv,h'=-v,v'=ao}]w*vlo<=w*v&ao=0") using "ao=0";
                        andR('R=="[{r'=-rv,h'=-v,v'=ao}]loopInv(r,h,v,w,vlo)&[{r'=-rv,h'=-v,v'=ao}]w*vlo<=w*v"); <(
                          "[{r'=-rv,h'=-v,v'=ao}]loopInv(r,h,v,w,vlo)":
                            expand "loopInv";
                            boxAnd('R=="[{r'=-rv,h'=-v,v'=ao}](init(w)&C(r,h,v,w,vlo))");
                            GV('R=="#[{r'=-rv,h'=-v,v'=ao}]init(w)#&[{r'=-rv,h'=-v,v'=ao}]C(r,h,v,w,vlo)");
                            andL('L=="init(w)&C(r,h,v,w,vlo)");
                            simplify('R=="init(w)&[{r'=-rv,h'=-v,v'=ao}]C(r,h,v,w,vlo)") using "init(w)";
                            solve('R=="[{r'=-rv,h'=-v,v'=ao}]C(r,h,v,w,vlo)");
                            unfold;
                            expand "C";
                            unfold;
                            allL("t+t_", 'L=="\forall t \forall rv1 \forall rn \forall hn (0<=rv1&rv1<=vmax()&rn=rv1*t&(0<=t&t < Tlo(v,w,vlo)&hn=w*alo()/2*t^2+v*t|t>=Tlo(v,w,vlo)&hn=vlo*t-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                            cut("t+t_=0|t+t_>0"); <(
                              "Use":
                                orL('L=="t+t_=0|t+t_>0"); <(
                                  "t+t_=0":
                                    allL("rv", 'L=="\forall rv1 \forall rn \forall hn (0<=rv1&rv1<=vmax()&rn=rv1*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                                    allL("rv*(t+t_)", 'L=="\forall rn \forall hn (0<=rv&rv<=vmax()&rn=rv*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                                    simplify('L=="\forall hn (0<=rv&rv<=vmax()&rv*(t+t_)=rv*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())") using "0<=rv :: rv<=vmax() :: nil";
                                    cut("0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
                                      "Use":
                                        orL('L=="0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
                                          "0<=t+t_&t+t_ < Tlo(v,w,vlo)":
                                            andL('L=="0<=t+t_&t+t_ < Tlo(v,w,vlo)");
                                            simplify('L=="\forall hn (0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())") using "0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: nil";
                                            allL("w*alo()/2*(t+t_)^2+v*(t+t_)", 'L=="\forall hn (hn=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())");
                                            simplify('L=="w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-rv*(t+t_))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()") using "nil";
                                            orL('L=="abs(r-rv*(t+t_))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()"); <(
                                              "abs(r-rv*(t+t_))>rp()":
                                                QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: abs(r-rv*(t+t_))>rp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: abs((-rv)*t_+r-rn)>rp() :: nil",
                                              "w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()":
                                                QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil"
                                            ),
                                          "t+t_>=Tlo(v,w,vlo)":
                                            simplify('L=="\forall hn (0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())") using "t+t_>=Tlo(v,w,vlo)";
                                            allL("vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())", 'L=="\forall hn (hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())");
                                            simplify('L=="vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()") using "nil";
                                            orL('L=="abs(r-rv*(t+t_))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()"); <(
                                              "abs(r-rv*(t+t_))>rp()":
                                                QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: abs(r-rv*(t+t_))>rp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: t+t_>=Tlo(v,w,vlo) :: abs((-rv)*t_+r-rn)>rp() :: nil",
                                              "w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()":
                                                QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: t+t_>=Tlo(v,w,vlo) :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil"
                                            )
                                        ),
                                      "Show":
                                        QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0 :: 0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo) :: nil"
                                    ),
                                  "t+t_>0":
                                    allL("(rv*t_+rv1*t)/(t+t_)", 'L=="\forall rv1 \forall rn \forall hn (0<=rv1&rv1<=vmax()&rn=rv1*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                                    allL("rv*t_+rv1*t", 'L=="\forall rn \forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rn=(rv*t_+rv1*t)/(t+t_)*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
                                    edit("\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=rv*t_+rv1*t&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())", 'L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=(rv*t_+rv1*t)/(t+t_)*(t+t_)&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())") using "t+t_>0";
                                    simplify('L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&rv*t_+rv1*t=rv*t_+rv1*t&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())") using "nil";
                                    cut("0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
                                      "Use":
                                        orL('L=="0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
                                          "0<=t+t_&t+t_ < Tlo(v,w,vlo)":
                                            andL('L=="0<=t+t_&t+t_ < Tlo(v,w,vlo)");
                                            simplify('L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())") using "0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: nil";
                                            allL("w*alo()/2*(t+t_)^2+v*(t+t_)", 'L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&hn=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())");
                                            simplify('L=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-(rv*t_+rv1*t))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()") using "nil";
                                            implyL('L=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()->abs(r-(rv*t_+rv1*t))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()"); <(
                                              "0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()":
                                                andR('R=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()"); <(
                                                  "0<=(rv*t_+rv1*t)/(t+t_)":
                                                    QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: 0<=(rv*t_+rv1*t)/(t+t_) :: nil",
                                                  "(rv*t_+rv1*t)/(t+t_)<=vmax()":
                                                    QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: (rv*t_+rv1*t)/(t+t_)<=vmax() :: nil"
                                                ),
                                              "abs(r-(rv*t_+rv1*t))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()":
                                                orL('L=="abs(r-(rv*t_+rv1*t))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()"); <(
                                                  "abs(r-(rv*t_+rv1*t))>rp()":
                                                    QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: abs(r-(rv*t_+rv1*t))>rp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: abs((-rv)*t_+r-rn)>rp() :: nil",
                                                  "w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()":
                                                    QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: 0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil"
                                                )
                                            ),
                                          "t+t_>=Tlo(v,w,vlo)":
                                            simplify('L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&(0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())") using "t+t_>=Tlo(v,w,vlo)";
                                            allL("vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())", 'L=="\forall hn (0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-(rv*t_+rv1*t))>rp()|w*(hn-h)>hp())");
                                            simplify('L=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()") using "nil";
                                            implyL('L=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()->abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()"); <(
                                              "0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()":
                                                andR('R=="0<=(rv*t_+rv1*t)/(t+t_)&(rv*t_+rv1*t)/(t+t_)<=vmax()"); <(
                                                  "0<=(rv*t_+rv1*t)/(t+t_)":
                                                    QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: 0<=(rv*t_+rv1*t)/(t+t_) :: nil",
                                                  "(rv*t_+rv1*t)/(t+t_)<=vmax()":
                                                    QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: (rv*t_+rv1*t)/(t+t_)<=vmax() :: nil"
                                                ),
                                              "abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()":
                                                orL('L=="abs(r-(rv*t_+rv1*t))>rp()|w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()"); <(
                                                  "abs(r-(rv*t_+rv1*t))>rp()":
                                                    QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: abs(r-(rv*t_+rv1*t))>rp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: abs((-rv)*t_+r-rn)>rp() :: nil",
                                                  "w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp()":
                                                    QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())-h)>hp() :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: t+t_>=Tlo(v,w,vlo) :: w*(hn-(-(ao*(t_^2/2)+v*t_)+h))>hp() :: nil"
                                                )
                                            )
                                        ),
                                      "Show":
                                        QE using "0<=rv :: rv<=vmax() :: w*vlo<=w*v :: ao=0 :: init(w) :: t_>=0 :: 0<=rv1 :: rv1<=vmax() :: rn=rv1*t :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_>0 :: 0<=t+t_&t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo) :: nil"
                                    )
                                ),
                              "Show":
                                QE using "init(w) :: t_>=0 :: 0<=t&t < Tlo(ao*t_+v,w,vlo)&hn=w*alo()/2*t^2+(ao*t_+v)*t|t>=Tlo(ao*t_+v,w,vlo)&hn=vlo*t-w*maxI(ao*t_+v,w,vlo)^2/(2*alo()) :: t+t_=0|t+t_>0 :: nil"
                            ),
                          "[{r'=-rv,h'=-v,v'=ao}]w*vlo<=w*v":
                            solve('R=="[{r'=-rv,h'=-v,v'=ao}]w*vlo<=w*v");
                            unfold;
                            QE
                        ),
                      "Post":
                        propClose
                    )
                )
            ),
          "Show":
            hideR('R=="\exists ao ((-amax()<=ao&ao<=amax())&[{rv:=*;?0<=rv&rv<=vmax();motion{|^@|};}*]loopInv(r,h,v,w,vlo))");
            QE using "w*v < w*vlo|w*vlo<=w*v"
        )
    ),
  "Post":
    expand "loopInv";
    andL('L=="init(w)&C(r,h,v,w,vlo)");
    expand "C";
    allL("0", 'L=="\forall t \forall rv1 \forall rn \forall hn (0<=rv1&rv1<=vmax()&rn=rv1*t&(0<=t&t < Tlo(v,w,vlo)&hn=w*alo()/2*t^2+v*t|t>=Tlo(v,w,vlo)&hn=vlo*t-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
    allL("0", 'L=="\forall rv1 \forall rn \forall hn (0<=rv1&rv1<=vmax()&rn=rv1*0&(0<=0&0 < Tlo(v,w,vlo)&hn=w*alo()/2*0^2+v*0|0>=Tlo(v,w,vlo)&hn=vlo*0-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
    allL("0", 'L=="\forall rn \forall hn (0<=0&0<=vmax()&rn=0*0&(0<=0&0 < Tlo(v,w,vlo)&hn=w*alo()/2*0^2+v*0|0>=Tlo(v,w,vlo)&hn=vlo*0-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-rn)>rp()|w*(hn-h)>hp())");
    allL("0", 'L=="\forall hn (0<=0&0<=vmax()&0=0*0&(0<=0&0 < Tlo(v,w,vlo)&hn=w*alo()/2*0^2+v*0|0>=Tlo(v,w,vlo)&hn=vlo*0-w*maxI(v,w,vlo)^2/(2*alo()))->abs(r-0)>rp()|w*(hn-h)>hp())");
    QE
)
End.

End.