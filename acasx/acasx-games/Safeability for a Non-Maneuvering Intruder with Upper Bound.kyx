SharedDefinitions
Real hp;
Real rp;
Real alo;
Real aup;
Real maxA;

Real wUp = -1;
Real wLo = 1;

Real epsilon;

Real maxI(Real v, Real w, Real vref) = max(0, w*(vref-v));
Real Tlo(Real v, Real w, Real vlo) = maxI(v,w,vlo)/alo;
Real Tup(Real v, Real w, Real vup) = maxI(v,w,vup)/aup;

Bool Alo(Real v, Real w, Real vlo, Real hn, Real t) <-> (
    (0 <= t & t < Tlo(v,w,vlo) & hn = w*alo/2*t^2 + v*t)
  | (t >= Tlo(v,w,vlo)         & hn = vlo*t - w*maxI(v,w,vlo)^2/(2*alo))
);

Bool Aup(Real v, Real w, Real vup, Real hn, Real t) <-> (
    (0 <= t & t < Tup(v,w,vup) & hn = w*aup/2*t^2 + v*t)
  | (t >= Tup(v,w,vup)         & hn = w*max(w*vup,w*v)*t - w*maxI(v,w,vup)^2/(2*aup))
);

/* Infinite-time implicit region Limpl */
Bool Lone(Real r, Real h, Real v, Real w, Real vlo, Real rv) <-> 
  \forall t \forall ro \forall ho (
      (0 <= t & t < maxI(v,w,vlo)/alo & ro = rv * t & ho = (w * alo)/2 * t^2 + v * t)
    | (t >= maxI(v,w,vlo)/alo & ro = rv * t & ho = vlo * t - w * maxI(v,w,vlo)^2/(2*alo))
    -> (abs(r - ro) > rp | w * h < w * ho - hp)
  );

/* Bounded-time implicit region Limpl */
Bool Lep(Real r, Real h, Real v, Real w, Real vlo, Real rv, Real ep) <->
  \forall t \forall hn (
      (t<=ep|ep<0) & Alo(v,w,vlo,hn,t) -> (abs(r - rv*t) > rp | w*(hn-h) > hp)
  );

Bool Ladd(Real r, Real h, Real v, Real w, Real vlo, Real rv, Real ep) <-> 
  \forall hexL \forall vexL (
      (0 <= ep & ep < Tlo(v,w,vlo) & hexL = (w * alo)/2 * ep^2 + v*ep          & vexL = w*alo*ep + v)
    | (ep >= Tlo(v,w,vlo)          & hexL = vlo*ep - w*maxI(v,w,vlo)^2/(2*alo) & vexL = vlo)
    -> \exists vexLo Lone(r-rv*ep, h-hexL, vexL, w, vexLo, rv)
  );

Bool Uep(Real r, Real h, Real v, Real w, Real vup, Real rv, Real ep) <->
  \forall t \forall hn (
      (t<=ep|ep<0) & Aup(v,w,vup,hn,t) -> (abs(r - rv*t) > rp | w*(h-hn) > hp)
  );

Bool Uadd(Real r, Real h, Real v, Real w, Real vup, Real rv, Real ep) <-> 
  \forall hexU \forall vexU (
      (0 <= ep & ep < Tup(v,w,vup) & hexU = (w*aup)/2*ep^2 + v*ep & vexU = w*aup*ep + v)
    | (ep >= Tup(v,w,vup)          & hexU = w*max(w*vup,w*v)*ep - w*maxI(v,w,vup)^2/(2*aup) & vexU = w*max(w*vup,w*v))
    -> \exists vexUp Lone(r-rv*ep, h-hexU, vexU, -w, vexUp, rv)
  );

Bool Cimpl(Real r, Real h, Real v, Real w, Real vlo, Real vup, Real rv, Real ep) <-> (
    (Lep(r,h,v,w,vlo,rv,ep) & Ladd(r,h,v,w,vlo,rv,ep))
  | (Uep(r,h,v,w,vup,rv,ep) & Uadd(r,h,v,w,vup,rv,ep)));

Bool init(Real w, Real rv) <-> 
  rp>=0 & hp>0 & rv>=0 & alo>0 & (w=wUp | w=wLo) & aup > alo & epsilon > 0;

Bool loopInv(Real r, Real h, Real v, Real w, Real vlo, Real vup, Real rv, Real tt) <-> 
  0 <= tt & tt <= epsilon & init(w,rv) & Cimpl(r,h,v,w,vlo,vup,rv,epsilon-tt);

HP motion ::= { 
  {r' = -rv, h' = -v, v' = a, tt'=1 
      & tt <= epsilon & (w*v>=w*vlo | w*a>=alo) 
      & ((w*v<=w*vup & w*a<=aup) | w*a<=0) }
};
End.


Lemma "ACAS X Hybrid Games/Safeability for a Non-Maneuvering Intruder: Lep case".

ProgramVariables
  
  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */
  
  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real vup;  /* target maximum vertical ownship velocity */
  Real w;    /* velocity bound */
  Real a;    /* ownship acceleration */
  
  Real tt;
  Real t_;

End.

Problem

  t_>=0
& 0<=tt & tt<=epsilon
& t_+tt<=epsilon
& init(w,rv)
& Lep(r,h,v,w,vlo,rv,epsilon-tt)
& (w*v>=w*vlo | w*a>=alo)
& ((w*v<=w*vup & w*a<=aup) | w*a<=0)
& (w*(a*t_+v)>=w*vlo | w*a>=alo)
& ((w*(a*t_+v)<=w*vup & w*a<=aup) | w*a<=0)
->
Lep((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vlo,rv,epsilon-(t_+tt))

End.

Tactic "ACAS X Hybrid Games/Proof Safeability for a Non-Maneuvering Intruder: Lep case"
implyR('R=="t_>=0&0<=tt&tt<=epsilon()&t_+tt<=epsilon()&init(w,rv)&Lep(r,h,v,w,vlo,rv,epsilon()-tt)&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)&(w*(a*t_+v)>=w*vlo|w*a>=alo())&(w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0)->Lep((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vlo,rv,epsilon()-(t_+tt))");
expand "Lep";
allR('R=="\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&Alo(a*t_+v,w,vlo,hn,t)->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp())");
allR('R=="\forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&Alo(a*t_+v,w,vlo,hn,t)->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp())");
implyR('R=="(t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&Alo(a*t_+v,w,vlo,hn,t)->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp()");
andL('L)*;
allL("t+t_", 'L=="\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&Alo(v,w,vlo,hn,t)->abs(r-rv*t)>rp()|w*(hn-h)>hp())");
cut("0<=t+t_&t+t_<=epsilon()-tt"); <(
  "Use":
    andL('L=="0<=t+t_&t+t_<=epsilon()-tt");
    simplify('L=="\forall hn ((t+t_<=epsilon()-tt|epsilon()-tt < 0)&Alo(v,w,vlo,hn,t+t_)->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())") using "t+t_<=epsilon()-tt";
    cut("t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
      "Use":
        orL('L=="t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"); <(
          "t+t_ < Tlo(v,w,vlo)":
            expand "Alo";
            simplify('L=="\forall hn (0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())") using "0<=t+t_ :: t+t_ < Tlo(v,w,vlo) :: nil";
            allL("w*alo()/2*(t+t_)^2+v*(t+t_)", 'L=="\forall hn (hn=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())");
            simplify('L=="w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)->abs(r-rv*(t+t_))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()") using "nil";
            orR('R=="abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp()");
            orL('L=="abs(r-rv*(t+t_))>rp()|w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()"); <(
              "abs(r-rv*(t+t_))>rp()":
                QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: abs(r-rv*(t+t_))>rp() :: 0<=t+t_ :: t+t_<=epsilon()-tt :: t+t_ < Tlo(v,w,vlo) :: abs((-rv)*t_+r-rv*t)>rp() :: nil",
              "w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp()":
                expand "init";
                andL('L)*;
                orL('L=="w=wUp()|w=wLo()"); <(
                  "w=wUp()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < Tlo(a*t_+v,w,vlo)&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=Tlo(a*t_+v,w,vlo)&hn=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: t+t_ < Tlo(v,w,vlo) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil",
                  "w=wLo()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < Tlo(a*t_+v,w,vlo)&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=Tlo(a*t_+v,w,vlo)&hn=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(w*alo()/2*(t+t_)^2+v*(t+t_)-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: t+t_ < Tlo(v,w,vlo) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil"
                )
            ),
          "t+t_>=Tlo(v,w,vlo)":
            expand "Alo";
            simplify('L=="\forall hn (0<=t+t_&t+t_ < Tlo(v,w,vlo)&hn=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tlo(v,w,vlo)&hn=vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())") using "0<=t+t_ :: t+t_>=Tlo(v,w,vlo) :: nil";
            expand "Tlo";
            expand "maxI";
            minmax('L=="t+t_>=#max(0,w*(vlo-v))#/alo()");
            orL('L=="0>=w*(vlo-v)&max_=0|0 < w*(vlo-v)&max_=w*(vlo-v)"); <(
              "0>=w*(vlo-v)&max_=0":
                allL("vlo*(t+t_)", 'L=="\forall hn (hn=vlo*(t+t_)-w*max_^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())");
                andL('L=="0>=w*(vlo-v)&max_=0");
                edit("abs(r-rv*(t+t_))>rp()|w*(vlo*(t+t_)-h)>hp()", 'L=="vlo*(t+t_)=vlo*(t+t_)-w*max_^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(vlo*(t+t_)-h)>hp()") using "max_=0";
                orR('R=="abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp()");
                orL('L=="abs(r-rv*(t+t_))>rp()|w*(vlo*(t+t_)-h)>hp()"); <(
                  "abs(r-rv*(t+t_))>rp()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: abs(r-rv*(t+t_))>rp() :: 0<=t+t_ :: t+t_<=epsilon()-tt :: t+t_>=max_/alo() :: 0>=w*(vlo-v) :: max_=0 :: abs((-rv)*t_+r-rv*t)>rp() :: nil",
                  "w*(vlo*(t+t_)-h)>hp()":
                    expand "init";
                    andL('L)*;
                    minmax('L=="0<=t&t < #max(0,w*(vlo-(a*t_+v)))#/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*t-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo())");
                    orL('L=="w=wUp()|w=wLo()"); <(
                      "w=wUp()":
                        orL('L=="0>=w*(vlo-(a*t_+v))&max__0=0|0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v))"); <(
                          "0>=w*(vlo-(a*t_+v))&max__0=0":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < max__0/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max__0/alo()&hn=vlo*t-w*max__0^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(vlo*(t+t_)-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: 0>=w*(vlo-v) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: 0>=w*(vlo-(a*t_+v))&max__0=0 :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil",
                          "0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v))":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < max__0/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max__0/alo()&hn=vlo*t-w*max__0^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(vlo*(t+t_)-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: 0>=w*(vlo-v) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: 0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v)) :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil"
                        ),
                      "w=wLo()":
                        orL('L=="0>=w*(vlo-(a*t_+v))&max__0=0|0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v))"); <(
                          "0>=w*(vlo-(a*t_+v))&max__0=0":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < max__0/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max__0/alo()&hn=vlo*t-w*max__0^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(vlo*(t+t_)-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: 0>=w*(vlo-v) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: 0>=w*(vlo-(a*t_+v))&max__0=0 :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil",
                          "0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v))":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < max__0/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max__0/alo()&hn=vlo*t-w*max__0^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(vlo*(t+t_)-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: 0>=w*(vlo-v) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: 0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v)) :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil"
                        )
                    )
                ),
              "0 < w*(vlo-v)&max_=w*(vlo-v)":
                andL('L=="0 < w*(vlo-v)&max_=w*(vlo-v)");
                allL2R('L=="max_=w*(vlo-v)");
                allL("vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())", 'L=="\forall hn (hn=vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(hn-h)>hp())");
                simplify('L=="vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())=vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*(vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())-h)>hp()") using "nil";
                orR('R=="abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp()");
                orL('L=="abs(r-rv*(t+t_))>rp()|w*(vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())-h)>hp()"); <(
                  "abs(r-rv*(t+t_))>rp()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: abs(r-rv*(t+t_))>rp() :: 0<=t+t_ :: t+t_<=epsilon()-tt :: t+t_>=w*(vlo-v)/alo() :: 0 < w*(vlo-v) :: max_=w*(vlo-v) :: abs((-rv)*t_+r-rv*t)>rp() :: nil",
                  "w*(vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())-h)>hp()":
                    minmax('L=="0<=t&t < #max(0,w*(vlo-(a*t_+v)))#/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*t-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo())");
                    expand "init";
                    andL('L)*;
                    orL('L=="w=wUp()|w=wLo()"); <(
                      "w=wUp()":
                        orL('L=="0>=w*(vlo-(a*t_+v))&max__0=0|0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v))"); <(
                          "0>=w*(vlo-(a*t_+v))&max__0=0":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < max__0/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max__0/alo()&hn=vlo*t-w*max__0^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: t+t_>=w*(vlo-v)/alo() :: 0 < w*(vlo-v) :: 0>=w*(vlo-(a*t_+v))&max__0=0 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil",
                          "0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v))":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < max__0/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max__0/alo()&hn=vlo*t-w*max__0^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: t+t_>=w*(vlo-v)/alo() :: 0 < w*(vlo-v) :: 0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v)) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil"
                        ),
                      "w=wLo()":
                        orL('L=="0>=w*(vlo-(a*t_+v))&max__0=0|0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v))"); <(
                          "0>=w*(vlo-(a*t_+v))&max__0=0":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < max__0/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max__0/alo()&hn=vlo*t-w*max__0^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: t+t_>=w*(vlo-v)/alo() :: 0 < w*(vlo-v) :: 0>=w*(vlo-(a*t_+v))&max__0=0 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil",
                          "0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v))":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < max__0/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max__0/alo()&hn=vlo*t-w*max__0^2/(2*alo()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(vlo*(t+t_)-w*(w*(vlo-v))^2/(2*alo())-h)>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=t+t_ :: t+t_<=epsilon()-tt :: t+t_>=w*(vlo-v)/alo() :: 0 < w*(vlo-v) :: 0 < w*(vlo-(a*t_+v))&max__0=w*(vlo-(a*t_+v)) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp() :: nil"
                        )
                    )
                )
            )
        ),
      "Show":
        QE using "t+t_ < Tlo(v,w,vlo)|t+t_>=Tlo(v,w,vlo)"
    ),
  "Show":
    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: Alo(a*t_+v,w,vlo,hn,t) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=t+t_&t+t_<=epsilon()-tt :: nil"
)
End.

End.

Lemma "ACAS X Hybrid Games/Safeability for a Non-Maneuvering Intruder: Ladd case".

ProgramVariables
  
  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */
  
  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real vup;  /* target maximum vertical ownship velocity */
  Real w;    /* velocity bound */
  Real a;    /* ownship acceleration */
  
  Real tt;
  Real t_;

End.

Problem

  t_>=0
& 0<=tt & tt<=epsilon
& t_+tt<=epsilon
& init(w,rv)
& Ladd(r,h,v,w,vlo,rv,epsilon-tt)
& (w*v>=w*vlo | w*a>=alo)
& ((w*v<=w*vup & w*a<=aup) | w*a<=0)
& (w*(a*t_+v)>=w*vlo | w*a>=alo)
& ((w*(a*t_+v)<=w*vup & w*a<=aup) | w*a<=0)
->
Ladd((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vlo,rv,epsilon-(t_+tt))

End.

Tactic "ACAS X Hybrid Games/Proof Safeability for a Non-Maneuvering Intruder: Ladd case"
implyR('R=="t_>=0&0<=tt&tt<=epsilon()&t_+tt<=epsilon()&init(w,rv)&Ladd(r,h,v,w,vlo,rv,epsilon()-tt)&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)&(w*(a*t_+v)>=w*vlo|w*a>=alo())&(w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0)->Ladd((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vlo,rv,epsilon()-(t_+tt))");
expand "Ladd";
allR('R=="\forall hexL \forall vexL (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tlo(a*t_+v,w,vlo)&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tlo(a*t_+v,w,vlo)&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo->\exists vexLo Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexL,vexL,w,vexLo,rv))");
allR('R=="\forall vexL (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tlo(a*t_+v,w,vlo)&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tlo(a*t_+v,w,vlo)&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo->\exists vexLo Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexL,vexL,w,vexLo,rv))");
implyR('R=="0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tlo(a*t_+v,w,vlo)&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tlo(a*t_+v,w,vlo)&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo->\exists vexLo Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexL,vexL,w,vexLo,rv)");
andL('L)*;
cut("0<=epsilon()-tt&(epsilon()-tt < Tlo(v,w,vlo)|epsilon()-tt>=Tlo(v,w,vlo))"); <(
  "Use":
    andL('L=="0<=epsilon()-tt&(epsilon()-tt < Tlo(v,w,vlo)|epsilon()-tt>=Tlo(v,w,vlo))");
    simplify('L=="\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < Tlo(v,w,vlo)&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=Tlo(v,w,vlo)&hexL=vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())&vexL=vlo->\exists vexLo Lone(r-rv*(epsilon()-tt),h-hexL,vexL,w,vexLo,rv))") using "0<=epsilon()-tt";
    orL('L=="epsilon()-tt < Tlo(v,w,vlo)|epsilon()-tt>=Tlo(v,w,vlo)"); <(
      "epsilon()-tt < Tlo(v,w,vlo)":
        simplify('L=="\forall hexL \forall vexL (epsilon()-tt < Tlo(v,w,vlo)&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=Tlo(v,w,vlo)&hexL=vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())&vexL=vlo->\exists vexLo Lone(r-rv*(epsilon()-tt),h-hexL,vexL,w,vexLo,rv))") using "epsilon()-tt < Tlo(v,w,vlo)";
        allL("w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)", 'L=="\forall hexL \forall vexL (hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v->\exists vexLo Lone(r-rv*(epsilon()-tt),h-hexL,vexL,w,vexLo,rv))");
        allL("w*alo()*(epsilon()-tt)+v", 'L=="\forall vexL (w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v->\exists vexLo Lone(r-rv*(epsilon()-tt),h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)),vexL,w,vexLo,rv))");
        simplify('L=="w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&w*alo()*(epsilon()-tt)+v=w*alo()*(epsilon()-tt)+v->\exists vexLo Lone(r-rv*(epsilon()-tt),h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)),w*alo()*(epsilon()-tt)+v,w,vexLo,rv)") using "nil";
        existsL('L=="\exists vexLo Lone(r-rv*(epsilon()-tt),h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)),w*alo()*(epsilon()-tt)+v,w,vexLo,rv)");
        existsR("vexLo", 'R=="\exists vexLo Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexL,vexL,w,vexLo,rv)");
        expand "Lone";
        allR('R=="\forall t \forall ro \forall ho (0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp())");
        allR('R=="\forall ro \forall ho (0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp())");
        allR('R=="\forall ho (0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp())");
        implyR('R=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
        orR('R=="abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
        orL('L=="0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tlo(a*t_+v,w,vlo)&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tlo(a*t_+v,w,vlo)&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo"); <(
          "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tlo(a*t_+v,w,vlo)&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)":
            allL("t", 'L=="\forall t \forall ro \forall ho (0<=t&t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())");
            allL("rv*t", 'L=="\forall ro \forall ho (0<=t&t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())");
            cut("0<=t&(t < Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)|t>=Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo))"); <(
              "Use":
                expand "Tlo";
                andL('L=="0<=t&(t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo())");
                simplify('L=="\forall ho (0<=t&t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&rv*t=rv*t&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&rv*t=rv*t&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())") using "0<=t";
                orL('L=="t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()"); <(
                  "t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()":
                    simplify('L=="\forall ho (t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())") using "t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()";
                    allL("w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t", 'L=="\forall ho (ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())");
                    simplify('L=="w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()") using "nil";
                    orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()"); <(
                      "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                        orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                          "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil"
                        ),
                      "w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()":
                        orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                            QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp() :: nil",
                          "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                            edit("abbrv(w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()", 'L=="w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()");
                            edit("abbrv(w*(-(a*(t_^2/2)+v*t_)+h-hexL)) < w*ho-hp()", 'R=="w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
                            cut("abbrv>=abbrv_0"); <(
                              "Use":
                                expand "init";
                                andL('L)*;
                                orL('L=="w=wUp()|w=wLo()"); <(
                                  "w=wUp()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp() :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: 0<=epsilon()-(t_+tt) :: rp()>=0 :: t>=maxI(vexL,w,vexLo)/alo() :: epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo() :: hp()>0 :: ro=rv*t :: ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt)) :: vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil",
                                  "w=wLo()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp() :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: 0<=epsilon()-(t_+tt) :: rp()>=0 :: t>=maxI(vexL,w,vexLo)/alo() :: epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo() :: hp()>0 :: ro=rv*t :: ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt)) :: vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil"
                                ),
                              "Show":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv=w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: abbrv>=abbrv_0 :: nil"
                            )
                        )
                    ),
                  "t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()":
                    simplify('L=="\forall ho (t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())") using "t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()";
                    allL("vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())", 'L=="\forall ho (ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())");
                    simplify('L=="vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()") using "nil";
                    orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()"); <(
                      "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                        orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: w*v>=w*vlo|w*a>=alo() :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                          "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil"
                        ),
                      "w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()":
                        expand "init";
                        andL('L)*;
                        edit("abbrv(w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()", 'L=="w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()");
                        edit("abbrv(w*(-(a*(t_^2/2)+v*t_)+h-hexL)) < w*ho-hp()", 'R=="w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
                        cut("abbrv>=abbrv_0"); <(
                          "Use":
                            orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                              "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                                orL('L=="w=wUp()|w=wLo()"); <(
                                  "w=wUp()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: 0<=epsilon()-(t_+tt) :: rp()>=0 :: epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo() :: hp()>0 :: hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt)) :: vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < w*ho-hp() :: nil",
                                  "w=wLo()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: 0<=epsilon()-(t_+tt) :: rp()>=0 :: epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo() :: hp()>0 :: hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt)) :: vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < w*ho-hp() :: nil"
                                ),
                              "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                                orL('L=="w=wUp()|w=wLo()"); <(
                                  "w=wUp()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: 0<=epsilon()-(t_+tt) :: rp()>=0 :: epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo() :: hp()>0 :: hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt)) :: vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < w*ho-hp() :: nil",
                                  "w=wLo()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: 0<=epsilon()-(t_+tt) :: rp()>=0 :: epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo() :: hp()>0 :: hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt)) :: vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < w*ho-hp() :: nil"
                                )
                            ),
                          "Show":
                            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: 0<=t :: 0<=epsilon()-(t_+tt) :: rp()>=0 :: epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo() :: hp()>0 :: hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt)) :: vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: rv>=0 :: alo()>0 :: w=wUp()|w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: abbrv>=abbrv_0 :: nil"
                        )
                    )
                ),
              "Show":
                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tlo(a*t_+v,w,vlo)&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt < Tlo(v,w,vlo) :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t&(t < Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)|t>=Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)) :: nil"
            ),
          "epsilon()-(t_+tt)>=Tlo(a*t_+v,w,vlo)&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo":
            allL("t", 'L=="\forall t \forall ro \forall ho (0<=t&t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())");
            allL("rv*t", 'L=="\forall ro \forall ho (0<=t&t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())");
            cut("0<=t&(t < Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)|t>=Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo))"); <(
              "Use":
                andL('L=="0<=t&(t < Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)|t>=Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo))");
                simplify('L=="\forall ho (0<=t&t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&rv*t=rv*t&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&rv*t=rv*t&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())") using "0<=t";
                orL('L=="t < Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)|t>=Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)"); <(
                  "t < Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)":
                    expand "Tlo";
                    simplify('L=="\forall ho (t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())") using "t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()";
                    allL("w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t", 'L=="\forall ho (ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())");
                    simplify('L=="w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()") using "nil";
                    orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()"); <(
                      "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                        orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                          "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil"
                        ),
                      "w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()":
                        edit("abbrv(w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()", 'L=="w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp()");
                        edit("abbrv(w*(-(a*(t_^2/2)+v*t_)+h-hexL)) < w*ho-hp()", 'R=="w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
                        cut("abbrv>=abbrv_0"); <(
                          "Use":
                            expand "init";
                            andL('L)*;
                            orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                              "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                                orL('L=="w=wUp()|w=wLo()"); <(
                                  "w=wUp()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil",
                                  "w=wLo()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil"
                                ),
                              "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                                orL('L=="w=wUp()|w=wLo()"); <(
                                  "w=wUp()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil",
                                  "w=wLo()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t)-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil"
                                )
                            ),
                          "Show":
                            expand "init";
                            andL('L)*;
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv=w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil",
                              "w=wLo()":
                                QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv=w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil"
                            )
                        )
                    ),
                  "t>=Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)":
                    expand "Tlo";
                    simplify('L=="\forall ho (t < maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ho=w*alo()/2*t^2+(w*alo()*(epsilon()-tt)+v)*t|t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()&ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())") using "t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo()";
                    allL("vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())", 'L=="\forall ho (ho=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*ho-hp())");
                    simplify('L=="vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())=vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()") using "nil";
                    orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()"); <(
                      "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                        orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                          "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil"
                        ),
                      "w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()":
                        edit("abbrv(w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()", 'L=="w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp()");
                        edit("abbrv(w*(-(a*(t_^2/2)+v*t_)+h-hexL)) < w*ho-hp()", 'R=="w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
                        cut("abbrv>=abbrv_0"); <(
                          "Use":
                            expand "init";
                            andL('L)*;
                            orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                              "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                                orL('L=="w=wUp()|w=wLo()"); <(
                                  "w=wUp()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil",
                                  "w=wLo()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil"
                                ),
                              "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                                orL('L=="w=wUp()|w=wLo()"); <(
                                  "w=wUp()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil",
                                  "w=wLo()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)^2/(2*alo()))-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv>=abbrv_0 :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil"
                                )
                            ),
                          "Show":
                            expand "init";
                            andL('L)*;
                            orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                              "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                                orL('L=="w=wUp()|w=wLo()"); <(
                                  "w=wUp()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv=w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil",
                                  "w=wLo()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv=w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil"
                                ),
                              "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                                orL('L=="w=wUp()|w=wLo()"); <(
                                  "w=wUp()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv=w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil",
                                  "w=wLo()":
                                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < maxI(v,w,vlo)/alo() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(w*alo()*(epsilon()-tt)+v,w,vexLo)/alo() :: abbrv=w*(h-(w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo() :: rp()>=0 :: hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: vexL=vlo :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil"
                                )
                            )
                        )
                    )
                ),
              "Show":
                QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt < Tlo(v,w,vlo) :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t&(t < Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)|t>=Tlo(w*alo()*(epsilon()-tt)+v,w,vexLo)) :: nil"
            )
        ),
      "epsilon()-tt>=Tlo(v,w,vlo)":
        simplify('L=="\forall hexL \forall vexL (epsilon()-tt < Tlo(v,w,vlo)&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=Tlo(v,w,vlo)&hexL=vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())&vexL=vlo->\exists vexLo Lone(r-rv*(epsilon()-tt),h-hexL,vexL,w,vexLo,rv))") using "epsilon()-tt>=Tlo(v,w,vlo)";
        allL("vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())", 'L=="\forall hexL \forall vexL (hexL=vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())&vexL=vlo->\exists vexLo Lone(r-rv*(epsilon()-tt),h-hexL,vexL,w,vexLo,rv))");
        allL("vlo", 'L=="\forall vexL (vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())&vexL=vlo->\exists vexLo Lone(r-rv*(epsilon()-tt),h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())),vexL,w,vexLo,rv))");
        simplify('L=="vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())&vlo=vlo->\exists vexLo Lone(r-rv*(epsilon()-tt),h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())),vlo,w,vexLo,rv)") using "nil";
        existsL('L=="\exists vexLo Lone(r-rv*(epsilon()-tt),h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())),vlo,w,vexLo,rv)");
        existsR("vexLo", 'R=="\exists vexLo Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexL,vexL,w,vexLo,rv)");
        expand "Lone";
        allR('R=="\forall t \forall ro \forall ho (0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp())");
        allR('R=="\forall ro \forall ho (0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp())");
        allR('R=="\forall ho (0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp())");
        implyR('R=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
        orR('R=="abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
        cut("0<=t&(t < Tlo(vlo,w,vexLo)|t>=Tlo(vlo,w,vexLo))"); <(
          "Use":
            allL("t", 'L=="\forall t \forall ro \forall ho (0<=t&t < maxI(vlo,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vlo*t|t>=maxI(vlo,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*ho-hp())");
            allL("rv*t", 'L=="\forall ro \forall ho (0<=t&t < maxI(vlo,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vlo*t|t>=maxI(vlo,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*ho-hp())");
            andL('L=="0<=t&(t < Tlo(vlo,w,vexLo)|t>=Tlo(vlo,w,vexLo))");
            simplify('L=="\forall ho (0<=t&t < maxI(vlo,w,vexLo)/alo()&rv*t=rv*t&ho=w*alo()/2*t^2+vlo*t|t>=maxI(vlo,w,vexLo)/alo()&rv*t=rv*t&ho=vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*ho-hp())") using "0<=t";
            orL('L=="t < Tlo(vlo,w,vexLo)|t>=Tlo(vlo,w,vexLo)"); <(
              "t < Tlo(vlo,w,vexLo)":
                expand "Tlo";
                simplify('L=="\forall ho (t < maxI(vlo,w,vexLo)/alo()&ho=w*alo()/2*t^2+vlo*t|t>=maxI(vlo,w,vexLo)/alo()&ho=vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*ho-hp())") using "t < maxI(vlo,w,vexLo)/alo()";
                allL("w*alo()/2*t^2+vlo*t", 'L=="\forall ho (ho=w*alo()/2*t^2+vlo*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*ho-hp())");
                simplify('L=="w*alo()/2*t^2+vlo*t=w*alo()/2*t^2+vlo*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*(w*alo()/2*t^2+vlo*t)-hp()") using "nil";
                orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*(w*alo()/2*t^2+vlo*t)-hp()"); <(
                  "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                    orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                      "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                        QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                      "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                        QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil"
                    ),
                  "w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*(w*alo()/2*t^2+vlo*t)-hp()":
                    edit("abbrv(w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())))) < w*(w*alo()/2*t^2+vlo*t)-hp()", 'L=="w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*(w*alo()/2*t^2+vlo*t)-hp()");
                    edit("abbrv(w*(-(a*(t_^2/2)+v*t_)+h-hexL)) < w*ho-hp()", 'R=="w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
                    cut("abbrv>=abbrv_0"); <(
                      "Use":
                        expand "init";
                        andL('L)*;
                        orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+vlo*t)-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abbrv>=abbrv_0 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+vlo*t)-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abbrv>=abbrv_0 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil"
                            ),
                          "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+vlo*t)-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abbrv>=abbrv_0 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abbrv < w*(w*alo()/2*t^2+vlo*t)-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abbrv>=abbrv_0 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv_0 < w*ho-hp() :: nil"
                            )
                        ),
                      "Show":
                        expand "init";
                        andL('L)*;
                        orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abbrv=w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abbrv=w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil"
                            ),
                          "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abbrv=w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t < maxI(vlo,w,vexLo)/alo() :: abbrv=w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil"
                            )
                        )
                    )
                ),
              "t>=Tlo(vlo,w,vexLo)":
                expand "Tlo";
                simplify('L=="\forall ho (t < maxI(vlo,w,vexLo)/alo()&ho=w*alo()/2*t^2+vlo*t|t>=maxI(vlo,w,vexLo)/alo()&ho=vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*ho-hp())") using "t>=maxI(vlo,w,vexLo)/alo()";
                allL("vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo())", 'L=="\forall ho (ho=vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*ho-hp())");
                simplify('L=="vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo())=vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*(vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo()))-hp()") using "nil";
                orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*(vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo()))-hp()"); <(
                  "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                    orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                      "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                        QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                      "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                        QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil"
                    ),
                  "w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*(vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo()))-hp()":
                    edit("abbrv(w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo())))) < w*(vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo()))-hp()", 'L=="w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) < w*(vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo()))-hp()");
                    edit("abbrv(w*(-(a*(t_^2/2)+v*t_)+h-hexL)) < w*ho-hp()", 'R=="w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()");
                    expand "init";
                    andL('L)*;
                    cut("abbrv>=abbrv_0"); <(
                      "Use":
                        orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < w*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < w*ho-hp() :: nil"
                            ),
                          "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo()))-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < w*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: abbrv < w*(vexLo*t-w*maxI(vlo,w,vexLo)^2/(2*alo()))-hp() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < w*ho-hp() :: nil"
                            )
                        ),
                      "Show":
                        orL('L=="0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: abbrv=w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: abbrv=w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil"
                            ),
                          "t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: abbrv=w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < maxI(a*t_+v,w,vlo)/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=maxI(a*t_+v,w,vlo)/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=maxI(v,w,vlo)/alo() :: t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t :: t>=maxI(vlo,w,vexLo)/alo() :: abbrv=w*(h-(vlo*(epsilon()-tt)-w*maxI(v,w,vlo)^2/(2*alo()))) :: abbrv_0=w*(-(a*(t_^2/2)+v*t_)+h-hexL) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: nil"
                            )
                        )
                    )
                )
            ),
          "Show":
            QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt :: epsilon()-tt>=Tlo(v,w,vlo) :: 0<=t&t < maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=maxI(vexL,w,vexLo)/alo()&ro=rv*t&ho=vexLo*t-w*maxI(vexL,w,vexLo)^2/(2*alo()) :: 0<=t&(t < Tlo(vlo,w,vexLo)|t>=Tlo(vlo,w,vexLo)) :: nil"
        )
    ),
  "Show":
    QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tlo(a*t_+v,w,vlo)&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tlo(a*t_+v,w,vlo)&hexL=vlo*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vlo)^2/(2*alo())&vexL=vlo :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt&(epsilon()-tt < Tlo(v,w,vlo)|epsilon()-tt>=Tlo(v,w,vlo)) :: nil"
)
End.

End.

Lemma "ACAS X Hybrid Games/Safeability for a Non-Maneuvering Intruder: Uep case".

ProgramVariables
  
  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */
  
  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real vup;  /* target maximum vertical ownship velocity */
  Real w;    /* velocity bound */
  Real a;    /* ownship acceleration */
  
  Real tt;
  Real t_;

End.

Problem

  t_>=0
& 0<=tt & tt<=epsilon
& t_+tt<=epsilon
& init(w,rv)
& Uep(r,h,v,w,vup,rv,epsilon-tt)
& (w*v>=w*vlo | w*a>=alo)
& ((w*v<=w*vup & w*a<=aup) | w*a<=0)
& (w*(a*t_+v)>=w*vlo | w*a>=alo)
& ((w*(a*t_+v)<=w*vup & w*a<=aup) | w*a<=0)
->
Uep((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vup,rv,epsilon-(t_+tt))

End.

Tactic "ACAS X Hybrid Games/Proof Safeability for a Non-Maneuvering Intruder: Uep case"
implyR('R=="t_>=0&0<=tt&tt<=epsilon()&t_+tt<=epsilon()&init(w,rv)&Uep(r,h,v,w,vup,rv,epsilon()-tt)&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)&(w*(a*t_+v)>=w*vlo|w*a>=alo())&(w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0)->Uep((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vup,rv,epsilon()-(t_+tt))");
expand "Uep";
allR('R=="\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&Aup(a*t_+v,w,vup,hn,t)->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())");
allR('R=="\forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&Aup(a*t_+v,w,vup,hn,t)->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())");
implyR('R=="(t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&Aup(a*t_+v,w,vup,hn,t)->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp()");
orR('R=="abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp()");
andL('L)*;
allL("t+t_", 'L=="\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&Aup(v,w,vup,hn,t)->abs(r-rv*t)>rp()|w*(h-hn)>hp())");
cut("t+t_<=epsilon()-tt&0<=t+t_&(t+t_ < Tup(v,w,vup)|t+t_>=Tup(v,w,vup))"); <(
  "Use":
    andL('L)*;
    simplify('L=="\forall hn ((t+t_<=epsilon()-tt|epsilon()-tt < 0)&Aup(v,w,vup,hn,t+t_)->abs(r-rv*(t+t_))>rp()|w*(h-hn)>hp())") using "t+t_<=epsilon()-tt";
    expand "Aup";
    simplify('L=="\forall hn (0<=t+t_&t+t_ < Tup(v,w,vup)&hn=w*aup()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tup(v,w,vup)&hn=w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())->abs(r-rv*(t+t_))>rp()|w*(h-hn)>hp())") using "0<=t+t_";
    orL('L=="t+t_ < Tup(v,w,vup)|t+t_>=Tup(v,w,vup)"); <(
      "t+t_ < Tup(v,w,vup)":
        simplify('L=="\forall hn (t+t_ < Tup(v,w,vup)&hn=w*aup()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tup(v,w,vup)&hn=w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())->abs(r-rv*(t+t_))>rp()|w*(h-hn)>hp())") using "t+t_ < Tup(v,w,vup)";
        allL("w*aup()/2*(t+t_)^2+v*(t+t_)", 'L=="\forall hn (hn=w*aup()/2*(t+t_)^2+v*(t+t_)->abs(r-rv*(t+t_))>rp()|w*(h-hn)>hp())");
        simplify('L=="w*aup()/2*(t+t_)^2+v*(t+t_)=w*aup()/2*(t+t_)^2+v*(t+t_)->abs(r-rv*(t+t_))>rp()|w*(h-(w*aup()/2*(t+t_)^2+v*(t+t_)))>hp()") using "nil";
        orL('L=="abs(r-rv*(t+t_))>rp()|w*(h-(w*aup()/2*(t+t_)^2+v*(t+t_)))>hp()"); <(
          "abs(r-rv*(t+t_))>rp()":
            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: abs(r-rv*(t+t_))>rp() :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_ < Tup(v,w,vup) :: abs((-rv)*t_+r-rv*t)>rp() :: nil",
          "w*(h-(w*aup()/2*(t+t_)^2+v*(t+t_)))>hp()":
            expand "init";
            andL('L)*;
            orL('L=="0<=t&t < Tup(a*t_+v,w,vup)&hn=w*aup()/2*t^2+(a*t_+v)*t|t>=Tup(a*t_+v,w,vup)&hn=w*max(w*vup,w*(a*t_+v))*t-w*maxI(a*t_+v,w,vup)^2/(2*aup())"); <(
              "0<=t&t < Tup(a*t_+v,w,vup)&hn=w*aup()/2*t^2+(a*t_+v)*t":
                orL('L=="w=wUp()|w=wLo()"); <(
                  "w=wUp()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < Tup(a*t_+v,w,vup)&hn=w*aup()/2*t^2+(a*t_+v)*t :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*aup()/2*(t+t_)^2+v*(t+t_)))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_ < Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil",
                  "w=wLo()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < Tup(a*t_+v,w,vup)&hn=w*aup()/2*t^2+(a*t_+v)*t :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*aup()/2*(t+t_)^2+v*(t+t_)))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_ < Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil"
                ),
              "t>=Tup(a*t_+v,w,vup)&hn=w*max(w*vup,w*(a*t_+v))*t-w*maxI(a*t_+v,w,vup)^2/(2*aup())":
                orL('L=="w=wUp()|w=wLo()"); <(
                  "w=wUp()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=Tup(a*t_+v,w,vup)&hn=w*max(w*vup,w*(a*t_+v))*t-w*maxI(a*t_+v,w,vup)^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*aup()/2*(t+t_)^2+v*(t+t_)))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_ < Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil",
                  "w=wLo()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=Tup(a*t_+v,w,vup)&hn=w*max(w*vup,w*(a*t_+v))*t-w*maxI(a*t_+v,w,vup)^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*aup()/2*(t+t_)^2+v*(t+t_)))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_ < Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil"
                )
            )
        ),
      "t+t_>=Tup(v,w,vup)":
        simplify('L=="\forall hn (t+t_ < Tup(v,w,vup)&hn=w*aup()/2*(t+t_)^2+v*(t+t_)|t+t_>=Tup(v,w,vup)&hn=w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())->abs(r-rv*(t+t_))>rp()|w*(h-hn)>hp())") using "t+t_>=Tup(v,w,vup)";
        allL("w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())", 'L=="\forall hn (hn=w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())->abs(r-rv*(t+t_))>rp()|w*(h-hn)>hp())");
        simplify('L=="w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())=w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())->abs(r-rv*(t+t_))>rp()|w*(h-(w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())))>hp()") using "nil";
        expand "init";
        andL('L)*;
        orL('L=="abs(r-rv*(t+t_))>rp()|w*(h-(w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())))>hp()"); <(
          "abs(r-rv*(t+t_))>rp()":
            orL('L=="w=wUp()|w=wLo()"); <(
              "w=wUp()":
                QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: abs(r-rv*(t+t_))>rp() :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abs((-rv)*t_+r-rv*t)>rp() :: nil",
              "w=wLo()":
                QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: abs(r-rv*(t+t_))>rp() :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abs((-rv)*t_+r-rv*t)>rp() :: nil"
            ),
          "w*(h-(w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())))>hp()":
            orL('L=="0<=t&t < Tup(a*t_+v,w,vup)&hn=w*aup()/2*t^2+(a*t_+v)*t|t>=Tup(a*t_+v,w,vup)&hn=w*max(w*vup,w*(a*t_+v))*t-w*maxI(a*t_+v,w,vup)^2/(2*aup())"); <(
              "0<=t&t < Tup(a*t_+v,w,vup)&hn=w*aup()/2*t^2+(a*t_+v)*t":
                orL('L=="w=wUp()|w=wLo()"); <(
                  "w=wUp()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < Tup(a*t_+v,w,vup)&hn=w*aup()/2*t^2+(a*t_+v)*t :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil",
                  "w=wLo()":
                    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: 0<=t&t < Tup(a*t_+v,w,vup)&hn=w*aup()/2*t^2+(a*t_+v)*t :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*maxI(v,w,vup)^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil"
                ),
              "t>=Tup(a*t_+v,w,vup)&hn=w*max(w*vup,w*(a*t_+v))*t-w*maxI(a*t_+v,w,vup)^2/(2*aup())":
                orL('L=="w=wUp()|w=wLo()"); <(
                  "w=wUp()":
                    expand "Tup";
                    expand "maxI";
                    minmax('L=="t>=#max(0,w*(vup-(a*t_+v)))#/aup()&hn=w*max(w*vup,w*(a*t_+v))*t-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup())");
                    minmax('L=="t>=max_/aup()&hn=w*#max(w*vup,w*(a*t_+v))#*t-w*max_^2/(2*aup())");
                    orL('L=="0>=w*(vup-(a*t_+v))&max_=0|0 < w*(vup-(a*t_+v))&max_=w*(vup-(a*t_+v))"); <(
                      "0>=w*(vup-(a*t_+v))&max_=0":
                        orL('L=="w*vup>=w*(a*t_+v)&max__0=w*vup|w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)"); <(
                          "w*vup>=w*(a*t_+v)&max__0=w*vup":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=max_/aup()&hn=w*max__0*t-w*max_^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*max(0,w*(vup-v))^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=max(0,w*(vup-v))/aup() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: 0>=w*(vup-(a*t_+v))&max_=0 :: w*vup>=w*(a*t_+v)&max__0=w*vup :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil",
                          "w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=max_/aup()&hn=w*max__0*t-w*max_^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*max(0,w*(vup-v))^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=max(0,w*(vup-v))/aup() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: 0>=w*(vup-(a*t_+v))&max_=0 :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil"
                        ),
                      "0 < w*(vup-(a*t_+v))&max_=w*(vup-(a*t_+v))":
                        orL('L=="w*vup>=w*(a*t_+v)&max__0=w*vup|w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)"); <(
                          "w*vup>=w*(a*t_+v)&max__0=w*vup":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=max_/aup()&hn=w*max__0*t-w*max_^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*max(0,w*(vup-v))^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=max(0,w*(vup-v))/aup() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: 0 < w*(vup-(a*t_+v))&max_=w*(vup-(a*t_+v)) :: w*vup>=w*(a*t_+v)&max__0=w*vup :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil",
                          "w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=max_/aup()&hn=w*max__0*t-w*max_^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*max(0,w*(vup-v))^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=max(0,w*(vup-v))/aup() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: 0 < w*(vup-(a*t_+v))&max_=w*(vup-(a*t_+v)) :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil"
                        )
                    ),
                  "w=wLo()":
                    expand "maxI";
                    minmax('L=="t>=Tup(a*t_+v,w,vup)&hn=w*#max(w*vup,w*(a*t_+v))#*t-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup())");
                    minmax('L=="t>=Tup(a*t_+v,w,vup)&hn=w*max_*t-w*#max(0,w*(vup-(a*t_+v)))#^2/(2*aup())");
                    orL('L=="w*vup>=w*(a*t_+v)&max_=w*vup|w*vup < w*(a*t_+v)&max_=w*(a*t_+v)"); <(
                      "w*vup>=w*(a*t_+v)&max_=w*vup":
                        orL('L=="0>=w*(vup-(a*t_+v))&max__0=0|0 < w*(vup-(a*t_+v))&max__0=w*(vup-(a*t_+v))"); <(
                          "0>=w*(vup-(a*t_+v))&max__0=0":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=Tup(a*t_+v,w,vup)&hn=w*max_*t-w*max__0^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*max(0,w*(vup-v))^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*vup>=w*(a*t_+v)&max_=w*vup :: 0>=w*(vup-(a*t_+v))&max__0=0 :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil",
                          "0 < w*(vup-(a*t_+v))&max__0=w*(vup-(a*t_+v))":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=Tup(a*t_+v,w,vup)&hn=w*max_*t-w*max__0^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*max(0,w*(vup-v))^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*vup>=w*(a*t_+v)&max_=w*vup :: 0 < w*(vup-(a*t_+v))&max__0=w*(vup-(a*t_+v)) :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil"
                        ),
                      "w*vup < w*(a*t_+v)&max_=w*(a*t_+v)":
                        orL('L=="0>=w*(vup-(a*t_+v))&max__0=0|0 < w*(vup-(a*t_+v))&max__0=w*(vup-(a*t_+v))"); <(
                          "0>=w*(vup-(a*t_+v))&max__0=0":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=Tup(a*t_+v,w,vup)&hn=w*max_*t-w*max__0^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*max(0,w*(vup-v))^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: 0>=w*(vup-(a*t_+v))&max__0=0 :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil",
                          "0 < w*(vup-(a*t_+v))&max__0=w*(vup-(a*t_+v))":
                            QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: t>=Tup(a*t_+v,w,vup)&hn=w*max_*t-w*max__0^2/(2*aup()) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*(h-(w*max(w*vup,w*v)*(t+t_)-w*max(0,w*(vup-v))^2/(2*aup())))>hp() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: t+t_<=epsilon()-tt :: 0<=t+t_ :: t+t_>=Tup(v,w,vup) :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: 0 < w*(vup-(a*t_+v))&max__0=w*(vup-(a*t_+v)) :: w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp() :: nil"
                        )
                    )
                )
            )
        )
    ),
  "Show":
    QE using "t_>=0 :: t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0 :: Aup(a*t_+v,w,vup,hn,t) :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: t+t_<=epsilon()-tt&0<=t+t_&(t+t_ < Tup(v,w,vup)|t+t_>=Tup(v,w,vup)) :: nil"
)
End.

End.

Lemma "ACAS X Hybrid Games/Safeability for a Non-Maneuvering Intruder: Uadd case".

ProgramVariables
  
  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */
  
  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real vup;  /* target maximum vertical ownship velocity */
  Real w;    /* velocity bound */
  Real a;    /* ownship acceleration */
  
  Real tt;
  Real t_;

End.

Problem

  t_>=0
& 0<=tt & tt<=epsilon
& t_+tt<=epsilon
& init(w,rv)
& Uadd(r,h,v,w,vup,rv,epsilon-tt)
& (w*v>=w*vlo | w*a>=alo)
& ((w*v<=w*vup & w*a<=aup) | w*a<=0)
& (w*(a*t_+v)>=w*vlo | w*a>=alo)
& ((w*(a*t_+v)<=w*vup & w*a<=aup) | w*a<=0)
->
Uadd((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vup,rv,epsilon-(t_+tt))

End.

Tactic "Safeability for a Non-Maneuvering Intruder Uadd case: Proof"
implyR('R=="t_>=0&0<=tt&tt<=epsilon()&t_+tt<=epsilon()&init(w,rv)&Uadd(r,h,v,w,vup,rv,epsilon()-tt)&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)&(w*(a*t_+v)>=w*vlo|w*a>=alo())&(w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0)->Uadd((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vup,rv,epsilon()-(t_+tt))");
expand "Uadd";
allR('R=="\forall hexU \forall vexU (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexU,vexU,-w,vexUp,rv))");
allR('R=="\forall vexU (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexU,vexU,-w,vexUp,rv))");
implyR('R=="0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexU,vexU,-w,vexUp,rv)");
andL('L)*;
cut("0<=epsilon()-tt&(epsilon()-tt < Tup(v,w,vup)|epsilon()-tt>=Tup(v,w,vup))"); <(
  "Use":
    andL('L=="0<=epsilon()-tt&(epsilon()-tt < Tup(v,w,vup)|epsilon()-tt>=Tup(v,w,vup))");
    simplify('L=="\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < Tup(v,w,vup)&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=Tup(v,w,vup)&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp Lone(r-rv*(epsilon()-tt),h-hexU,vexU,-w,vexUp,rv))") using "0<=epsilon()-tt";
    orL('L=="epsilon()-tt < Tup(v,w,vup)|epsilon()-tt>=Tup(v,w,vup)"); <(
      "epsilon()-tt < Tup(v,w,vup)":
        simplify('L=="\forall hexU \forall vexU (epsilon()-tt < Tup(v,w,vup)&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=Tup(v,w,vup)&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp Lone(r-rv*(epsilon()-tt),h-hexU,vexU,-w,vexUp,rv))") using "epsilon()-tt < Tup(v,w,vup)";
        allL("w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)", 'L=="\forall hexU \forall vexU (hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v->\exists vexUp Lone(r-rv*(epsilon()-tt),h-hexU,vexU,-w,vexUp,rv))");
        allL("w*aup()*(epsilon()-tt)+v", 'L=="\forall vexU (w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v->\exists vexUp Lone(r-rv*(epsilon()-tt),h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)),vexU,-w,vexUp,rv))");
        simplify('L=="w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&w*aup()*(epsilon()-tt)+v=w*aup()*(epsilon()-tt)+v->\exists vexUp Lone(r-rv*(epsilon()-tt),h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)),w*aup()*(epsilon()-tt)+v,-w,vexUp,rv)") using "nil";
        existsL('L=="\exists vexUp Lone(r-rv*(epsilon()-tt),h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)),w*aup()*(epsilon()-tt)+v,-w,vexUp,rv)");
        existsR("vexUp", 'R=="\exists vexUp Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexU,vexU,-w,vexUp,rv)");
        expand "Lone";
        allR('R=="\forall t \forall ro \forall ho (0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp())");
        allR('R=="\forall ro \forall ho (0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp())");
        allR('R=="\forall ho (0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp())");
        implyR('R=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()");
        orR('R=="abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()");
        allL("t", 'L=="\forall t \forall ro \forall ho (0<=t&t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t|t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*ho-hp())");
        allL("rv*t", 'L=="\forall ro \forall ho (0<=t&t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t|t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*ho-hp())");
        cut("0<=t&(t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()|t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo())"); <(
          "Use":
            andL('L=="0<=t&(t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()|t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo())");
            simplify('L=="\forall ho (0<=t&t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&rv*t=rv*t&ho=(-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t|t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&rv*t=rv*t&ho=vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*ho-hp())") using "0<=t";
            orL('L=="t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()|t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()"); <(
              "t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()":
                simplify('L=="\forall ho (t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&ho=(-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t|t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&ho=vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*ho-hp())") using "t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()";
                allL("(-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t", 'L=="\forall ho (ho=(-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*ho-hp())");
                simplify('L=="(-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t=(-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp()") using "nil";
                expand "init";
                andL('L)*;
                orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp()"); <(
                  "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp()|w=wLo() :: aup()>alo() :: epsilon()>0 :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                  "(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp()":
                    edit("abbrv((-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)))) < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp()", 'L=="(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp()");
                    edit("abbrv((-w)*(-(a*(t_^2/2)+v*t_)+h-hexU)) < (-w)*ho-hp()", 'R=="(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()");
                    cut("abbrv>=abbrv_0"); <(
                      "Use":
                        orL('L=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abbrv < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abbrv < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil"
                            ),
                          "t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abbrv < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp() :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abbrv < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp() :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil"
                            )
                        ),
                      "Show":
                        orL('L=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abbrv < (-w)*((-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t)-hp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: abbrv>=abbrv_0 :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: abbrv>=abbrv_0 :: nil"
                            ),
                          "t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: abbrv>=abbrv_0 :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: abbrv>=abbrv_0 :: nil"
                            )
                        )
                    )
                ),
              "t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()":
                simplify('L=="\forall ho (t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&ho=(-w)*alo()/2*t^2+(w*aup()*(epsilon()-tt)+v)*t|t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()&ho=vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*ho-hp())") using "t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()";
                allL("vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo())", 'L=="\forall ho (ho=vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*ho-hp())");
                simplify('L=="vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo())=vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*(vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo()))-hp()") using "nil";
                expand "init";
                andL('L)*;
                orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*(vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo()))-hp()"); <(
                  "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp()|w=wLo() :: aup()>alo() :: epsilon()>0 :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                  "(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*(vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo()))-hp()":
                    edit("abbrv((-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)))) < (-w)*(vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo()))-hp()", 'L=="(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) < (-w)*(vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo()))-hp()");
                    edit("abbrv((-w)*(-(a*(t_^2/2)+v*t_)+h-hexU)) < (-w)*ho-hp()", 'R=="(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()");
                    cut("abbrv>=abbrv_0"); <(
                      "Use":
                        orL('L=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abbrv < (-w)*(vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abbrv < (-w)*(vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil"
                            ),
                          "t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abbrv < (-w)*(vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo()))-hp() :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: abbrv < (-w)*(vexUp*t-(-w)*maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)^2/(2*alo()))-hp() :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil"
                            )
                        ),
                      "Show":
                        orL('L=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: abbrv>=abbrv_0 :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: abbrv>=abbrv_0 :: nil"
                            ),
                          "t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: abbrv>=abbrv_0 :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt < Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: abbrv>=abbrv_0 :: nil"
                            )
                        )
                    )
                )
            ),
          "Show":
            QE using "init(w,rv) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t&(t < maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()|t>=maxI(w*aup()*(epsilon()-tt)+v,-w,vexUp)/alo()) :: nil"
        ),
      "epsilon()-tt>=Tup(v,w,vup)":
        simplify('L=="\forall hexU \forall vexU (epsilon()-tt < Tup(v,w,vup)&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=Tup(v,w,vup)&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp Lone(r-rv*(epsilon()-tt),h-hexU,vexU,-w,vexUp,rv))") using "epsilon()-tt>=Tup(v,w,vup)";
        allL("w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())", 'L=="\forall hexU \forall vexU (hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp Lone(r-rv*(epsilon()-tt),h-hexU,vexU,-w,vexUp,rv))");
        allL("w*max(w*vup,w*v)", 'L=="\forall vexU (w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())=w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp Lone(r-rv*(epsilon()-tt),h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())),vexU,-w,vexUp,rv))");
        simplify('L=="w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())=w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())&w*max(w*vup,w*v)=w*max(w*vup,w*v)->\exists vexUp Lone(r-rv*(epsilon()-tt),h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())),w*max(w*vup,w*v),-w,vexUp,rv)") using "nil";
        existsL('L=="\exists vexUp Lone(r-rv*(epsilon()-tt),h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())),w*max(w*vup,w*v),-w,vexUp,rv)");
        existsR("vexUp", 'R=="\exists vexUp Lone((-rv)*t_+r-rv*(epsilon()-(t_+tt)),-(a*(t_^2/2)+v*t_)+h-hexU,vexU,-w,vexUp,rv)");
        expand "Lone";
        allR('R=="\forall t \forall ro \forall ho (0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp())");
        allR('R=="\forall ro \forall ho (0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp())");
        allR('R=="\forall ho (0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp())");
        implyR('R=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()");
        orR('R=="abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()");
        allL("t", 'L=="\forall t \forall ro \forall ho (0<=t&t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+w*max(w*vup,w*v)*t|t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*ho-hp())");
        allL("rv*t", 'L=="\forall ro \forall ho (0<=t&t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+w*max(w*vup,w*v)*t|t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*ho-hp())");
        cut("0<=t&(t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()|t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo())"); <(
          "Use":
            andL('L=="0<=t&(t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()|t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo())");
            simplify('L=="\forall ho (0<=t&t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&rv*t=rv*t&ho=(-w)*alo()/2*t^2+w*max(w*vup,w*v)*t|t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&rv*t=rv*t&ho=vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*ho-hp())") using "0<=t";
            orL('L=="t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()|t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo()"); <(
              "t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()":
                simplify('L=="\forall ho (t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&ho=(-w)*alo()/2*t^2+w*max(w*vup,w*v)*t|t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&ho=vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*ho-hp())") using "t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()";
                allL("(-w)*alo()/2*t^2+w*max(w*vup,w*v)*t", 'L=="\forall ho (ho=(-w)*alo()/2*t^2+w*max(w*vup,w*v)*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*ho-hp())");
                simplify('L=="(-w)*alo()/2*t^2+w*max(w*vup,w*v)*t=(-w)*alo()/2*t^2+w*max(w*vup,w*v)*t->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*((-w)*alo()/2*t^2+w*max(w*vup,w*v)*t)-hp()") using "nil";
                expand "init";
                andL('L)*;
                orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*((-w)*alo()/2*t^2+w*max(w*vup,w*v)*t)-hp()"); <(
                  "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp()|w=wLo() :: aup()>alo() :: epsilon()>0 :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                  "(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*((-w)*alo()/2*t^2+w*max(w*vup,w*v)*t)-hp()":
                    edit("abbrv((-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())))) < (-w)*((-w)*alo()/2*t^2+w*max(w*vup,w*v)*t)-hp()", 'L=="(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*((-w)*alo()/2*t^2+w*max(w*vup,w*v)*t)-hp()");
                    edit("abbrv((-w)*(-(a*(t_^2/2)+v*t_)+h-hexU)) < (-w)*ho-hp()", 'R=="(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()");
                    cut("abbrv>=abbrv_0"); <(
                      "Use":
                        orL('L=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abbrv < (-w)*((-w)*alo()/2*t^2+w*max(w*vup,w*v)*t)-hp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abbrv < (-w)*((-w)*alo()/2*t^2+w*max(w*vup,w*v)*t)-hp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil"
                            ),
                          "t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abbrv < (-w)*((-w)*alo()/2*t^2+w*max(w*vup,w*v)*t)-hp() :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abbrv < (-w)*((-w)*alo()/2*t^2+w*max(w*vup,w*v)*t)-hp() :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil"
                            )
                        ),
                      "Show":
                        minmax('L=="abbrv < (-w)*((-w)*alo()/2*t^2+w*#max(w*vup,w*v)#*t)-hp()");
                        minmax('L=="0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*#max(w*vup,w*(a*t_+v))#*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))");
                        orL('L=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t":
                            orL('L=="w*vup>=w*v&max_=w*vup|w*vup < w*v&max_=w*v"); <(
                              "w*vup>=w*v&max_=w*vup":
                                orL('L=="w*vup>=w*(a*t_+v)&max__0=w*vup|w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)"); <(
                                  "w*vup>=w*(a*t_+v)&max__0=w*vup":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*v&max_=w*vup :: w*vup>=w*(a*t_+v)&max__0=w*vup :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*v&max_=w*vup :: w*vup>=w*(a*t_+v)&max__0=w*vup :: abbrv>=abbrv_0 :: nil"
                                    ),
                                  "w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*v&max_=w*vup :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*v&max_=w*vup :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: abbrv>=abbrv_0 :: nil"
                                    )
                                ),
                              "w*vup < w*v&max_=w*v":
                                orL('L=="w*vup>=w*(a*t_+v)&max__0=w*vup|w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)"); <(
                                  "w*vup>=w*(a*t_+v)&max__0=w*vup":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*v&max_=w*v :: w*vup>=w*(a*t_+v)&max__0=w*vup :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*v&max_=w*v :: w*vup>=w*(a*t_+v)&max__0=w*vup :: abbrv>=abbrv_0 :: nil"
                                    ),
                                  "w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*v&max_=w*v :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*v&max_=w*v :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: abbrv>=abbrv_0 :: nil"
                                    )
                                )
                            ),
                          "t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())":
                            orL('L=="w*vup>=w*v&max_=w*vup|w*vup < w*v&max_=w*v"); <(
                              "w*vup>=w*v&max_=w*vup":
                                orL('L=="w*vup>=w*(a*t_+v)&max__0=w*vup|w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)"); <(
                                  "w*vup>=w*(a*t_+v)&max__0=w*vup":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*v&max_=w*vup :: w*vup>=w*(a*t_+v)&max__0=w*vup :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*v&max_=w*vup :: w*vup>=w*(a*t_+v)&max__0=w*vup :: abbrv>=abbrv_0 :: nil"
                                    ),
                                  "w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*v&max_=w*vup :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*v&max_=w*vup :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: abbrv>=abbrv_0 :: nil"
                                    )
                                ),
                              "w*vup < w*v&max_=w*v":
                                orL('L=="w*vup>=w*(a*t_+v)&max__0=w*vup|w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)"); <(
                                  "w*vup>=w*(a*t_+v)&max__0=w*vup":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*v&max_=w*v :: w*vup>=w*(a*t_+v)&max__0=w*vup :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*v&max_=w*v :: w*vup>=w*(a*t_+v)&max__0=w*vup :: abbrv>=abbrv_0 :: nil"
                                    ),
                                  "w*vup < w*(a*t_+v)&max__0=w*(a*t_+v)":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*v&max_=w*v :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max__0*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max__0 :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t < maxI(w*max_,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max_*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*v&max_=w*v :: w*vup < w*(a*t_+v)&max__0=w*(a*t_+v) :: abbrv>=abbrv_0 :: nil"
                                    )
                                )
                            )
                        )
                    )
                ),
              "t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo()":
                simplify('L=="\forall ho (t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&ho=(-w)*alo()/2*t^2+w*max(w*vup,w*v)*t|t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo()&ho=vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*ho-hp())") using "t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo()";
                allL("vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo())", 'L=="\forall ho (ho=vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*ho-hp())");
                simplify('L=="vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo())=vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo())->abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*(vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo()))-hp()") using "nil";
                expand "init";
                andL('L)*;
                orL('L=="abs(r-rv*(epsilon()-tt)-rv*t)>rp()|(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*(vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo()))-hp()"); <(
                  "abs(r-rv*(epsilon()-tt)-rv*t)>rp()":
                    QE using "t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abs(r-rv*(epsilon()-tt)-rv*t)>rp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp()|w=wLo() :: aup()>alo() :: epsilon()>0 :: abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp() :: nil",
                  "(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*(vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo()))-hp()":
                    edit("abbrv((-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())))) < (-w)*(vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo()))-hp()", 'L=="(-w)*(h-(w*max(w*vup,w*v)*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) < (-w)*(vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo()))-hp()");
                    edit("abbrv((-w)*(-(a*(t_^2/2)+v*t_)+h-hexU)) < (-w)*ho-hp()", 'R=="(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()");
                    cut("abbrv>=abbrv_0"); <(
                      "Use":
                        orL('L=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abbrv < (-w)*(vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abbrv < (-w)*(vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo()))-hp() :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil"
                            ),
                          "t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())":
                            orL('L=="w=wUp()|w=wLo()"); <(
                              "w=wUp()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abbrv < (-w)*(vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo()))-hp() :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil",
                              "w=wLo()":
                                QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: abbrv < (-w)*(vexUp*t-(-w)*maxI(w*max(w*vup,w*v),-w,vexUp)^2/(2*alo()))-hp() :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv>=abbrv_0 :: abbrv_0 < (-w)*ho-hp() :: nil"
                            )
                        ),
                      "Show":
                        minmax('L=="0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*#max(w*vup,w*(a*t_+v))#*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))");
                        minmax('L=="abbrv=(-w)*(h-(w*#max(w*vup,w*v)#*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup())))");
                        orL('L=="0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())"); <(
                          "0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t":
                            orL('L=="w*vup>=w*(a*t_+v)&max_=w*vup|w*vup < w*(a*t_+v)&max_=w*(a*t_+v)"); <(
                              "w*vup>=w*(a*t_+v)&max_=w*vup":
                                orL('L=="w*vup>=w*v&max__0=w*vup|w*vup < w*v&max__0=w*v"); <(
                                  "w*vup>=w*v&max__0=w*vup":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*(a*t_+v)&max_=w*vup :: w*vup>=w*v&max__0=w*vup :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*(a*t_+v)&max_=w*vup :: w*vup>=w*v&max__0=w*vup :: abbrv>=abbrv_0 :: nil"
                                    ),
                                  "w*vup < w*v&max__0=w*v":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*(a*t_+v)&max_=w*vup :: w*vup < w*v&max__0=w*v :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*(a*t_+v)&max_=w*vup :: w*vup < w*v&max__0=w*v :: abbrv>=abbrv_0 :: nil"
                                    )
                                ),
                              "w*vup < w*(a*t_+v)&max_=w*(a*t_+v)":
                                orL('L=="w*vup>=w*v&max__0=w*vup|w*vup < w*v&max__0=w*v"); <(
                                  "w*vup>=w*v&max__0=w*vup":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: w*vup>=w*v&max__0=w*vup :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: w*vup>=w*v&max__0=w*vup :: abbrv>=abbrv_0 :: nil"
                                    ),
                                  "w*vup < w*v&max__0=w*v":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: w*vup < w*v&max__0=w*v :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: w*vup < w*v&max__0=w*v :: abbrv>=abbrv_0 :: nil"
                                    )
                                )
                            ),
                          "t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo())":
                            orL('L=="w*vup>=w*(a*t_+v)&max_=w*vup|w*vup < w*(a*t_+v)&max_=w*(a*t_+v)"); <(
                              "w*vup>=w*(a*t_+v)&max_=w*vup":
                                orL('L=="w*vup>=w*v&max__0=w*vup|w*vup < w*v&max__0=w*v"); <(
                                  "w*vup>=w*v&max__0=w*vup":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*(a*t_+v)&max_=w*vup :: w*vup>=w*v&max__0=w*vup :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*(a*t_+v)&max_=w*vup :: w*vup>=w*v&max__0=w*vup :: abbrv>=abbrv_0 :: nil"
                                    ),
                                  "w*vup < w*v&max__0=w*v":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*(a*t_+v)&max_=w*vup :: w*vup < w*v&max__0=w*v :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup>=w*(a*t_+v)&max_=w*vup :: w*vup < w*v&max__0=w*v :: abbrv>=abbrv_0 :: nil"
                                    )
                                ),
                              "w*vup < w*(a*t_+v)&max_=w*(a*t_+v)":
                                orL('L=="w*vup>=w*v&max__0=w*vup|w*vup < w*v&max__0=w*v"); <(
                                  "w*vup>=w*v&max__0=w*vup":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: w*vup>=w*v&max__0=w*vup :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: w*vup>=w*v&max__0=w*vup :: abbrv>=abbrv_0 :: nil"
                                    ),
                                  "w*vup < w*v&max__0=w*v":
                                    orL('L=="w=wUp()|w=wLo()"); <(
                                      "w=wUp()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wUp() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: w*vup < w*v&max__0=w*v :: abbrv>=abbrv_0 :: nil",
                                      "w=wLo()":
                                        QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max_*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max_ :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: w*v>=w*vlo|w*a>=alo() :: w*v<=w*vup&w*a<=aup()|w*a<=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0 :: 0<=epsilon()-tt :: epsilon()-tt>=Tup(v,w,vup) :: t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t :: t>=maxI(w*max__0,-w,vexUp)/alo() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: w=wLo() :: aup()>alo() :: epsilon()>0 :: abbrv=(-w)*(h-(w*max__0*(epsilon()-tt)-w*maxI(v,w,vup)^2/(2*aup()))) :: abbrv_0=(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) :: w*vup < w*(a*t_+v)&max_=w*(a*t_+v) :: w*vup < w*v&max__0=w*v :: abbrv>=abbrv_0 :: nil"
                                    )
                                )
                            )
                        )
                    )
                )
            ),
          "Show":
            QE using "init(w,rv) :: 0<=t&t < maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=maxI(vexU,-w,vexUp)/alo()&ro=rv*t&ho=vexUp*t-(-w)*maxI(vexU,-w,vexUp)^2/(2*alo()) :: 0<=t&(t < maxI(w*max(w*vup,w*v),-w,vexUp)/alo()|t>=maxI(w*max(w*vup,w*v),-w,vexUp)/alo()) :: nil"
        )
    ),
  "Show":
    QE using "0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < Tup(a*t_+v,w,vup)&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=Tup(a*t_+v,w,vup)&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*maxI(a*t_+v,w,vup)^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v)) :: t_>=0 :: 0<=tt :: tt<=epsilon() :: t_+tt<=epsilon() :: init(w,rv) :: 0<=epsilon()-tt&(epsilon()-tt < Tup(v,w,vup)|epsilon()-tt>=Tup(v,w,vup)) :: nil"
)
End.

End.

Theorem "ACAS X Hybrid Games/Theorem 8.2: Safeability for a Non-Maneuvering Intruder with Upper Bound".

ProgramVariables
  
  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */
  
  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real vup;  /* target maximum vertical ownship velocity */
  Real w;    /* velocity bound */
  Real a;    /* ownship acceleration */
  
  Real tt;

End.

Problem
    (alo <= maxA & aup <= maxA & -maxA <= a & a <= maxA)
  & init(w,rv)
  & Cimpl(r,h,v,w,vlo,vup,rv,epsilon)
  & tt=0
  ->
  [{
     { { w:=wUp; ++ w:=wLo; }
       vlo := *; vup := *;
       ?Cimpl(r,h,v,w,vlo,vup,rv,epsilon);
     }
     tt := 0;
     { a := *; ?(-maxA <= a & a <= maxA); }^@
     { motion; }*@invariant(loopInv(r,h,v,w,vlo,vup,rv,tt))
   }*@invariant(loopInv(r,h,v,w,vlo,vup,rv,tt) & -maxA <= a & a <= maxA)
  ] ( abs(r) > rp | abs(h) > hp )
End.

Tactic "ACAS X Hybrid Games/Proof Theorem 8.2: Safeability for a Non-Maneuvering Intruder with Upper Bound"
implyR('R=="(alo()<=maxA()&aup()<=maxA()&-maxA()<=a&a<=maxA())&init(w,rv)&Cimpl(r,h,v,w,vlo,vup,rv,epsilon())&tt=0->[{{{w:=wUp();++w:=wLo();}vlo:=*;vup:=*;?Cimpl(r,h,v,w,vlo,vup,rv,epsilon());}tt:=0;{a:=*;?-maxA()<=a&a<=maxA();}^@{motion{|^@|};}*}*](abs(r)>rp()|abs(h)>hp())");
loop("loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA()", 'R=="[{{{w:=wUp();++w:=wLo();}vlo:=*;vup:=*;?Cimpl(r,h,v,w,vlo,vup,rv,epsilon());}tt:=0;{a:=*;?-maxA()<=a&a<=maxA();}^@{motion{|^@|};}*}*](abs(r)>rp()|abs(h)>hp())"); <(
  "Init":
    expand "loopInv";
    expand "init";
    allL2R('L=="tt=0");
    simplify('R=="(0<=0&0<=epsilon()&(rp()>=0&hp()>0&rv>=0&alo()>0&(w=wUp()|w=wLo())&aup()>alo()&epsilon()>0)&Cimpl(r,h,v,w,vlo,vup,rv,epsilon()-0))&-maxA()<=a&a<=maxA()");
    QE using "rp()>=0&hp()>0&rv>=0&alo()>0&(w=wUp()|w=wLo())&aup()>alo()&epsilon()>0 :: 0<=epsilon() :: nil",
  "Step":
    composeb('R=="[{{w:=wUp();++w:=wLo();}vlo:=*;vup:=*;?Cimpl(r,h,v,w,vlo,vup,rv,epsilon());}tt:=0;{a:=*;?-maxA()<=a&a<=maxA();}^@{motion{|^@|};}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())");
    MR("loopInv(r,h,v,w,vlo,vup,rv,0)", 'R=="[{w:=wUp();++w:=wLo();}vlo:=*;vup:=*;?Cimpl(r,h,v,w,vlo,vup,rv,epsilon());][tt:=0;{a:=*;?-maxA()<=a&a<=maxA();}^@{motion{|^@|};}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())"); <(
      "Use Q->P":
        andL('L=="loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA()");
        hideL('L=="-maxA()<=a&a<=maxA()");
        chaseAt('R=="[{w:=wUp();++w:=wLo();}vlo:=*;vup:=*;?Cimpl(r,h,v,w,vlo,vup,rv,epsilon());]loopInv(r,h,v,w,vlo,vup,rv,0)");
        andR('R=="\forall vlo \forall vup (Cimpl(r,h,v,wUp(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wUp(),vlo,vup,rv,0))&\forall vlo \forall vup (Cimpl(r,h,v,wLo(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wLo(),vlo,vup,rv,0))"); <(
          "\forall vlo \forall vup (Cimpl(r,h,v,wUp(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wUp(),vlo,vup,rv,0))":
            allR('R=="\forall vlo \forall vup (Cimpl(r,h,v,wUp(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wUp(),vlo,vup,rv,0))");
            allR('R=="\forall vup (Cimpl(r,h,v,wUp(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wUp(),vlo,vup,rv,0))");
            implyR('R=="Cimpl(r,h,v,wUp(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wUp(),vlo,vup,rv,0)");
            expand "loopInv";
            expand "init";
            andL('L)*;
            simplify('R=="0<=0&0<=epsilon()&(rp()>=0&hp()>0&rv>=0&alo()>0&(wUp()=wUp()|wUp()=wLo())&aup()>alo()&epsilon()>0)&Cimpl(r,h,v,wUp(),vlo,vup,rv,epsilon()-0)");
            closeT,
          "\forall vlo \forall vup (Cimpl(r,h,v,wLo(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wLo(),vlo,vup,rv,0))":
            allR('R=="\forall vlo \forall vup (Cimpl(r,h,v,wLo(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wLo(),vlo,vup,rv,0))");
            allR('R=="\forall vup (Cimpl(r,h,v,wLo(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wLo(),vlo,vup,rv,0))");
            implyR('R=="Cimpl(r,h,v,wLo(),vlo,vup,rv,epsilon())->loopInv(r,h,v,wLo(),vlo,vup,rv,0)");
            expand "loopInv";
            expand "init";
            andL('L)*;
            simplify('R=="0<=0&0<=epsilon()&(rp()>=0&hp()>0&rv>=0&alo()>0&(wLo()=wUp()|wLo()=wLo())&aup()>alo()&epsilon()>0)&Cimpl(r,h,v,wLo(),vlo,vup,rv,epsilon()-0)");
            closeT
        ),
      "Show [a]Q":
        composeb('R=="[tt:=0;{a:=*;?-maxA()<=a&a<=maxA();}^@{motion{|^@|};}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())");
        assignb('R=="[tt:=0;][{a:=*;?-maxA()<=a&a<=maxA();}^@{motion{|^@|};}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())");
        composeb('R=="[{a:=*;?-maxA()<=a&a<=maxA();}^@{{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())");
        dualDirectb('R=="[{a:=*;?-maxA()<=a&a<=maxA();}^@][{{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())");
        composed('R=="<a:=*;?-maxA()<=a&a<=maxA();>[{{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())");
        randomd('R=="<a:=*;><?-maxA()<=a&a<=maxA();>[{{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())");
        existsR('R=="\exists a <?-maxA()<=a&a<=maxA();>[{{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())");
        testd('R=="<?-maxA()<=a&a<=maxA();>[{{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())");
        simplify('R=="(-maxA()<=a&a<=maxA())&[{{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())") using "-maxA()<=a&a<=maxA()";
        loop("0<=tt&tt<=epsilon()&(rp()>=0&hp()>0&rv>=0&alo()>0&(w=wUp()|w=wLo())&aup()>alo()&epsilon()>0)&Cimpl(r,h,v,w,vlo,vup,rv,epsilon()-tt)", 'R=="[{{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}}*](loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA())"); <(
          "Init":
            allL2R('L=="tt=0");
            propClose,
          "Post":
            propClose,
          "Step":
            andL('L)*;
            boxAnd('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](0<=tt&tt<=epsilon()&(rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)&(\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))))");
            andR('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]0<=tt&[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](tt<=epsilon()&(rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)&(\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))))"); <(
              "[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]0<=tt":
                dIClose('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]0<=tt") using "0<=tt",
              "[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](tt<=epsilon()&(rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)&(\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))))":
                boxAnd('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](tt<=epsilon()&(rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)&(\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))))");
                andR('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]tt<=epsilon()&[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]((rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)&(\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))))"); <(
                  "[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]tt<=epsilon()":
                    dW('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]tt<=epsilon()");
                    propClose,
                  "[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]((rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)&(\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))))":
                    boxAnd('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}]((rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)&(\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))))");
                    andR('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)&[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp())))"); <(
                      "[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)":
                        GV('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](rp()>=0&hp()>0&rv>=0&alo()>0&(w=(-1)|w=1)&aup()>alo()&epsilon()>0)");
                        propClose,
                      "[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp())))":
                        diffUnpackEvolDomain('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp())))");
                        solve('R=="[{r'=-rv,h'=-v,v'=a,tt'=1&tt<=epsilon()&(w*v>=w*vlo|w*a>=alo())&(w*v<=w*vup&w*a<=aup()|w*a<=0)}](\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp())))");
                        allR('R=="\forall t_ (t_>=0->\forall s_ (0<=s_&s_<=t_->s_+tt<=epsilon()&(w*(a*s_+v)>=w*vlo|w*a>=alo())&(w*(a*s_+v)<=w*vup&w*a<=aup()|w*a<=0))->\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*t-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp())&\forall hexL \forall vexL (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vlo-(a*t_+v)))/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vlo-(a*t_+v)))/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*t-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp())))");
                        implyR('R=="t_>=0->\forall s_ (0<=s_&s_<=t_->s_+tt<=epsilon()&(w*(a*s_+v)>=w*vlo|w*a>=alo())&(w*(a*s_+v)<=w*vup&w*a<=aup()|w*a<=0))->\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*t-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp())&\forall hexL \forall vexL (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vlo-(a*t_+v)))/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vlo-(a*t_+v)))/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*t-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()))");
                        implyR('R=="\forall s_ (0<=s_&s_<=t_->s_+tt<=epsilon()&(w*(a*s_+v)>=w*vlo|w*a>=alo())&(w*(a*s_+v)<=w*vup&w*a<=aup()|w*a<=0))->\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*t-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp())&\forall hexL \forall vexL (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vlo-(a*t_+v)))/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vlo-(a*t_+v)))/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*t-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()))");
                        orR('R=="\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*t-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp())&\forall hexL \forall vexL (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vlo-(a*t_+v)))/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vlo-(a*t_+v)))/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*t-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()))");
                        allL("t_", 'L=="\forall s_ (0<=s_&s_<=t_->s_+tt<=epsilon()&(w*(a*s_+v)>=w*vlo|w*a>=alo())&(w*(a*s_+v)<=w*vup&w*a<=aup()|w*a<=0))");
                        simplify('L=="0<=t_&t_<=t_->t_+tt<=epsilon()&(w*(a*t_+v)>=w*vlo|w*a>=alo())&(w*(a*t_+v)<=w*vup&w*a<=aup()|w*a<=0)") using "t_>=0";
                        orL('L=="\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))|\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))"); <(
                          "\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))":
                            hideR('R=="\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*t-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()))");
                            andL('L=="\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())&\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))");
                            andR('R=="\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*t-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp())&\forall hexL \forall vexL (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vlo-(a*t_+v)))/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vlo-(a*t_+v)))/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()))"); <(
                              "\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*t-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp())":
                                hideL('L=="\forall hexL \forall vexL (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vlo-v))/alo()&hexL=w*alo()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexL=w*alo()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vlo-v))/alo()&hexL=vlo*(epsilon()-tt)-w*max(0,w*(vlo-v))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|w*(h-hexL) < w*ho-hp()))");
                                useLemma("ACAS X Hybrid Games/Safeability for a Non-Maneuvering Intruder: Lep case", "prop"),
                              "\forall hexL \forall vexL (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vlo-(a*t_+v)))/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vlo-(a*t_+v)))/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()))":
                                hideL('L=="\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vlo-v))/alo()&hn=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&hn=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo()))->abs(r-rv*t)>rp()|w*(hn-h)>hp())");
                                useLemma("ACAS X Hybrid Games/Safeability for a Non-Maneuvering Intruder: Ladd case", "prop")
                            ),
                          "\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))":
                            hideR('R=="\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vlo-(a*t_+v)))/alo()&hn=w*alo()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vlo-(a*t_+v)))/alo()&hn=vlo*t-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo()))->abs((-rv)*t_+r-rv*t)>rp()|w*(hn-(-(a*(t_^2/2)+v*t_)+h))>hp())&\forall hexL \forall vexL (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vlo-(a*t_+v)))/alo()&hexL=w*alo()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexL=w*alo()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vlo-(a*t_+v)))/alo()&hexL=vlo*(epsilon()-(t_+tt))-w*max(0,w*(vlo-(a*t_+v)))^2/(2*alo())&vexL=vlo->\exists vexLo \forall t \forall ro \forall ho (0<=t&t < max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=w*alo()/2*t^2+vexL*t|t>=max(0,w*(vexLo-vexL))/alo()&ro=rv*t&ho=vexLo*t-w*max(0,w*(vexLo-vexL))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hexL) < w*ho-hp()))");
                            andL('L=="\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))");
                            andR('R=="\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*t-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())&\forall hexU \forall vexU (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()))"); <(
                              "\forall t \forall hn ((t<=epsilon()-(t_+tt)|epsilon()-(t_+tt) < 0)&(0<=t&t < max(0,w*(vup-(a*t_+v)))/aup()&hn=w*aup()/2*t^2+(a*t_+v)*t|t>=max(0,w*(vup-(a*t_+v)))/aup()&hn=w*max(w*vup,w*(a*t_+v))*t-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup()))->abs((-rv)*t_+r-rv*t)>rp()|w*(-(a*(t_^2/2)+v*t_)+h-hn)>hp())":
                                hideL('L=="\forall hexU \forall vexU (0<=epsilon()-tt&epsilon()-tt < max(0,w*(vup-v))/aup()&hexU=w*aup()/2*(epsilon()-tt)^2+v*(epsilon()-tt)&vexU=w*aup()*(epsilon()-tt)+v|epsilon()-tt>=max(0,w*(vup-v))/aup()&hexU=w*max(w*vup,w*v)*(epsilon()-tt)-w*max(0,w*(vup-v))^2/(2*aup())&vexU=w*max(w*vup,w*v)->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs(r-rv*(epsilon()-tt)-ro)>rp()|(-w)*(h-hexU) < (-w)*ho-hp()))");
                                useLemma("ACAS X Hybrid Games/Safeability for a Non-Maneuvering Intruder: Uep case", "prop"),
                              "\forall hexU \forall vexU (0<=epsilon()-(t_+tt)&epsilon()-(t_+tt) < max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*aup()/2*(epsilon()-(t_+tt))^2+(a*t_+v)*(epsilon()-(t_+tt))&vexU=w*aup()*(epsilon()-(t_+tt))+(a*t_+v)|epsilon()-(t_+tt)>=max(0,w*(vup-(a*t_+v)))/aup()&hexU=w*max(w*vup,w*(a*t_+v))*(epsilon()-(t_+tt))-w*max(0,w*(vup-(a*t_+v)))^2/(2*aup())&vexU=w*max(w*vup,w*(a*t_+v))->\exists vexUp \forall t \forall ro \forall ho (0<=t&t < max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=(-w)*alo()/2*t^2+vexU*t|t>=max(0,(-w)*(vexUp-vexU))/alo()&ro=rv*t&ho=vexUp*t-(-w)*max(0,(-w)*(vexUp-vexU))^2/(2*alo())->abs((-rv)*t_+r-rv*(epsilon()-(t_+tt))-ro)>rp()|(-w)*(-(a*(t_^2/2)+v*t_)+h-hexU) < (-w)*ho-hp()))":
                                hideL('L=="\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&(0<=t&t < max(0,w*(vup-v))/aup()&hn=w*aup()/2*t^2+v*t|t>=max(0,w*(vup-v))/aup()&hn=w*max(w*vup,w*v)*t-w*max(0,w*(vup-v))^2/(2*aup()))->abs(r-rv*t)>rp()|w*(h-hn)>hp())");
                                useLemma("ACAS X Hybrid Games/Safeability for a Non-Maneuvering Intruder: Uadd case", "prop")
                            )
                        )
                    )
                )
            )
        )
    ),
  "Post":
    andL('L=="loopInv(r,h,v,w,vlo,vup,rv,tt)&-maxA()<=a&a<=maxA()");
    hideL('L=="-maxA()<=a&a<=maxA()");
    expand "loopInv";
    expand "Cimpl";
    andL('L)*;
    orR('R=="abs(r)>rp()|abs(h)>hp()");
    orL('L=="Lep(r,h,v,w,vlo,rv,epsilon()-tt)&Ladd(r,h,v,w,vlo,rv,epsilon()-tt)|Uep(r,h,v,w,vup,rv,epsilon()-tt)&Uadd(r,h,v,w,vup,rv,epsilon()-tt)"); <(
      "Lep(r,h,v,w,vlo,rv,epsilon()-tt)&Ladd(r,h,v,w,vlo,rv,epsilon()-tt)":
        andL('L=="Lep(r,h,v,w,vlo,rv,epsilon()-tt)&Ladd(r,h,v,w,vlo,rv,epsilon()-tt)");
        expand "Lep";
        allL("0", 'L=="\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&Alo(v,w,vlo,hn,t)->abs(r-rv*t)>rp()|w*(hn-h)>hp())");
        allL("0", 'L=="\forall hn ((0<=epsilon()-tt|epsilon()-tt < 0)&Alo(v,w,vlo,hn,0)->abs(r-rv*0)>rp()|w*(hn-h)>hp())");
        QE using "0<=tt :: tt<=epsilon() :: init(w,rv) :: (0<=epsilon()-tt|epsilon()-tt < 0)&Alo(v,w,vlo,0,0)->abs(r-rv*0)>rp()|w*(0-h)>hp() :: abs(r)>rp() :: abs(h)>hp() :: nil",
      "Uep(r,h,v,w,vup,rv,epsilon()-tt)&Uadd(r,h,v,w,vup,rv,epsilon()-tt)":
        andL('L=="Uep(r,h,v,w,vup,rv,epsilon()-tt)&Uadd(r,h,v,w,vup,rv,epsilon()-tt)");
        expand "Uep";
        allL("0", 'L=="\forall t \forall hn ((t<=epsilon()-tt|epsilon()-tt < 0)&Aup(v,w,vup,hn,t)->abs(r-rv*t)>rp()|w*(h-hn)>hp())");
        allL("0", 'L=="\forall hn ((0<=epsilon()-tt|epsilon()-tt < 0)&Aup(v,w,vup,hn,0)->abs(r-rv*0)>rp()|w*(h-hn)>hp())");
        QE using "0<=tt :: tt<=epsilon() :: init(w,rv) :: (0<=epsilon()-tt|epsilon()-tt < 0)&Aup(v,w,vup,0,0)->abs(r-rv*0)>rp()|w*(h-0)>hp() :: abs(r)>rp() :: abs(h)>hp() :: nil"
    )
)
End.

End.