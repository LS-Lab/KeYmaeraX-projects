/* Exported from KeYmaera X v4.9.7 */

Theorem "ACAS X Hybrid Games/Theorem 4.1: Correctness of implicit safe regions"

Definitions
  Real hp;   /* puck height */
  Real rp;   /* puck radius */
  Real alo;  /* minimal vertical acceleration. Typically g/4 */

  /* velocity bound 1 = lower, -1 = upper */
  Real wUp = -1;
  Real wLo = 1;

  Real c;    /* Intruder maneuverability */

  Real maxI(Real v, Real w, Real vlo) = max(0, w * (vlo - v));

  Bool Limpl(Real r, Real h, Real v, Real w, Real vlo, Real rv) <-> 
    \forall t \forall ro \forall ho (
        (0 <= t & t < maxI(v,w,vlo)/alo & ro = rv * t & ho = (w * alo)/2 * t^2 + v * t)
      | (t >= maxI(v,w,vlo)/alo & ro = rv * t & ho = vlo * t - w * maxI(v,w,vlo)^2/(2*alo))
      -> (abs(r - ro) > rp | w * h < w * ho - hp)
    );

  Bool init(Real rv) <-> rp>=0 & hp>0 & rv>=0 & alo>0 & c>0;

  Bool loopInv(Real r, Real h, Real v, Real w, Real vlo, Real rv) <-> ( (w=wUp | w=wLo) & init(rv) & Limpl(r,h,v,w,vlo,rv) );

  HP motion ::= { {r' = -rv, h' = -v, v' = ao-ai & w*v>=w*vlo|w*ao>=alo+c } };
End.

ProgramVariables

  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */

  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real w;    /* velocity direction */
  Real ao;   /* ownship climb rate */  
  Real ai;   /* intruder climb rate */

End.

Problem
    init(rv)
  & (w=wUp | w=wLo)
  & Limpl(r,h,v,w,vlo,rv)
  ->
  [{
     { ?true;
       ++
       {
        { w:=wUp; ++ w:=wLo; }
        vlo := *;
        ?Limpl(r,h,v,w,vlo,rv);
       }
     }
     { ao := *; }^@
     { ai := * ; ?(-c<ai & ai<c); motion; }*@invariant(loopInv(r,h,v,w,vlo,rv))
   }*@invariant(loopInv(r,h,v,w,vlo,rv))
  ]( abs(r)>rp | abs(h)>hp )
End.

Tactic "ACAS X Hybrid Games/Theorem 4.1 Proof"
implyR('R=="init(rv)&(w=wUp()|w=wLo())&Limpl(r,h,v,w,vlo,rv)->[{{?true;++{w:=wUp();++w:=wLo();}vlo:=*;?Limpl(r,h,v,w,vlo,rv);}{ao:=*;}^@{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*}*](abs(r)>rp()|abs(h)>hp())");
loop("loopInv(r,h,v,w,vlo,rv)", 'R=="[{{?true;++{w:=wUp();++w:=wLo();}vlo:=*;?Limpl(r,h,v,w,vlo,rv);}{ao:=*;}^@{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*}*](abs(r)>rp()|abs(h)>hp())"); <(
  "Init":
    expand "loopInv";
    propClose,
  "Step":
    composeb('R=="[{?true;++{w:=wUp();++w:=wLo();}vlo:=*;?Limpl(r,h,v,w,vlo,rv);}{ao:=*;}^@{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*]loopInv(r,h,v,w,vlo,rv)");
    MR("loopInv(r,h,v,w,vlo,rv)", 'R=="[?true;++{w:=wUp();++w:=wLo();}vlo:=*;?Limpl(r,h,v,w,vlo,rv);][{ao:=*;}^@{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*]loopInv(r,h,v,w,vlo,rv)"); <(
      "Use Q->P":
        chaseAt('R=="[?true;++{w:=wUp();++w:=wLo();}vlo:=*;?Limpl(r,h,v,w,vlo,rv);]loopInv(r,h,v,w,vlo,rv)");
        simplify('R=="(true->loopInv(r,h,v,w,vlo,rv))&\forall vlo (Limpl(r,h,v,wUp(),vlo,rv)->loopInv(r,h,v,wUp(),vlo,rv))&\forall vlo (Limpl(r,h,v,wLo(),vlo,rv)->loopInv(r,h,v,wLo(),vlo,rv))");
        andR('R=="\forall vlo (Limpl(r,h,v,wUp(),vlo,rv)->loopInv(r,h,v,wUp(),vlo,rv))&\forall vlo (Limpl(r,h,v,wLo(),vlo,rv)->loopInv(r,h,v,wLo(),vlo,rv))"); <(
          "\forall vlo (Limpl(r,h,v,wUp(),vlo,rv)->loopInv(r,h,v,wUp(),vlo,rv))":
            allR('R=="\forall vlo (Limpl(r,h,v,wUp(),vlo,rv)->loopInv(r,h,v,wUp(),vlo,rv))");
            implyR('R=="Limpl(r,h,v,wUp(),vlo,rv)->loopInv(r,h,v,wUp(),vlo,rv)");
            expand "loopInv";
            andL('L)*;
            simplify('R=="(wUp()=wUp()|wUp()=wLo())&init(rv)&Limpl(r,h,v,wUp(),vlo,rv)") using "Limpl(r,h,v,wUp(),vlo,rv) :: w=wUp()|w=wLo() :: init(rv) :: (wUp()=wUp()|wUp()=wLo())&init(rv)&Limpl(r,h,v,wUp(),vlo,rv) :: nil";
            closeT,
          "\forall vlo (Limpl(r,h,v,wLo(),vlo,rv)->loopInv(r,h,v,wLo(),vlo,rv))":
            allR('R=="\forall vlo (Limpl(r,h,v,wLo(),vlo,rv)->loopInv(r,h,v,wLo(),vlo,rv))");
            implyR('R=="Limpl(r,h,v,wLo(),vlo,rv)->loopInv(r,h,v,wLo(),vlo,rv)");
            expand "loopInv";
            andL('L)*;
            simplify('R=="(wLo()=wUp()|wLo()=wLo())&init(rv)&Limpl(r,h,v,wLo(),vlo,rv)") using "Limpl(r,h,v,wLo(),vlo,rv) :: w=wUp()|w=wLo() :: init(rv) :: (wLo()=wUp()|wLo()=wLo())&init(rv)&Limpl(r,h,v,wLo(),vlo,rv) :: nil";
            closeT
        ),
      "Show [a]Q":
        composeb('R=="[{ao:=*;}^@{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*]loopInv(r,h,v,w,vlo,rv)");
        dualDirectb('R=="[{ao:=*;}^@][{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*]loopInv(r,h,v,w,vlo,rv)");
        randomd('R=="<ao:=*;>[{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*]loopInv(r,h,v,w,vlo,rv)");
        existsR('R=="\exists ao [{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*]loopInv(r,h,v,w,vlo,rv)");
        expand "loopInv";
        boxAnd('R=="[{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*]((w=wUp()|w=wLo())&init(rv)&Limpl(r,h,v,w,vlo,rv))");
        andR('R=="[{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*](w=wUp()|w=wLo())&[{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*](init(rv)&Limpl(r,h,v,w,vlo,rv))"); <(
          "[{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*](w=wUp()|w=wLo())":
            expand "motion";
            GV('R=="[{ai:=*;?-c() < ai&ai < c();{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}}*](w=wUp()|w=wLo())");
            propClose,
          "[{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*](init(rv)&Limpl(r,h,v,w,vlo,rv))":
            loop("(w=wUp()|w=wLo())&init(rv)&Limpl(r,h,v,w,vlo,rv)", 'R=="[{ai:=*;?-c() < ai&ai < c();motion{|^@|};}*](init(rv)&Limpl(r,h,v,w,vlo,rv))"); <(
              "Init":
                propClose,
              "Post":
                propClose,
              "Step":
                chaseAt('R=="[ai:=*;?-c() < ai&ai < c();{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}]((w=(-1)|w=1)&(rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))");
                allR('R=="\forall ai (-c() < ai&ai < c()->[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}]((w=(-1)|w=1)&(rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())))");
                implyR('R=="-c() < ai&ai < c()->[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}]((w=(-1)|w=1)&(rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))");
                boxAnd('R=="[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}]((w=(-1)|w=1)&(rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))");
                andR('R=="[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}](w=(-1)|w=1)&[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}]((rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))"); <(
                  "[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}](w=(-1)|w=1)":
                    GV('R=="[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}](w=(-1)|w=1)");
                    propClose,
                  "[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}]((rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))":
                    diffUnpackEvolDomain('R=="[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}]((rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))");
                    solve('R=="[{r'=-rv,h'=-v,v'=ao-ai&w*v>=w*vlo|w*ao>=alo()+c()}]((rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))");
                    allR('R=="\forall t_ (t_>=0->\forall s_ (0<=s_&s_<=t_->w*((ao-ai)*s_+v)>=w*vlo|w*ao>=alo()+c())->(rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-((ao-ai)*(t_^2/2)+v*t_)+h) < w*ho-hp()))");
                    implyR('R=="t_>=0->\forall s_ (0<=s_&s_<=t_->w*((ao-ai)*s_+v)>=w*vlo|w*ao>=alo()+c())->(rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-((ao-ai)*(t_^2/2)+v*t_)+h) < w*ho-hp())");
                    implyR('R=="\forall s_ (0<=s_&s_<=t_->w*((ao-ai)*s_+v)>=w*vlo|w*ao>=alo()+c())->(rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-((ao-ai)*(t_^2/2)+v*t_)+h) < w*ho-hp())");
                    allL("t_", 'L=="\forall s_ (0<=s_&s_<=t_->w*((ao-ai)*s_+v)>=w*vlo|w*ao>=alo()+c())");
                    simplify('L=="0<=t_&t_<=t_->w*((ao-ai)*t_+v)>=w*vlo|w*ao>=alo()+c()") using "t_>=0";
                    simplify('R=="(rp()>=0&hp()>0&rv>=0&alo()>0&c()>0)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-((ao-ai)*(t_^2/2)+v*t_)+h) < w*ho-hp())") using "rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: c()>0 :: nil";
                    allR('R=="\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-((ao-ai)*(t_^2/2)+v*t_)+h) < w*ho-hp())");
                    allR('R=="\forall ro \forall ho (0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-((ao-ai)*(t_^2/2)+v*t_)+h) < w*ho-hp())");
                    allR('R=="\forall ho (0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-((ao-ai)*(t_^2/2)+v*t_)+h) < w*ho-hp())");
                    andL('L)*;
                    allL("t+t_", 'L=="\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
                    allL("rv*(t+t_)", 'L=="\forall ro \forall ho (0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()&ro=rv*(t+t_)&ho=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=max(0,w*(vlo-v))/alo()&ro=rv*(t+t_)&ho=vlo*(t+t_)-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
                    implyR('R=="0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-((ao-ai)*(t_^2/2)+v*t_)+h) < w*ho-hp()");
                    cut("0<=t+t_&t+t_ < maxI(v,w,vlo)/alo()|t+t_>=maxI(v,w,vlo)/alo()"); <(
                      "Use":
                        orL('L=="0<=t+t_&t+t_ < maxI(v,w,vlo)/alo()|t+t_>=maxI(v,w,vlo)/alo()"); <(
                          "0<=t+t_&t+t_ < maxI(v,w,vlo)/alo()":
                            allL("w*alo()/2*(t+t_)^2+v*(t+t_)", 'L=="\forall ho (0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&ho=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&ho=vlo*(t+t_)-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*h < w*ho-hp())");
                            implyL('L=="0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&w*alo()/2*(t+t_)^2+v*(t+t_)=vlo*(t+t_)-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*h < w*(w*alo()/2*(t+t_)^2+v*(t+t_))-hp()"); <(
                              "0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&w*alo()/2*(t+t_)^2+v*(t+t_)=vlo*(t+t_)-w*max(0,w*(vlo-v))^2/(2*alo())":
                                QE using "w=(-1)|w=1 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: c()>0 :: w*v>=w*vlo|w*ao>=alo()+c() :: t_>=0 :: w*((ao-ai)*t_+v)>=w*vlo|w*ao>=alo()+c() :: w=(-1)|w=1 :: -c() < ai :: ai < c() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: c()>0 :: 0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo()) :: 0<=t+t_&t+t_ < maxI(v,w,vlo)/alo() :: 0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&w*alo()/2*(t+t_)^2+v*(t+t_)=vlo*(t+t_)-w*max(0,w*(vlo-v))^2/(2*alo()) :: nil",
                              "abs(r-rv*(t+t_))>rp()|w*h < w*(w*alo()/2*(t+t_)^2+v*(t+t_))-hp()":
                                prop ; doall(print("QE...") ; QE ; print("...done"))
                            ),
                          "t+t_>=maxI(v,w,vlo)/alo()":
                            allL("vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())", 'L=="\forall ho (0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&ho=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&ho=vlo*(t+t_)-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*h < w*ho-hp())");
                            implyL('L=="0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t+t_)-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-rv*(t+t_))>rp()|w*h < w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))-hp()"); <(
                              "0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t+t_)-w*max(0,w*(vlo-v))^2/(2*alo())":
                                QE using "w=(-1)|w=1 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: c()>0 :: w*v>=w*vlo|w*ao>=alo()+c() :: t_>=0 :: w*((ao-ai)*t_+v)>=w*vlo|w*ao>=alo()+c() :: w=(-1)|w=1 :: -c() < ai :: ai < c() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: c()>0 :: 0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo()) :: t+t_>=maxI(v,w,vlo)/alo() :: 0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=w*alo()/2*(t+t_)^2+v*(t+t_)|t+t_>=max(0,w*(vlo-v))/alo()&rv*(t+t_)=rv*(t+t_)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t+t_)-w*max(0,w*(vlo-v))^2/(2*alo()) :: nil",
                              "abs(r-rv*(t+t_))>rp()|w*h < w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))-hp()":
                                prop ; doall(print("QE...") ; QE ; print("...done"))
                            )
                        ),
                      "Show":
                        expand "maxI";
                        orR('R=="0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo()|t+t_>=max(0,w*(vlo-v))/alo()");
                        orL('L=="0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t|t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())"); <(
                          "0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t":
                            QE using "w=(-1)|w=1 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: c()>0 :: w*v>=w*vlo|w*ao>=alo()+c() :: t_>=0 :: w*((ao-ai)*t_+v)>=w*vlo|w*ao>=alo()+c() :: w=(-1)|w=1 :: -c() < ai :: ai < c() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: c()>0 :: 0<=t&t < max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=w*alo()/2*t^2+((ao-ai)*t_+v)*t :: 0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo() :: nil",
                          "t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo())":
                            QE using "w=(-1)|w=1 :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: c()>0 :: w*v>=w*vlo|w*ao>=alo()+c() :: t_>=0 :: w*((ao-ai)*t_+v)>=w*vlo|w*ao>=alo()+c() :: w=(-1)|w=1 :: -c() < ai :: ai < c() :: rp()>=0 :: hp()>0 :: rv>=0 :: alo()>0 :: c()>0 :: t>=max(0,w*(vlo-((ao-ai)*t_+v)))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-((ao-ai)*t_+v)))^2/(2*alo()) :: 0<=t+t_&t+t_ < max(0,w*(vlo-v))/alo() :: t+t_>=max(0,w*(vlo-v))/alo() :: nil"
                        )
                    )
                )
            )
        )
    ),
  "Post":
    expandAllDefs;
    andL('L)*;
    allL("0", 'L=="\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
    allL("0", 'L=="\forall ro \forall ho (0<=0&0 < max(0,w*(vlo-v))/alo()&ro=rv*0&ho=w*alo()/2*0^2+v*0|0>=max(0,w*(vlo-v))/alo()&ro=rv*0&ho=vlo*0-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
    allL("0", 'L=="\forall ho (0<=0&0 < max(0,w*(vlo-v))/alo()&0=rv*0&ho=w*alo()/2*0^2+v*0|0>=max(0,w*(vlo-v))/alo()&0=rv*0&ho=vlo*0-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-0)>rp()|w*h < w*ho-hp())");
    QE
)
End.

End.