SharedDefinitions.
  Real hp;   /* puck height */
  Real rp;   /* puck radius */
  Real alo;  /* minimal vertical acceleration. Typically g/4 */

  /* velocity bound 1 = lower, -1 = upper */
  Real wUp = -1;
  Real wLo = 1;

  Real maxI(Real v, Real w, Real vlo) = max(0, w * (vlo - v));

  Bool Limpl(Real r, Real h, Real v, Real w, Real vlo, Real rv) <-> 
    \forall t \forall ro \forall ho (
        (0 <= t & t < maxI(v,w,vlo)/alo & ro = rv * t & ho = (w * alo)/2 * t^2 + v * t)
      | (t >= maxI(v,w,vlo)/alo & ro = rv * t & ho = vlo * t - w * maxI(v,w,vlo)^2/(2*alo))
      -> (abs(r - ro) > rp | w * h < w * ho - hp)
    );

  Bool init(Real rv) <-> rp>=0 & hp>0 & rv>=0 & alo>0;

  Bool loopInv(Real r, Real h, Real v, Real w, Real vlo, Real rv) <-> ( (w=wUp | w=wLo) & Limpl(r,h,v,w,vlo,rv) );
  
  HP motion ::= { {r' = -rv, h' = -v, v' = a & w*v>=w*vlo|w*a>=alo } };
End.

Lemma "ACAS X Safe Use Case Lower Bound".

ProgramVariables.

  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */

  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real w;    /* velocity direction */

End.

Problem.

  loopInv(r, h, v, w, vlo, rv) & init(rv) -> abs(r)>rp | abs(h)>hp

End.

Tactic "Proof ACAS X Safe Use Case Lower Bound".
expand "init";
expand "loopInv";
implyR('R=="((w=wUp()|w=wLo())&Limpl(r,h,v,w,vlo,rv))&rp()>=0&hp()>0&rv>=0&alo()>0->abs(r)>rp()|abs(h)>hp()");
andL('L)*;
expand "Limpl";
allL("0", 'L=="\forall t \forall ro \forall ho (0<=t&t < maxI(v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=maxI(v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
allL("0", 'L=="\forall ro \forall ho (0<=0&0 < maxI(v,w,vlo)/alo()&ro=rv*0&ho=w*alo()/2*0^2+v*0|0>=maxI(v,w,vlo)/alo()&ro=rv*0&ho=vlo*0-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
allL("0", 'L=="\forall ho (0<=0&0 < maxI(v,w,vlo)/alo()&0=rv*0&ho=w*alo()/2*0^2+v*0|0>=maxI(v,w,vlo)/alo()&0=rv*0&ho=vlo*0-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-0)>rp()|w*h < w*ho-hp())");
fullSimplify;
implyL('L=="0 < maxI(v,w,vlo)/alo()|0>=maxI(v,w,vlo)/alo()&0=-w*maxI(v,w,vlo)^2/(2*alo())->abs(r)>rp()|w*h < -hp()"); <(
  "0 < maxI(v,w,vlo)/alo()|0>=maxI(v,w,vlo)/alo()&0=-w*maxI(v,w,vlo)^2/(2*alo())":
    QE,
  "abs(r)>rp()|w*h < -hp()":
    QE
)
End.

End.

Lemma "ACAS X Safe Lower Bound".

ProgramVariables.

  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */

  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real w;    /* velocity bound */
  Real a;

End.

Problem.
    (w*v>=w*vlo|w*a>=alo)
  & (w=wUp|w=wLo)
  & Limpl(r,h,v,w,vlo,rv)
  & init(rv)
  ->
  [motion;]((w=wUp|w=wLo) & Limpl(r,h,v,w,vlo,rv))

End.

Tactic "Proof ACAS X Safe Lower Bound".
implyR('R=="(w*v>=w*vlo|w*a>=alo())&(w=wUp()|w=wLo())&Limpl(r,h,v,w,vlo,rv)&init(rv)->[motion{|^@|};]((w=wUp()|w=wLo())&Limpl(r,h,v,w,vlo,rv))");
boxAnd('R=="[motion{|^@|};]((w=wUp()|w=wLo())&Limpl(r,h,v,w,vlo,rv))");
andR('R=="[motion{|^@|};](w=wUp()|w=wLo())&[motion{|^@|};]Limpl(r,h,v,w,vlo,rv)"); <(
  "[motion{|^@|};](w=wUp()|w=wLo())":
    expand "motion";
    GV('R=="[{r'=-rv,h'=-v,v'=a&w*v>=w*vlo|w*a>=alo()}](w=wUp()|w=wLo())");
    propClose,
  "[motion{|^@|};]Limpl(r,h,v,w,vlo,rv)":
    expand "motion";
    solve('R=="[{r'=-rv,h'=-v,v'=a&w*v>=w*vlo|w*a>=alo()}]Limpl(r,h,v,w,vlo,rv)");
    allR('R=="\forall t_ (t_>=0->\forall s_ (0<=s_&s_<=t_->w*(a*s_+v)>=w*vlo|w*a>=alo())->Limpl((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vlo,rv))");
    implyR('R=="t_>=0->\forall s_ (0<=s_&s_<=t_->w*(a*s_+v)>=w*vlo|w*a>=alo())->Limpl((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vlo,rv)");
    implyR('R=="\forall s_ (0<=s_&s_<=t_->w*(a*s_+v)>=w*vlo|w*a>=alo())->Limpl((-rv)*t_+r,-(a*(t_^2/2)+v*t_)+h,a*t_+v,w,vlo,rv)");
    allL("t_", 'L=="\forall s_ (0<=s_&s_<=t_->w*(a*s_+v)>=w*vlo|w*a>=alo())");
    simplify('L=="0<=t_&t_<=t_->w*(a*t_+v)>=w*vlo|w*a>=alo()") using "t_>=0";
    expand "Limpl";
    allR('R=="\forall t \forall ro \forall ho (0<=t&t < maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(a*t_+v)*t|t>=maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h) < w*ho-hp())");
    allR('R=="\forall ro \forall ho (0<=t&t < maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(a*t_+v)*t|t>=maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h) < w*ho-hp())");
    allR('R=="\forall ho (0<=t&t < maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(a*t_+v)*t|t>=maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h) < w*ho-hp())");
    andL('L)*;
    allL("t_+t", 'L=="\forall t \forall ro \forall ho (0<=t&t < maxI(v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=maxI(v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
    allL("rv*(t_+t)", 'L=="\forall ro \forall ho (0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&ro=rv*(t_+t)&ho=w*alo()/2*(t_+t)^2+v*(t_+t)|t_+t>=maxI(v,w,vlo)/alo()&ro=rv*(t_+t)&ho=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
    cut("0<=t+t_&t+t_ < maxI(v,w,vlo)/alo()|t+t_>=maxI(v,w,vlo)/alo()"); <(
      "Use":
        implyR('R=="0<=t&t < maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(a*t_+v)*t|t>=maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h) < w*ho-hp()");
        orL('L=="0<=t+t_&t+t_ < maxI(v,w,vlo)/alo()|t+t_>=maxI(v,w,vlo)/alo()"); <(
          "0<=t+t_&t+t_ < maxI(v,w,vlo)/alo()":
            allL("w*alo()/2*(t+t_)^2+v*(t+t_)", 'L=="\forall ho (0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&ho=w*alo()/2*(t_+t)^2+v*(t_+t)|t_+t>=maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&ho=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t_+t))>rp()|w*h < w*ho-hp())");
            implyL('L=="0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t_+t)^2+v*(t_+t)|t_+t>=maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&w*alo()/2*(t+t_)^2+v*(t+t_)=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t_+t))>rp()|w*h < w*(w*alo()/2*(t+t_)^2+v*(t+t_))-hp()"); <(
              "0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t_+t)^2+v*(t_+t)|t_+t>=maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&w*alo()/2*(t+t_)^2+v*(t+t_)=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo())":
                orR('R=="0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t_+t)^2+v*(t_+t)|t_+t>=maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&w*alo()/2*(t+t_)^2+v*(t+t_)=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo())");
                QE using "t_>=0 :: w*(a*t_+v)>=w*vlo|w*a>=alo() :: w*v>=w*vlo|w*a>=alo() :: w=wUp()|w=wLo() :: 0<=t+t_&t+t_ < maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(a*t_+v)*t|t>=maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: 0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&w*alo()/2*(t+t_)^2+v*(t+t_)=w*alo()/2*(t_+t)^2+v*(t_+t) :: nil",
              "abs(r-rv*(t_+t))>rp()|w*h < w*(w*alo()/2*(t+t_)^2+v*(t+t_))-hp()":
                prop ; doall(print("QE...") ; QE ; print("...done"))
            ),
          "t+t_>=maxI(v,w,vlo)/alo()":
            orR('R=="abs((-rv)*t_+r-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h) < w*ho-hp()");
            allL("vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())", 'L=="\forall ho (0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&ho=w*alo()/2*(t_+t)^2+v*(t_+t)|t_+t>=maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&ho=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t_+t))>rp()|w*h < w*ho-hp())");
            implyL('L=="0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=w*alo()/2*(t_+t)^2+v*(t_+t)|t_+t>=maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo())->abs(r-rv*(t_+t))>rp()|w*h < w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))-hp()"); <(
              "0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=w*alo()/2*(t_+t)^2+v*(t_+t)|t_+t>=maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo())":
                orR('R=="0<=t_+t&t_+t < maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=w*alo()/2*(t_+t)^2+v*(t_+t)|t_+t>=maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo())");
                QE using "t_>=0 :: t+t_>=maxI(v,w,vlo)/alo() :: 0<=t&t < maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(a*t_+v)*t|t>=maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: t_+t>=maxI(v,w,vlo)/alo()&rv*(t_+t)=rv*(t_+t)&vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo())=vlo*(t_+t)-w*maxI(v,w,vlo)^2/(2*alo()) :: nil",
              "abs(r-rv*(t_+t))>rp()|w*h < w*(vlo*(t+t_)-w*maxI(v,w,vlo)^2/(2*alo()))-hp()":
                prop ; doall(print("QE...") ; QE ; print("...done"))
            )
        ),
      "Show":
        implyR('R=="0<=t&t < maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(a*t_+v)*t|t>=maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo())->abs((-rv)*t_+r-ro)>rp()|w*(-(a*(t_^2/2)+v*t_)+h) < w*ho-hp()");
        QE using "t_>=0 :: w=wUp()|w=wLo() :: init(rv) :: 0<=t&t < maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=w*alo()/2*t^2+(a*t_+v)*t|t>=maxI(a*t_+v,w,vlo)/alo()&ro=rv*t&ho=vlo*t-w*maxI(a*t_+v,w,vlo)^2/(2*alo()) :: 0<=t+t_&t+t_ < maxI(v,w,vlo)/alo()|t+t_>=maxI(v,w,vlo)/alo() :: nil"
    )
)
End.

End.

Theorem "ACAS X Theorem 1: Correctness of Implicit Safe Regions".

ProgramVariables.

  /* horizontal */
  Real r;    /* relative distance in ft; xi - xo */
             /* x = r */
  Real rv;   /* relative speed -(vi - vo) */

  /* vertical */
  Real h;    /* relative altitude in ft */
             /* if negative: the intruder is lower than the ownship */
             /* h := hi - ho */
             /* z = h */
  Real v;    /* vertical velocity of ownship */
  Real vlo;  /* target minimum velocity */
  Real w;    /* velocity direction */
  Real a;

End.

Problem.
    init(rv)
  & ( (w=wUp | w=wLo) & Limpl(r,h,v,w,vlo,rv) )
  ->
  [{ {
     { ?true;
       ++
       {{ w:=wUp; ++ w:=wLo; }
        vlo := *;
        ?Limpl(r,h,v,w,vlo,rv);
       }
     }
     a := *;
     }
     motion;
   }*@invariant(loopInv(r,h,v,w,vlo,rv))
  ] ( (abs(r) > rp | abs(h) > hp) & Limpl(r,h,v,w,vlo,rv) )
End.

Tactic "Proof ACAS X Theorem 1: Correctness of Implicit Safe Regions".
implyR('R=="init(rv)&(w=wUp()|w=wLo())&Limpl(r,h,v,w,vlo,rv)->[{{{?true;++{w:=wUp();++w:=wLo();}vlo:=*;?Limpl(r,h,v,w,vlo,rv);}a:=*;}motion{|^@|};}*]((abs(r)>rp()|abs(h)>hp())&Limpl(r,h,v,w,vlo,rv))");
andL('L)*;
loop("loopInv(r,h,v,w,vlo,rv)", 'R=="[{{{?true;++{w:=wUp();++w:=wLo();}vlo:=*;?Limpl(r,h,v,w,vlo,rv);}a:=*;}motion{|^@|};}*]((abs(r)>rp()|abs(h)>hp())&Limpl(r,h,v,w,vlo,rv))"); <(
  "Init":
    propClose,
  "Post":
    andR('R=="(abs(r)>rp()|abs(h)>hp())&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())"); <(
      "abs(r)>rp()|abs(h)>hp()":
        useLemma("ACAS X Safe Use Case Lower Bound", "prop"),
      "\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())":
        propClose
    ),
  "Step":
    composeb('R=="[{{?true;++{w:=(-1);++w:=1;}vlo:=*;?\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp());}a:=*;}{r'=-rv,h'=-v,v'=a&w*v>=w*vlo|w*a>=alo()}]((w=(-1)|w=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))");
    MR("loopInv(r,h,v,w,vlo,rv)&init(rv)", 'R=="[{?true;++{w:=(-1);++w:=1;}vlo:=*;?\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp());}a:=*;][{r'=-rv,h'=-v,v'=a&w*v>=w*vlo|w*a>=alo()}]((w=(-1)|w=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))"); <(
      "Use Q->P":
        chaseAt('R=="[{?true;++{w:=(-1);++w:=1;}vlo:=*;?\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp());}a:=*;](loopInv(r,h,v,w,vlo,rv)&init(rv))");
        andL('L=="(w=(-1)|w=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp())");
        expandAllDefs;
        simplify('R=="(true->\forall a (((w=(-1)|w=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))&rp()>=0&hp()>0&rv>=0&alo()>0))&\forall vlo (\forall t \forall ro \forall ho (0<=t&t < max(0,(-1)*(vlo-v))/alo()&ro=rv*t&ho=(-1)*alo()/2*t^2+v*t|t>=max(0,(-1)*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-(-1)*max(0,(-1)*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|(-1)*h < (-1)*ho-hp())->\forall a ((((-1)=(-1)|(-1)=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,(-1)*(vlo-v))/alo()&ro=rv*t&ho=(-1)*alo()/2*t^2+v*t|t>=max(0,(-1)*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-(-1)*max(0,(-1)*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|(-1)*h < (-1)*ho-hp()))&rp()>=0&hp()>0&rv>=0&alo()>0))&\forall vlo (\forall t \forall ro \forall ho (0<=t&t < max(0,1*(vlo-v))/alo()&ro=rv*t&ho=1*alo()/2*t^2+v*t|t>=max(0,1*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-1*max(0,1*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|1*h < 1*ho-hp())->\forall a (((1=(-1)|1=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,1*(vlo-v))/alo()&ro=rv*t&ho=1*alo()/2*t^2+v*t|t>=max(0,1*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-1*max(0,1*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|1*h < 1*ho-hp()))&rp()>=0&hp()>0&rv>=0&alo()>0))");
        closeT,
      "Show [a]Q":
        diffUnpackEvolDomain('R=="[{r'=-rv,h'=-v,v'=a&w*v>=w*vlo|w*a>=alo()}]((w=(-1)|w=1)&\forall t \forall ro \forall ho (0<=t&t < max(0,w*(vlo-v))/alo()&ro=rv*t&ho=w*alo()/2*t^2+v*t|t>=max(0,w*(vlo-v))/alo()&ro=rv*t&ho=vlo*t-w*max(0,w*(vlo-v))^2/(2*alo())->abs(r-ro)>rp()|w*h < w*ho-hp()))");
        expandAllDefs;
        useLemma("ACAS X New/Safe Lower Bound", "prop")
    )
)
End.

End.

Lemma "Lemma 1: Equivalence between implicit and explicit region formulation".

Definitions.
  B case1()   <-> ( -rp() <= r & r < -rp() - rv * min(0, w * v)/a() ).
  B bounds1() <-> ( w * rv^2 * h < a()/2 * (r + rp())^2 + w * rv * v * (r+rp()) - rv^2 * hp() ).
  B case2()   <-> ( -rp - rv * min(0, w * v)/a() <= r & r <= rp() - rv * min(0, w * v)/a() ).
  B bounds2() <-> ( w * h < (-(min(0, w * v)^2))/(2*a()) - hp() ).
  B case3()   <-> ( rp() - rv * min(0, w * v)/a() < r & r <= rp() + rv * max(0, w * (vlo-v))/a() ).
  B bounds3() <-> ( w * rv^2 * h < a()/2 * (r - rp())^2 + w * rv * v * (r - rp()) - rv^2 * hp() ).
  B case4()   <-> ( rp() + rv * max(0, w * (vlo - v))/a() < r ).
  B bounds4() <-> ( rv = 0 | w * rv * h  <  w * vlo * (r - rp()) - rv * max(0, w * (vlo - v))^2/(2*a()) - rv * hp() ).
  B case5()   <-> ( -rp() <= r & r < -rp() + rv * max(0, w * (vlo - v))/a() ).
  B bounds5() <-> ( w * rv^2 * h < a()/2 * (r + rp)^2 + w * rv * v * (r + rp()) - rv^2 * hp() ).
  B case6()   <-> ( -rp() + rv * max(0, w * (vlo - v))/a() <= r ).
  B bounds6() <-> ( (rv = 0 & r > rp)
                    | w * rv * h <  w * vlo * (r + rp()) - rv * max(0, w * (vlo - v))^2/(2*a()) - rv * hp() ).

  B Lexpl() <-> (
    (w * vlo >= 0 ->
        (case1() -> bounds1())
      & (case2() -> bounds2())
      & (case3() -> bounds3())
      & (case4() -> bounds4())
    )
    &
    (w * vlo < 0 ->
        (case5() -> bounds5())
      & (case6() -> bounds6())
    )
  ).
End.

ProgramVariables.
  /** Variables **/
   /* horizontal */
  R r.    /* relative distance in ft; xi - xo */
          /* x = r */
  R rv.   /* relative speed -(vi - vo) */
   /* vertical */
  R h.    /* relative altitude in ft */
          /* if negative: the intruder is lower than the ownship */
          /* h := hi - ho */
          /* z = h */
  R v.  /* vertical velocity of ownship */
  R vlo.  /* target minimum velocity */
  R w.    /* velocity bound 1 = lower, -1 = upper */
  R ao.   /* vertical acceleration of ownship */
End.

Problem.
  init() & (w=wUp() | w=wLo()) -> ( Lexpl() <-> C(w,vlo,v,r,rv,h) )
End.

Tactic "Proof Lemma 1: Equivalence between implicit and explicit region formulation".
  implyR('R) ; equivR('R) ; <(
    print({`->`}) ;
      cut({`w*vlo>=0 | w*vlo<0`}) ; <(
        (/*cutUse,*/ orL('L=={`w*vlo>=0 | w*vlo<0`}) ; <(
          print({`w*vlo>=0`}) ;
          andL('L=={`(w*vlo>=0->(-rp<=r&r < -rp-rv*min((0,w*v))/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp-rv*min((0,w*v))/a<=r&r<=rp-rv*min((0,w*v))/a->w*h < (-min((0,w*v))^2)/(2*a)-hp)&(rp-rv*min((0,w*v))/a < r&r<=rp+rv*max((0,w*(vlo-v)))/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp)&(rp+rv*max((0,w*(vlo-v)))/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*max((0,w*(vlo-v)))^2/(2*a)-rv*hp))&(w*vlo < 0->(-rp<=r&r < -rp+rv*max((0,w*(vlo-v)))/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp+rv*max((0,w*(vlo-v)))/a<=r->rv=0&r>rp|w*rv*h < w*vlo*(r+rp)-rv*max((0,w*(vlo-v)))^2/(2*a)-rv*hp))`}) ;
          hideL('L=={`w*vlo < 0->(-rp<=r&r < -rp+rv*max((0,w*(vlo-v)))/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp+rv*max((0,w*(vlo-v)))/a<=r->rv=0&r>rp|w*rv*h < w*vlo*(r+rp)-rv*max((0,w*(vlo-v)))^2/(2*a)-rv*hp)`}) ;
          implyL('L=={`w*vlo>=0->(-rp<=r&r < -rp-rv*min((0,w*v))/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp-rv*min((0,w*v))/a<=r&r<=rp-rv*min((0,w*v))/a->w*h < (-min((0,w*v))^2)/(2*a)-hp)&(rp-rv*min((0,w*v))/a < r&r<=rp+rv*max((0,w*(vlo-v)))/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp)&(rp+rv*max((0,w*(vlo-v)))/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*max((0,w*(vlo-v)))^2/(2*a)-rv*hp)`}) ; <(
            hideR('R=={`\forall t \forall ro \forall ho (0<=t&t < max((0,w*(vlo-v)))/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=max((0,w*(vlo-v)))/a&ro=rv*t&ho=vlo*t-w*max((0,w*(vlo-v)))^2/(2*a)->abs(r-ro)>rp|w*h < w*ho-hp)`}) ; id
            ,
            (allR('R)*) ;
              cut({`((r< -rp) | (-rp<=r & r < -rp-rv*min((0,w*v))/a) | (-rp-rv*min((0,w*v))/a<=r & r<=rp-rv*min((0,w*v))/a) | (rp-rv*min((0,w*v))/a < r & r<=rp+rv*max((0,w*(vlo-v)))/a) | (rp+rv*max((0,w*(vlo-v)))/a < r))`}) ;
              <(
                (/*cutUse,*/ abbrv({`max((0,w*(vlo-v)))`}, {`maxA`}) ;
                  abbrv({`min((0,w*v))`}, {`minA`}) ;
                  minmax('L=={`max(0,w*(vlo-v))`}) ;
                  minmax('L=={`min(0,w*v)`}) ;
                  absExp('R=={`abs(r-ro)`}) ;
                  orL('L=={`r < -rp|-rp<=r&r < -rp-rv*minA/a|-rp-rv*minA/a<=r&r<=rp-rv*minA/a|rp-rv*minA/a < r&r<=rp+rv*maxA/a|rp+rv*maxA/a < r`}) ; <(
                    print({`r<-rp`}) ; hideL('L=={`((-rp<=r&r < -rp-rv*minA/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp-rv*minA/a<=r&r<=rp-rv*minA/a->w*h < (-minA^2)/(2*a)-hp)&(rp-rv*minA/a < r&r<=rp+rv*maxA/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp)&(rp+rv*maxA/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp))`}) ; QE,
                    andL('L=={`(-rp<=r&r < -rp-rv*minA/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp-rv*minA/a<=r&r<=rp-rv*minA/a->w*h < (-minA^2)/(2*a)-hp)&(rp-rv*minA/a < r&r<=rp+rv*maxA/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp)&(rp+rv*maxA/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp)`}) ;
                      orL('L=={`-rp<=r&r < -rp-rv*minA/a|-rp-rv*minA/a<=r&r<=rp-rv*minA/a|rp-rv*minA/a < r&r<=rp+rv*maxA/a|rp+rv*maxA/a < r`}) ; <(
                      print({`-> 1:(-rp<=r & r < -rp-rv*minA/a)`}) ;
                        hideL('L=={`(-rp-rv*minA/a<=r&r<=rp-rv*minA/a->w*h < (-minA^2)/(2*a)-hp)&(rp-rv*minA/a < r&r<=rp+rv*maxA/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp)&(rp+rv*maxA/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp)`}) ;
                        implyL('L=={`-rp<=r&r < -rp-rv*minA/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp`}) ; <(
                          hideR('R=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)->abs_0>rp|w*h < w*ho-hp`}) ; id
                          ,
                          implyR('R) ; orR('R) ;
                            cut({`t <= (r+rp)/rv | t > (r+rp)/rv`}) ; <(
                              (/*cutUse,*/ orL('L=={`t<=(r+rp)/rv|t>(r+rp)/rv`}) ; <(
                                print({`t <= (r+rp)/rv`}) ;
                                hideR('R=={`abs_0>rp`}) ;
                                  orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ;
                                  doall(QE) ; done
                                ,
                                print({`t > (r+rp)/rv`}) ;
                                hideR('R=={`w*h < w*ho-hp`})  & orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ;
                                  doall(QE) ; done
                                )
                              )
                              ,
                              (/*cutShow,*/ QE ; done)
                            )
                          )
                        ,
                        hideL('L=={`(-rp<=r&r < -rp-rv*minA/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)`}) ;
                          andL('L=={`(-rp-rv*minA/a<=r&r<=rp-rv*minA/a->w*h < (-minA^2)/(2*a)-hp)&(rp-rv*minA/a < r&r<=rp+rv*maxA/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp)&(rp+rv*maxA/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp)`}) ;
                          orL('L=={`-rp-rv*minA/a<=r&r<=rp-rv*minA/a|rp-rv*minA/a < r&r<=rp+rv*maxA/a|rp+rv*maxA/a < r`}) ; <(
                          print({`-> 2: -rp-rv*minA/a<=r&r<=rp-rv*minA/a`}) ;
                            hideL('L=={`(rp-rv*minA/a < r&r<=rp+rv*maxA/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp)&(rp+rv*maxA/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp)`}) ;
                            implyL('L=={`(-rp-rv*minA/a<=r&r<=rp-rv*minA/a->w*h < (-minA^2)/(2*a)-hp)`}) ; <(
                              hideR('R=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)->abs_0>rp|w*h < w*ho-hp`}) ; id ; done
                              ,
                              implyR('R) & orR('R) & hideR('R=={`abs_0>rp`}) ; QE ; done
                              )
                            ,
                            hideL('L=={`-rp-rv*minA/a<=r&r<=rp-rv*minA/a->w*h < (-minA^2)/(2*a)-hp`}) ;
                              andL('L=={`(rp-rv*minA/a < r&r<=rp+rv*maxA/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp)&(rp+rv*maxA/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp)`}) ;
                              orL('L=={`rp-rv*minA/a < r&r<=rp+rv*maxA/a|rp+rv*maxA/a < r`}) ; <(
                              print({`-> 3: rv*minA/a<=r&r<=rp-rv*minA/`}) ;
                                hideL('L=={`rp+rv*maxA/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp`}) ;
                                implyL('L=={`rp-rv*minA/a < r&r<=rp+rv*maxA/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp`}) ; <(
                                  id ; done,
                                  implyR('R) ; cut({`t<= (r-rp)/rv | t > (r-rp)/rv`}) ; <(
                                    (/*cutUse,*/ orL('L=={`t<=(r-rp)/rv|t>(r-rp)/rv`}) ; <(
                                      orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ; doall(QE) ; done
                                      ,
                                      orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ; doall(QE) ; done
                                    ))
                                    ,
                                    (/*cutShow,*/ QE ; done)
                                  )
                                )
                                ,
                                print({`-> 4`}) ;
                                  implyL('L=={`rp+rv*maxA/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp`}) ; <(
                                    id ; done,
                                    implyR('R) ; cut({`t<= (r-rp)/rv | t > (r-rp)/rv`}) ; <(
                                      (/*cutUse,*/ orL('L=={`t<=(r-rp)/rv|t>(r-rp)/rv`}) ; <(
                                        orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ; doall(QE) ; done
                                        ,
                                        orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ; doall(QE) ; done
                                      ))
                                      ,
                                      (/*cutShow,*/ QE ; done)
                                    )
                                  )
                                )
                            )
                        )
                )
              )
              ,
              (/*cutShow,*/ QE ; done)
              )
          )
          ,
          print({`w*vlo<0`}) ;
          (andL('L)*) ;
          (allR('R)*) ;
          hideL('L=={`w*vlo>=0->(-rp<=r&r < -rp-rv*min((0,w*v))/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp-rv*min((0,w*v))/a<=r&r<=rp-rv*min((0,w*v))/a->w*h < (-min((0,w*v))^2)/(2*a)-hp)&(rp-rv*min((0,w*v))/a < r&r<=rp+rv*max((0,w*(vlo-v)))/a->w*rv^2*h < a/2*(r-rp)^2+w*rv*v*(r-rp)-rv^2*hp)&(rp+rv*max((0,w*(vlo-v)))/a < r->rv=0|w*rv*h < w*vlo*(r-rp)-rv*max((0,w*(vlo-v)))^2/(2*a)-rv*hp)`}) ;
          implyL('L=={`w*vlo < 0->(-rp<=r&r < -rp+rv*max((0,w*(vlo-v)))/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp+rv*max((0,w*(vlo-v)))/a<=r->rv=0&r>rp|w*rv*h < w*vlo*(r+rp)-rv*max((0,w*(vlo-v)))^2/(2*a)-rv*hp)`}) ; <(
            id ; done
            ,
            cut({`(-rp>r)|(-rp<=r&r < -rp+rv*max((0,w*(vlo-v)))/a)|(-rp+rv*max((0,w*(vlo-v)))/a<=r)`}) ; <(
              (/*cutUse,*/ orL('L=={`(-rp>r)|(-rp<=r&r < -rp+rv*max((0,w*(vlo-v)))/a)|(-rp+rv*max((0,w*(vlo-v)))/a<=r)`}) ; <(
                hideL('L=={`(-rp<=r&r < -rp+rv*max((0,w*(vlo-v)))/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp+rv*max((0,w*(vlo-v)))/a<=r->rv=0&r>rp|w*rv*h < w*vlo*(r+rp)-rv*max((0,w*(vlo-v)))^2/(2*a)-rv*hp)`}) ; QE ; done
                ,
                implyR('R)  &
                  abbrv({`max((0,w*(vlo-v)))`}, {`maxA`}) ;
                  minmax('L=={`max(0,w*(vlo-v))`}) ;
                  absExp('R=={`abs(r-ro)`}) ;
                  andL('L=={`(-rp<=r&r < -rp+rv*maxA/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)&(-rp+rv*maxA/a<=r->rv=0&r>rp|w*rv*h < w*vlo*(r+rp)-rv*maxA^2/(2*a)-rv*hp)`}) ;
                  orL('L=={`-rp<=r&r < -rp+rv*maxA/a|-rp+rv*maxA/a<=r`}) ; <(
                    print({`-> 5`}) ;
                    implyL('L=={`(-rp<=r&r < -rp+rv*maxA/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp)`}) ; <(
                      id ; done
                      ,
                      hideL('L=={`-rp+rv*maxA/a<=r->rv=0&r>rp|w*rv*h < w*vlo*(r+rp)-rv*maxA^2/(2*a)-rv*hp`}) ;
                        orR('R) ;
                        orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ; doall(QE) ; done
                    )
                    ,
                    print({`-> 6`}) ;
                    hideL('L=={`-rp<=r&r < -rp+rv*maxA/a->w*rv^2*h < a/2*(r+rp)^2+w*rv*v*(r+rp)-rv^2*hp`}) ;
                    implyL('L=={`-rp+rv*maxA/a<=r->rv=0&r>rp|w*rv*h < w*vlo*(r+rp)-rv*maxA^2/(2*a)-rv*hp`}) ; <(
                      id ; done
                      ,
                      orL('L=={`rv=0&r>rp|w*rv*h < w*vlo*(r+rp)-rv*maxA^2/(2*a)-rv*hp`}) ; <(
                        print({`zerocase`}) ;
                        orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ; doall(QE) ; done
                        ,
                        orR('R) & cut({`t<= (r+rp)/rv | t > (r+rp)/rv`}) ; <(
                          (/*cutUse,*/ orL('L=={`t<=(r+rp)/rv|t>(r+rp)/rv`}) ; <(
                            print({`t<= (r+rp)/rv`}) ; hideR('R=={`abs_0>rp`}) ;
                              orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ;
                              doall(QE) ; done
                            ,
                            print({`t > (r+rp)/rv`}) ; hideR('R=={`w*h < w*ho-hp`}) ;
                              orL('L=={`0<=t&t < maxA/a&ro=rv*t&ho=w*a/2*t^2+v*t|t>=maxA/a&ro=rv*t&ho=vlo*t-w*maxA^2/(2*a)`}) ;
                              doall(QE) ; done
                            )
                          ),
                          (/*cutShow,*/ QE ; done)
                        )
                      )
                    )
                  )
                )
              ),
              (/*cutShow,*/ QE ; done)
            )
          )
        )
      ),
      (/*cutShow,*/ cohideR('R=={`w*vlo>=0 | w*vlo<0`}) ; QE ; done)
    )
    ,
    print({`<-`}) ;
    abbrv({`max((0,w*(vlo-v)))`}, {`maxA`}) ;
    minmax('L=={`max(0,w*(vlo-v))`}) ;
    andR('R) ; <(
      implyR('R) ; andR('R) ; <(
        print({`<- 1`}) ; minmax('R=={`min(0,w*v)`}) ; implyR('R) ; (andL('L)*) ; cut({`rv=0|rv>0`}) ; <(
          (/*cutUse,*/ orL('L=={`rv=0|rv>0`}) ; <(
            print({`<- 1:rv=0`}) ;
              allL(/*t*/ {`0`}, 'L) ;
              allL(/*ro*/ {`rv*0`}, 'L) ;
              allL(/*ho*/ {`w*a/2*0^2+v*0`}, 'L) ;
              implyL('L=={`0<=0&0 < maxA/a&rv*0=rv*0&w*a/2*0^2+v*0=w*a/2*0^2+v*0|0>=maxA/a&rv*0=rv*0&w*a/2*0^2+v*0=vlo*0-w*maxA^2/(2*a)->abs(r-rv*0)>rp|w*h < w*(w*a/2*0^2+v*0)-hp`}) ; <(
                QE ; done
                ,
                absExp('L=={`abs(r-rv*0)`}) ; QE ; done
                )
            ,
            print({`<- 1:rv>0`}) ;
              allL(/*t*/ {`(r+rp)/rv`}, 'L) ;
              allL(/*ro*/ {`rv*((r+rp)/rv)`}, 'L) ;
              allL(/*ho*/ {`w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv)`}, 'L) ;
              implyL('L=={`0<=(r+rp)/rv&(r+rp)/rv < maxA/a&rv*((r+rp)/rv)=rv*((r+rp)/rv)&w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv)=w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv)|(r+rp)/rv>=maxA/a&rv*((r+rp)/rv)=rv*((r+rp)/rv)&w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv)=vlo*((r+rp)/rv)-w*maxA^2/(2*a)->abs(r-rv*((r+rp)/rv))>rp|w*h < w*(w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv))-hp`}) ; <(
                QE ; done
                ,
                absExp('L=={`abs(r-rv*((r+rp)/rv))`}) ; QE ; done
                )
          )),
          (/*cutShow,*/ QE ; done)
        )
        ,
        andR('R) ; <(
          print({`<- 2`}) ;
          abbrv({`min((0,w*v))`}, {`minA`}) ;
          minmax('L=={`min((0,w*v))`}) ;
          implyR('R) ; (andL('L)*) ; cut({`rv=0|rv>0`}) ; <(
            (/*cutUse,*/ orL('L=={`rv=0|rv>0`}) ; <(
              print({`<- 2:rv=0`}) ;
                allL(/*t*/ {`-minA/a`}, 'L) ;
                allL(/*ro*/ {`rv*(-minA/a)`}, 'L) ;
                allL(/*ho*/ {`w*a/2*(-minA/a)^2+v*(-minA/a)`}, 'L) ;
                implyL('L=={`0<=-minA/a&-minA/a < maxA/a&rv*(-minA/a)=rv*(-minA/a)&w*a/2*(-minA/a)^2+v*(-minA/a)=w*a/2*(-minA/a)^2+v*(-minA/a)|-minA/a>=maxA/a&rv*(-minA/a)=rv*(-minA/a)&w*a/2*(-minA/a)^2+v*(-minA/a)=vlo*(-minA/a)-w*maxA^2/(2*a)->abs(r-rv*(-minA/a))>rp|w*h < w*(w*a/2*(-minA/a)^2+v*(-minA/a))-hp`}) ; <(
                  QE ; done
                  ,
                  abbrv({`r-rv*(-minA/a)`}, {`absA`}) ;
                    absExp('L=={`abs(absA)`}) ; QE ; done
                  )
              ,
              print({`<- 2:rv>0`}) ;
                allL(/*t*/ {`-minA/a`}, 'L) ;
                allL(/*ro*/ {`rv*(-minA/a)`}, 'L) ;
                allL(/*ho*/ {`w*a/2*(-minA/a)^2+v*(-minA/a)`}, 'L) ;
                implyL('L=={`0<=-minA/a&-minA/a < maxA/a&rv*(-minA/a)=rv*(-minA/a)&w*a/2*(-minA/a)^2+v*(-minA/a)=w*a/2*(-minA/a)^2+v*(-minA/a)|-minA/a>=maxA/a&rv*(-minA/a)=rv*(-minA/a)&w*a/2*(-minA/a)^2+v*(-minA/a)=vlo*(-minA/a)-w*maxA^2/(2*a)->abs(r-rv*(-minA/a))>rp|w*h < w*(w*a/2*(-minA/a)^2+v*(-minA/a))-hp`}) ; <(
                  QE ; done
                  ,
                  abbrv({`r-rv*(-minA/a)`}, {`absA`}) ;
                    absExp('L=={`abs(absA)`}) ; QE ; done
                  )
              )
            ),
            (/*cutShow,*/ QE ; done)
          )
          ,
          andR('R) ; <(
            print({`<- 3`}) ; minmax('R=={`min(0,w*v)`}) ; implyR('R)  ; (andL('L)*) ;
            cut({`rv=0|rv>0`}) ; <(
              (/*cutUse,*/ orL('L=={`rv=0|rv>0`}) ; <(
                  print({`<- 3:rv=0`}) ;
                    allL(/*t*/ {`0`}, 'L) ;
                    allL(/*ro*/ {`rv*0`}, 'L) ;
                    allL(/*ho*/ {`w*a/2*0^2+v*0`}, 'L) ;
                    implyL('L=={`0<=0&0 < maxA/a&rv*0=rv*0&w*a/2*0^2+v*0=w*a/2*0^2+v*0|0>=maxA/a&rv*0=rv*0&w*a/2*0^2+v*0=vlo*0-w*maxA^2/(2*a)->abs(r-rv*0)>rp|w*h < w*(w*a/2*0^2+v*0)-hp`}) ; <(
                      QE ; done
                      ,
                      absExp('L=={`abs(r-rv*0)`}) ; QE ; done
                      )
                  ,
                  print({`<- 3:rv>0`}) &
                    allL(/*t*/ {`(r-rp)/rv`}, 'L) ;
                    allL(/*ro*/ {`rv*((r-rp)/rv)`}, 'L) ;
                    allL(/*ho*/ {`w*a/2*((r-rp)/rv)^2+v*((r-rp)/rv)`}, 'L) ;
                    implyL('L=={`0<=(r-rp)/rv&(r-rp)/rv < maxA/a&rv*((r-rp)/rv)=rv*((r-rp)/rv)&w*a/2*((r-rp)/rv)^2+v*((r-rp)/rv)=w*a/2*((r-rp)/rv)^2+v*((r-rp)/rv)|(r-rp)/rv>=maxA/a&rv*((r-rp)/rv)=rv*((r-rp)/rv)&w*a/2*((r-rp)/rv)^2+v*((r-rp)/rv)=vlo*((r-rp)/rv)-w*maxA^2/(2*a)->abs(r-rv*((r-rp)/rv))>rp|w*h < w*(w*a/2*((r-rp)/rv)^2+v*((r-rp)/rv))-hp`}) ; <(
                      QE ; done
                      ,
                      absExp('L=={`abs(r-rv*((r-rp)/rv))`}) ; QE ; done
                      )
              )),
              (/*cutShow,*/ QE ; done)
            )
            ,
            print({`<- 4`}) ; (andL('L)*) ; implyR('R) ;
            cut({`rv=0|rv>0`}) ; <(
              (/*cutUse,*/ orL('L=={`rv=0|rv>0`}) ; <(
                print({`<- 4:rv=0`}) ;
                  orR('R) ; hideR('R=={`w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp`}) ; QE ; done
                ,
                print({`<- 4:rv>0`}) ;
                  orR('R) ; hideR('R=={`rv=0`}) ;
                  allL(/*t*/ {`(r-rp)/rv`}, 'L) ;
                  allL(/*ro*/ {`rv*((r-rp)/rv)`}, 'L) ;
                  allL(/*ho*/ {`vlo*((r-rp)/rv)-w*maxA^2/(2*a)`}, 'L) ;
                  implyL('L=={`0<=(r-rp)/rv&(r-rp)/rv < maxA/a&rv*((r-rp)/rv)=rv*((r-rp)/rv)&vlo*((r-rp)/rv)-w*maxA^2/(2*a)=w*a/2*((r-rp)/rv)^2+v*((r-rp)/rv)|(r-rp)/rv>=maxA/a&rv*((r-rp)/rv)=rv*((r-rp)/rv)&vlo*((r-rp)/rv)-w*maxA^2/(2*a)=vlo*((r-rp)/rv)-w*maxA^2/(2*a)->abs(r-rv*((r-rp)/rv))>rp|w*h < w*(vlo*((r-rp)/rv)-w*maxA^2/(2*a))-hp`}) ; <(
                    hideR('R=={`w*rv*h < w*vlo*(r-rp)-rv*maxA^2/(2*a)-rv*hp`}) ; orR('R) ;
                      hideR('R=={`0<=(r-rp)/rv&(r-rp)/rv < maxA/a&rv*((r-rp)/rv)=rv*((r-rp)/rv)&vlo*((r-rp)/rv)-w*maxA^2/(2*a)=w*a/2*((r-rp)/rv)^2+v*((r-rp)/rv)`}) ; QE ; done
                    ,
                    absExp('L=={`abs(r-rv*((r-rp)/rv))`}) ; QE ; done
                    )
                )
              ),
              (/*cutShow,*/ QE ; done)
            )
          )
        )
      )
      ,
      implyR('R) ; andR('R) ; <(
        print({`<- 5`})  ; (andL('L)*) ;
        cut({`rv=0|rv>0`}) ; <(
          (/*cutUse,*/ orL('L=={`rv=0|rv>0`}) ; <(
            print({`<- 5:rv=0`}) ;
              allL(/*t*/ {`0`}, 'L) ;
              allL(/*ro*/ {`rv*0`}, 'L) ;
              allL(/*ho*/ {`w*a/2*0^2+v*0`}, 'L) ;
              implyL('L=={`0<=0&0 < maxA/a&rv*0=rv*0&w*a/2*0^2+v*0=w*a/2*0^2+v*0|0>=maxA/a&rv*0=rv*0&w*a/2*0^2+v*0=vlo*0-w*maxA^2/(2*a)->abs(r-rv*0)>rp|w*h < w*(w*a/2*0^2+v*0)-hp`}) ; <(
                QE ; done
                ,
                absExp('L=={`abs(r-rv*0)`}) ; QE ; done
                )
            ,
            print({`<- 5:rv>0`}) &
              allL(/*t*/ {`(r+rp)/rv`}, 'L) ;
              allL(/*ro*/ {`rv*((r+rp)/rv)`}, 'L) ;
              allL(/*ho*/ {`w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv)`}, 'L) ;
              implyL('L=={`0<=(r+rp)/rv&(r+rp)/rv < maxA/a&rv*((r+rp)/rv)=rv*((r+rp)/rv)&w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv)=w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv)|(r+rp)/rv>=maxA/a&rv*((r+rp)/rv)=rv*((r+rp)/rv)&w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv)=vlo*((r+rp)/rv)-w*maxA^2/(2*a)->abs(r-rv*((r+rp)/rv))>rp|w*h < w*(w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv))-hp`}) ; <(
                QE ; done
                ,
                absExp('L=={`abs(r-rv*((r+rp)/rv))`}) ; QE ; done
                )
          )),
          (/*cutShow,*/ QE ; done)
        )
        ,
        print({`<- 6`}) ; (andL('L)*) ; implyR('R) ;
        cut({`rv=0|rv>0`}) ; <(
          (/*cutUse,*/ orL('L=={`rv=0|rv>0`}) ; <(
            print({`<- 6:rv=0`}) ; orR('R)  ;
            cut({`r>rp|r<=rp`}) ; <(
              (/*cutUse,*/ orL('L=={`r>rp|r<=rp`}) ; <(
                hideR('R=={`w*rv*h < w*vlo*(r+rp)-rv*maxA^2/(2*a)-rv*hp`}) ; QE ; done
                ,
                hideR('R=={`rv=0&r>rp`}) &
                cut({`(h+w*maxA^2/(2*a))/vlo>=maxA/a|(h+w*maxA^2/(2*a))/vlo<maxA/a`}) ; <(
                  (/*cutUse,*/ orL('L=={`(h+w*maxA^2/(2*a))/vlo>=maxA/a|(h+w*maxA^2/(2*a))/vlo<maxA/a`}) ; <(
                    allL(/*t*/ {`(h+w*maxA^2/(2*a))/vlo`}, 'L) ;
                    allL(/*ro*/ {`0`}, 'L) ;
                    allL(/*ho*/ {`h`}, 'L) ;
                    implyL('L) ; <(hideR('R=={`w*rv*h < w*vlo*(r+rp)-rv*maxA^2/(2*a)-rv*hp`}) ; QE, QE)
                    ,
                    allL(/*t*/ {`maxA/a`}, 'L) ;
                    allL(/*ro*/ {`0`}, 'L) ;
                    allL(/*ho*/ {`vlo*maxA/a-w*maxA^2/(2*a)`}, 'L) ;
                      implyL('L) ; <(hideR('R=={`w*rv*h < w*vlo*(r+rp)-rv*maxA^2/(2*a)-rv*hp`}) ; QE, QE)
                    )
                  ),
                  (/*cutShow,*/ hideR('R=={`w*rv*h < w*vlo*(r+rp)-rv*maxA^2/(2*a)-rv*hp`}) ; QE ; done)
                )
              )),
              (/*cutShow,*/ cohideR('Rlast) ; QE ; done)
            )
            ,
            print({`<- 6:rv>0`}) ; orR('R) ; hideR('R=={`rv=0&r>rp`}) ;
              allL(/*t*/ {`(r+rp)/rv`}, 'L) ;
              allL(/*ro*/ {`rv*((r+rp)/rv)`}, 'L) ;
              allL(/*ho*/ {`vlo*((r+rp)/rv)-w*maxA^2/(2*a)`}, 'L) ;
              implyL('L=={`0<=(r+rp)/rv&(r+rp)/rv < maxA/a&rv*((r+rp)/rv)=rv*((r+rp)/rv)&vlo*((r+rp)/rv)-w*maxA^2/(2*a)=w*a/2*((r+rp)/rv)^2+v*((r+rp)/rv)|(r+rp)/rv>=maxA/a&rv*((r+rp)/rv)=rv*((r+rp)/rv)&vlo*((r+rp)/rv)-w*maxA^2/(2*a)=vlo*((r+rp)/rv)-w*maxA^2/(2*a)->abs(r-rv*((r+rp)/rv))>rp|w*h < w*(vlo*((r+rp)/rv)-w*maxA^2/(2*a))-hp`}) ; <(
                QE ; done
                ,
                absExp('L=={`abs(r-rv*((r+rp)/rv))`}) ; QE ; done
            )
          )),
          (/*cutShow,*/ QE ; done)
        )
      )
    )
  )
End.

End.
