ArchiveEntry "Velocity Car".

Functions.        /* function symbols cannot change their value */
  R V().          /* maximum velocity */
  R ep().         /* reaction time */
End.

ProgramVariables. /* program variables may change their value over time */
  R x.            /* position of the car */
  R v.            /* velocity of the car */
  R m.            /* stop sign position */
  R t.            /* clock variable */
End.

Problem.          /* differential dynamic logic formula */
    x<=m & V>=0
 -> [
      {
        {?x<=m-V*ep; v:=V; ++ v:=0;}
        t := 0;
        {x'=v, t'=1 & t<=ep}
      }*@invariant(x<=m)
    ] x <= m
End.

Tactic "Velocity Car: Proof 1".
  implyR(1) ; loop({`x<=m`}, 1) ; <(
  closeId,
  closeId,
  composeb(1) ; composeb(1.1) ; choiceb(1) ; andR(1) ; <(
    composeb(1) ; testb(1) ; implyR(1) ; assignb(1) ; assignb(1) ; dC({`x<=m-V()*(ep()-t)`}, 1) ; <(
      dW(1) ; QE,
      dI(1)
      ),
    assignb(1) ; assignb(1) ; dI(1)
    )
  )
End.
       

End.
       