ArchiveEntry "Damped Oscillator".

Functions.        /* function symbols cannot change their value */
  R w().          /* undamped angular frequency */
  R c().          /* level of ellipse */
  R d().          /* constant damping ratio */
End.

ProgramVariables. /* program variables may change their value over time */
  R x.            /* position of spring/mass system */
  R y.            /* velocity */
End.

Problem.
    w()^2*x^2 + y^2 <= c()^2
->
  [{x'=y, y'=-w()^2*x-2*d()*w()*y & w()>=0 & d()>=0}]w()^2*x^2 + y^2 <= c()^2
End.

Tactic "Damped Oscillator: Differential invariant proof".
  implyR(1) ; dI(1)
End.

End.


ArchiveEntry "Increasingly Damped Oscillator".

Functions.
  R w().    /* undamped angular frequency */
  R c().    /* level of ellipse */
End.

ProgramVariables.
  R x.      /* position of spring/mass system */
  R y.      /* velocity */
  R d.      /* damping ratio */
End.

Problem.
    w()^2*x^2 + y^2 <= c()^2
  & d>=0
->
  [{x'=y, y'=-w()^2*x-2*d*w()*y, d'=7 & w()>=0}]w()^2*x^2 + y^2 <= c()^2
End.

Tactic "Increasingly Damped Oscillator: Differential cut proof".
  implyR(1) ; dC({`d>=0`}, 1) ; <(
    dI(1), 
    dI(1)
  )
End.
       

End.
